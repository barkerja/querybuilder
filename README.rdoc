= querybuilder

* http://github.com/zena/querybuilder/tree/master

== DESCRIPTION:

QueryBuilder is an interpreter for the "pseudo sql" language. This language
can be used for two purposes:

 1. protect your database from illegal SQL by securing queries
 2. ease writing complex relational queries by abstracting table internals

== SYNOPSIS:

  query = DummyQuery.new("images where name like '%flower%' from favorites")
  
  # 1. Get a string (without evaluating bind variables) of the form
       "['SELECT ... FROM ... WHERE links.source_id = ?', @node.id]".
       This string can be used to prepare ruby code (template compilation for example).
       
       str   = query.to_s
    
  # 2. get SQL (evaluate bind variables in the current binding). Produces
       "SELECT ... FROM ... WHERE links.source_id = 48762".
       
       sql   = query.sql(binding)
      
  # 3. get SQL to count
  
       sql_count_str = query.to_s(:count)
       sql_count = query.sql(binding, :count)
  
  
== REQUIREMENTS:

* yamltest

== INSTALL:

sudo gem install querybuilder

== LICENSE:

(The MIT License)

Copyright (c) 2008-2009 Gaspard Bucher

Permission is hereby granted, free of charge, to any person obtaining
a copy of this software and associated documentation files (the
'Software'), to deal in the Software without restriction, including
without limitation the rights to use, copy, modify, merge, publish,
distribute, sublicense, and/or sell copies of the Software, and to
permit persons to whom the Software is furnished to do so, subject to
the following conditions:

The above copyright notice and this permission notice shall be
included in all copies or substantial portions of the Software.

THE SOFTWARE IS PROVIDED 'AS IS', WITHOUT WARRANTY OF ANY KIND,
EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.
IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY
CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT,
TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE
SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.