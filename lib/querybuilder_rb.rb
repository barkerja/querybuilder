# line 1 "querybuilder_rb.rl"
module QueryBuilder
  class Parser
  # line 158 "querybuilder_rb.rl"


    
# line 9 "querybuilder_rb.rb"
class << self
	attr_accessor :_querybuilder_actions
	private :_querybuilder_actions, :_querybuilder_actions=
end
self._querybuilder_actions = [
	0, 1, 0, 1, 1, 1, 2, 1, 
	3, 1, 4, 1, 5, 1, 6, 1, 
	7, 1, 8, 1, 9, 1, 10, 1, 
	11, 1, 12, 1, 13, 1, 14, 1, 
	15, 1, 16, 1, 17, 1, 18, 1, 
	19, 1, 20, 1, 21, 1, 22, 1, 
	23, 2, 2, 0, 2, 2, 11, 2, 
	2, 13, 2, 3, 0, 2, 3, 11, 
	2, 3, 13, 2, 4, 0, 2, 4, 
	6, 2, 4, 11, 2, 4, 13, 2, 
	6, 4, 2, 6, 13, 2, 7, 0, 
	2, 7, 10, 2, 7, 22, 2, 8, 
	0, 2, 8, 11, 2, 8, 13, 2, 
	10, 12, 2, 12, 10, 2, 14, 13, 
	2, 15, 0, 2, 17, 0, 2, 18, 
	0, 2, 19, 0, 2, 20, 0, 2, 
	21, 0, 2, 21, 12, 2, 22, 7
]

class << self
	attr_accessor :_querybuilder_key_offsets
	private :_querybuilder_key_offsets, :_querybuilder_key_offsets=
end
self._querybuilder_key_offsets = [
	0, 0, 9, 13, 16, 17, 18, 21, 
	30, 34, 37, 38, 39, 40, 49, 58, 
	66, 67, 68, 69, 70, 73, 77, 78, 
	86, 94, 103, 104, 107, 115, 123, 124, 
	125, 126, 127, 133, 139, 141, 147, 153, 
	155, 160, 162, 163, 164, 165, 166, 172, 
	178, 180, 185, 186, 187, 188, 189, 192, 
	196, 197, 205, 213, 222, 223, 224, 228, 
	229, 230, 231, 232, 233, 234, 235, 236, 
	237, 238, 239, 247, 255, 263, 265, 269, 
	270, 271, 272, 273, 276, 290, 292, 300, 
	314, 316, 316, 320, 328, 343, 345, 356, 
	358, 368, 381, 382, 383, 386, 400, 413, 
	414, 415, 424, 425, 428, 431, 432, 433, 
	434, 437, 439, 440, 442, 443, 444, 445, 
	446, 447, 448, 449, 451, 452, 455, 459, 
	460, 461, 463, 467, 468, 469, 470, 471, 
	472, 474, 475, 476, 477, 478, 479, 482, 
	496, 498, 506, 520, 522, 522, 526, 534, 
	549, 551, 562, 564, 574, 587, 588, 589, 
	592, 606, 619, 620, 621, 630, 631, 634, 
	637, 638, 639, 640, 643, 645, 646, 648, 
	649, 650, 651, 652, 653, 654, 655, 657, 
	658, 661, 665, 666, 667, 669, 673, 674, 
	675, 676, 677, 678, 680, 681, 682, 683, 
	684, 685, 685, 686, 687, 688, 688, 696, 
	697, 698, 699, 700, 709, 717, 718, 721, 
	729, 737, 738, 739, 740, 741, 744, 758, 
	760, 768, 782, 784, 784, 788, 796, 811, 
	813, 824, 826, 836, 849, 850, 851, 854, 
	868, 881, 882, 883, 892, 893, 896, 899, 
	900, 901, 902, 905, 907, 908, 910, 911, 
	912, 913, 914, 915, 916, 917, 919, 920, 
	923, 927, 928, 929, 931, 935, 936, 937, 
	938, 939, 940, 942, 943, 944, 945, 946, 
	947, 947, 961, 963, 972, 993, 1007, 1009, 
	1009, 1013, 1022, 1037, 1052, 1054, 1066, 1068, 
	1079, 1093, 1094, 1095, 1098, 1099, 1101, 1104, 
	1105, 1106, 1108, 1109, 1112, 1116, 1117, 1118, 
	1119, 1120, 1130, 1131, 1132, 1133, 1135, 1136, 
	1137, 1138, 1139, 1140, 1141, 1142, 1143, 1144, 
	1145, 1146, 1147, 1148, 1149, 1150, 1151, 1152, 
	1152, 1161, 1165, 1169, 1174, 1175, 1176, 1177, 
	1186, 1195, 1202, 1203, 1206, 1214, 1223, 1224, 
	1225, 1226, 1227, 1230, 1244, 1246, 1255, 1278, 
	1292, 1294, 1294, 1298, 1307, 1324, 1339, 1341, 
	1353, 1355, 1366, 1380, 1381, 1382, 1385, 1386, 
	1388, 1391, 1392, 1393, 1395, 1396, 1399, 1403, 
	1404, 1405, 1406, 1407, 1417, 1418, 1419, 1420, 
	1422, 1423, 1424, 1425, 1426, 1427, 1428, 1429, 
	1430, 1431, 1432, 1433, 1434, 1435, 1436, 1437, 
	1438, 1439, 1439, 1448, 1457, 1468, 1472, 1479, 
	1485, 1491, 1500, 1505, 1510, 1533, 1550, 1573, 
	1596, 1613, 1636, 1647, 1658, 1681, 1698, 1721, 
	1721
]

class << self
	attr_accessor :_querybuilder_trans_keys
	private :_querybuilder_trans_keys, :_querybuilder_trans_keys=
end
self._querybuilder_trans_keys = [
	32, 40, 95, 9, 10, 65, 90, 97, 
	122, 32, 41, 9, 10, 32, 9, 10, 
	110, 100, 32, 9, 10, 32, 40, 95, 
	9, 10, 65, 90, 97, 122, 32, 41, 
	9, 10, 32, 9, 10, 114, 111, 109, 
	32, 40, 95, 9, 10, 65, 90, 97, 
	122, 32, 40, 95, 9, 10, 65, 90, 
	97, 122, 32, 95, 9, 10, 65, 90, 
	97, 122, 114, 111, 117, 112, 32, 9, 
	10, 32, 98, 9, 10, 121, 32, 95, 
	9, 10, 65, 90, 97, 122, 32, 95, 
	9, 10, 65, 90, 97, 122, 32, 44, 
	95, 9, 10, 65, 90, 97, 122, 110, 
	32, 9, 10, 32, 95, 9, 10, 65, 
	90, 97, 122, 32, 95, 9, 10, 65, 
	90, 97, 122, 105, 109, 105, 116, 32, 
	45, 9, 10, 48, 57, 32, 45, 9, 
	10, 48, 57, 48, 57, 32, 44, 9, 
	10, 48, 57, 32, 45, 9, 10, 48, 
	57, 48, 57, 32, 9, 10, 48, 57, 
	102, 114, 102, 115, 101, 116, 32, 45, 
	9, 10, 48, 57, 32, 45, 9, 10, 
	48, 57, 48, 57, 32, 9, 10, 48, 
	57, 114, 100, 101, 114, 32, 9, 10, 
	32, 98, 9, 10, 121, 32, 95, 9, 
	10, 65, 90, 97, 122, 32, 95, 9, 
	10, 65, 90, 97, 122, 32, 44, 95, 
	9, 10, 65, 90, 97, 122, 83, 67, 
	32, 44, 9, 10, 69, 115, 99, 101, 
	97, 103, 105, 110, 97, 116, 101, 32, 
	95, 9, 10, 65, 90, 97, 122, 32, 
	95, 9, 10, 65, 90, 97, 122, 32, 
	95, 9, 10, 65, 90, 97, 122, 102, 
	114, 32, 100, 9, 10, 104, 101, 114, 
	101, 32, 9, 10, 32, 34, 39, 40, 
	45, 95, 9, 10, 48, 57, 65, 90, 
	97, 122, 34, 92, 32, 43, 45, 61, 
	9, 10, 60, 62, 32, 34, 39, 40, 
	45, 95, 9, 10, 48, 57, 65, 90, 
	97, 122, 39, 92, 32, 41, 9, 10, 
	32, 43, 45, 61, 9, 10, 60, 62, 
	32, 34, 39, 40, 45, 61, 95, 9, 
	10, 48, 57, 65, 90, 97, 122, 48, 
	57, 32, 43, 45, 46, 61, 9, 10, 
	48, 57, 60, 62, 48, 57, 32, 43, 
	45, 61, 9, 10, 48, 57, 60, 62, 
	32, 43, 45, 61, 95, 9, 10, 60, 
	62, 65, 90, 97, 122, 110, 100, 32, 
	9, 10, 32, 34, 39, 40, 45, 95, 
	9, 10, 48, 57, 65, 90, 97, 122, 
	32, 43, 45, 61, 95, 9, 10, 60, 
	62, 65, 90, 97, 122, 97, 121, 32, 
	43, 45, 61, 115, 9, 10, 60, 62, 
	113, 32, 9, 10, 101, 114, 116, 111, 
	117, 114, 101, 105, 116, 107, 109, 101, 
	105, 111, 110, 117, 116, 101, 110, 116, 
	104, 101, 111, 116, 32, 9, 10, 32, 
	108, 9, 10, 105, 107, 102, 114, 32, 
	100, 9, 10, 101, 99, 111, 110, 100, 
	101, 104, 101, 107, 101, 114, 101, 32, 
	9, 10, 32, 34, 39, 40, 45, 95, 
	9, 10, 48, 57, 65, 90, 97, 122, 
	34, 92, 32, 43, 45, 61, 9, 10, 
	60, 62, 32, 34, 39, 40, 45, 95, 
	9, 10, 48, 57, 65, 90, 97, 122, 
	39, 92, 32, 41, 9, 10, 32, 43, 
	45, 61, 9, 10, 60, 62, 32, 34, 
	39, 40, 45, 61, 95, 9, 10, 48, 
	57, 65, 90, 97, 122, 48, 57, 32, 
	43, 45, 46, 61, 9, 10, 48, 57, 
	60, 62, 48, 57, 32, 43, 45, 61, 
	9, 10, 48, 57, 60, 62, 32, 43, 
	45, 61, 95, 9, 10, 60, 62, 65, 
	90, 97, 122, 110, 100, 32, 9, 10, 
	32, 34, 39, 40, 45, 95, 9, 10, 
	48, 57, 65, 90, 97, 122, 32, 43, 
	45, 61, 95, 9, 10, 60, 62, 65, 
	90, 97, 122, 97, 121, 32, 43, 45, 
	61, 115, 9, 10, 60, 62, 113, 32, 
	9, 10, 101, 114, 116, 111, 117, 114, 
	101, 105, 116, 107, 109, 101, 105, 111, 
	110, 117, 116, 101, 110, 116, 104, 101, 
	111, 116, 32, 9, 10, 32, 108, 9, 
	10, 105, 107, 102, 114, 32, 100, 9, 
	10, 101, 99, 111, 110, 100, 101, 104, 
	101, 107, 101, 97, 101, 101, 97, 101, 
	32, 95, 9, 10, 65, 90, 97, 122, 
	104, 114, 111, 109, 32, 40, 95, 9, 
	10, 65, 90, 97, 122, 32, 95, 9, 
	10, 65, 90, 97, 122, 110, 32, 9, 
	10, 32, 95, 9, 10, 65, 90, 97, 
	122, 32, 95, 9, 10, 65, 90, 97, 
	122, 104, 101, 114, 101, 32, 9, 10, 
	32, 34, 39, 40, 45, 95, 9, 10, 
	48, 57, 65, 90, 97, 122, 34, 92, 
	32, 43, 45, 61, 9, 10, 60, 62, 
	32, 34, 39, 40, 45, 95, 9, 10, 
	48, 57, 65, 90, 97, 122, 39, 92, 
	32, 41, 9, 10, 32, 43, 45, 61, 
	9, 10, 60, 62, 32, 34, 39, 40, 
	45, 61, 95, 9, 10, 48, 57, 65, 
	90, 97, 122, 48, 57, 32, 43, 45, 
	46, 61, 9, 10, 48, 57, 60, 62, 
	48, 57, 32, 43, 45, 61, 9, 10, 
	48, 57, 60, 62, 32, 43, 45, 61, 
	95, 9, 10, 60, 62, 65, 90, 97, 
	122, 110, 100, 32, 9, 10, 32, 34, 
	39, 40, 45, 95, 9, 10, 48, 57, 
	65, 90, 97, 122, 32, 43, 45, 61, 
	95, 9, 10, 60, 62, 65, 90, 97, 
	122, 97, 121, 32, 43, 45, 61, 115, 
	9, 10, 60, 62, 113, 32, 9, 10, 
	101, 114, 116, 111, 117, 114, 101, 105, 
	116, 107, 109, 101, 105, 111, 110, 117, 
	116, 101, 110, 116, 104, 101, 111, 116, 
	32, 9, 10, 32, 108, 9, 10, 105, 
	107, 102, 114, 32, 100, 9, 10, 101, 
	99, 111, 110, 100, 101, 104, 101, 107, 
	101, 97, 101, 32, 34, 39, 40, 45, 
	95, 9, 10, 48, 57, 65, 90, 97, 
	122, 34, 92, 32, 41, 43, 45, 61, 
	9, 10, 60, 62, 32, 41, 43, 45, 
	61, 97, 100, 101, 103, 104, 108, 109, 
	110, 111, 115, 119, 121, 9, 10, 60, 
	62, 32, 34, 39, 40, 45, 95, 9, 
	10, 48, 57, 65, 90, 97, 122, 39, 
	92, 32, 41, 9, 10, 32, 41, 43, 
	45, 61, 9, 10, 60, 62, 32, 41, 
	43, 45, 61, 97, 101, 103, 108, 110, 
	111, 9, 10, 60, 62, 32, 34, 39, 
	40, 45, 61, 95, 9, 10, 48, 57, 
	65, 90, 97, 122, 48, 57, 32, 41, 
	43, 45, 46, 61, 9, 10, 48, 57, 
	60, 62, 48, 57, 32, 41, 43, 45, 
	61, 9, 10, 48, 57, 60, 62, 32, 
	41, 43, 45, 61, 95, 9, 10, 60, 
	62, 65, 90, 97, 122, 110, 100, 32, 
	9, 10, 113, 101, 116, 101, 105, 116, 
	107, 101, 101, 111, 116, 32, 9, 10, 
	32, 108, 9, 10, 105, 114, 97, 121, 
	32, 41, 43, 45, 61, 115, 9, 10, 
	60, 62, 111, 117, 114, 105, 111, 110, 
	117, 116, 101, 110, 116, 104, 101, 99, 
	111, 110, 100, 101, 101, 107, 101, 97, 
	32, 40, 95, 9, 10, 65, 90, 97, 
	122, 32, 41, 9, 10, 32, 41, 9, 
	10, 32, 41, 102, 9, 10, 114, 111, 
	109, 32, 40, 95, 9, 10, 65, 90, 
	97, 122, 32, 41, 95, 9, 10, 65, 
	90, 97, 122, 32, 41, 102, 105, 119, 
	9, 10, 110, 32, 9, 10, 32, 95, 
	9, 10, 65, 90, 97, 122, 32, 41, 
	95, 9, 10, 65, 90, 97, 122, 104, 
	101, 114, 101, 32, 9, 10, 32, 34, 
	39, 40, 45, 95, 9, 10, 48, 57, 
	65, 90, 97, 122, 34, 92, 32, 41, 
	43, 45, 61, 9, 10, 60, 62, 32, 
	41, 43, 45, 61, 97, 100, 101, 102, 
	103, 104, 105, 108, 109, 110, 111, 115, 
	119, 121, 9, 10, 60, 62, 32, 34, 
	39, 40, 45, 95, 9, 10, 48, 57, 
	65, 90, 97, 122, 39, 92, 32, 41, 
	9, 10, 32, 41, 43, 45, 61, 9, 
	10, 60, 62, 32, 41, 43, 45, 61, 
	97, 101, 102, 103, 105, 108, 110, 111, 
	9, 10, 60, 62, 32, 34, 39, 40, 
	45, 61, 95, 9, 10, 48, 57, 65, 
	90, 97, 122, 48, 57, 32, 41, 43, 
	45, 46, 61, 9, 10, 48, 57, 60, 
	62, 48, 57, 32, 41, 43, 45, 61, 
	9, 10, 48, 57, 60, 62, 32, 41, 
	43, 45, 61, 95, 9, 10, 60, 62, 
	65, 90, 97, 122, 110, 100, 32, 9, 
	10, 113, 101, 116, 101, 105, 116, 107, 
	101, 101, 111, 116, 32, 9, 10, 32, 
	108, 9, 10, 105, 114, 97, 121, 32, 
	41, 43, 45, 61, 115, 9, 10, 60, 
	62, 111, 117, 114, 105, 111, 110, 117, 
	116, 101, 110, 116, 104, 101, 99, 111, 
	110, 100, 101, 101, 107, 101, 97, 32, 
	97, 102, 103, 108, 111, 112, 9, 10, 
	32, 97, 102, 103, 108, 111, 112, 9, 
	10, 32, 97, 102, 103, 105, 108, 111, 
	112, 119, 9, 10, 32, 44, 9, 10, 
	32, 44, 103, 111, 112, 9, 10, 32, 
	103, 111, 112, 9, 10, 32, 103, 111, 
	112, 9, 10, 32, 44, 65, 68, 97, 
	100, 103, 9, 10, 32, 44, 103, 9, 
	10, 32, 103, 111, 9, 10, 32, 43, 
	45, 61, 97, 100, 101, 102, 103, 104, 
	105, 108, 109, 110, 111, 112, 115, 119, 
	121, 9, 10, 60, 62, 32, 43, 45, 
	61, 97, 101, 102, 103, 105, 108, 110, 
	111, 112, 9, 10, 60, 62, 32, 43, 
	45, 61, 97, 100, 101, 102, 103, 104, 
	105, 108, 109, 110, 111, 112, 115, 119, 
	121, 9, 10, 60, 62, 32, 43, 45, 
	61, 97, 100, 101, 102, 103, 104, 105, 
	108, 109, 110, 111, 112, 115, 119, 121, 
	9, 10, 60, 62, 32, 43, 45, 61, 
	97, 101, 102, 103, 105, 108, 110, 111, 
	112, 9, 10, 60, 62, 32, 43, 45, 
	61, 97, 100, 101, 102, 103, 104, 105, 
	108, 109, 110, 111, 112, 115, 119, 121, 
	9, 10, 60, 62, 32, 97, 102, 103, 
	105, 108, 111, 112, 119, 9, 10, 32, 
	97, 102, 103, 105, 108, 111, 112, 119, 
	9, 10, 32, 43, 45, 61, 97, 100, 
	101, 102, 103, 104, 105, 108, 109, 110, 
	111, 112, 115, 119, 121, 9, 10, 60, 
	62, 32, 43, 45, 61, 97, 101, 102, 
	103, 105, 108, 110, 111, 112, 9, 10, 
	60, 62, 32, 43, 45, 61, 97, 100, 
	101, 102, 103, 104, 105, 108, 109, 110, 
	111, 112, 115, 119, 121, 9, 10, 60, 
	62, 0
]

class << self
	attr_accessor :_querybuilder_single_lengths
	private :_querybuilder_single_lengths, :_querybuilder_single_lengths=
end
self._querybuilder_single_lengths = [
	0, 3, 2, 1, 1, 1, 1, 3, 
	2, 1, 1, 1, 1, 3, 3, 2, 
	1, 1, 1, 1, 1, 2, 1, 2, 
	2, 3, 1, 1, 2, 2, 1, 1, 
	1, 1, 2, 2, 0, 2, 2, 0, 
	1, 2, 1, 1, 1, 1, 2, 2, 
	0, 1, 1, 1, 1, 1, 1, 2, 
	1, 2, 2, 3, 1, 1, 2, 1, 
	1, 1, 1, 1, 1, 1, 1, 1, 
	1, 1, 2, 2, 2, 2, 2, 1, 
	1, 1, 1, 1, 6, 2, 4, 6, 
	2, 0, 2, 4, 7, 0, 5, 0, 
	4, 5, 1, 1, 1, 6, 5, 1, 
	1, 5, 1, 1, 3, 1, 1, 1, 
	3, 2, 1, 2, 1, 1, 1, 1, 
	1, 1, 1, 2, 1, 1, 2, 1, 
	1, 2, 2, 1, 1, 1, 1, 1, 
	2, 1, 1, 1, 1, 1, 1, 6, 
	2, 4, 6, 2, 0, 2, 4, 7, 
	0, 5, 0, 4, 5, 1, 1, 1, 
	6, 5, 1, 1, 5, 1, 1, 3, 
	1, 1, 1, 3, 2, 1, 2, 1, 
	1, 1, 1, 1, 1, 1, 2, 1, 
	1, 2, 1, 1, 2, 2, 1, 1, 
	1, 1, 1, 2, 1, 1, 1, 1, 
	1, 0, 1, 1, 1, 0, 2, 1, 
	1, 1, 1, 3, 2, 1, 1, 2, 
	2, 1, 1, 1, 1, 1, 6, 2, 
	4, 6, 2, 0, 2, 4, 7, 0, 
	5, 0, 4, 5, 1, 1, 1, 6, 
	5, 1, 1, 5, 1, 1, 3, 1, 
	1, 1, 3, 2, 1, 2, 1, 1, 
	1, 1, 1, 1, 1, 2, 1, 1, 
	2, 1, 1, 2, 2, 1, 1, 1, 
	1, 1, 2, 1, 1, 1, 1, 1, 
	0, 6, 2, 5, 17, 6, 2, 0, 
	2, 5, 11, 7, 0, 6, 0, 5, 
	6, 1, 1, 1, 1, 2, 3, 1, 
	1, 2, 1, 1, 2, 1, 1, 1, 
	1, 6, 1, 1, 1, 2, 1, 1, 
	1, 1, 1, 1, 1, 1, 1, 1, 
	1, 1, 1, 1, 1, 1, 1, 0, 
	3, 2, 2, 3, 1, 1, 1, 3, 
	3, 5, 1, 1, 2, 3, 1, 1, 
	1, 1, 1, 6, 2, 5, 19, 6, 
	2, 0, 2, 5, 13, 7, 0, 6, 
	0, 5, 6, 1, 1, 1, 1, 2, 
	3, 1, 1, 2, 1, 1, 2, 1, 
	1, 1, 1, 6, 1, 1, 1, 2, 
	1, 1, 1, 1, 1, 1, 1, 1, 
	1, 1, 1, 1, 1, 1, 1, 1, 
	1, 0, 7, 7, 9, 2, 5, 4, 
	4, 7, 3, 3, 19, 13, 19, 19, 
	13, 19, 9, 9, 19, 13, 19, 0, 
	0
]

class << self
	attr_accessor :_querybuilder_range_lengths
	private :_querybuilder_range_lengths, :_querybuilder_range_lengths=
end
self._querybuilder_range_lengths = [
	0, 3, 1, 1, 0, 0, 1, 3, 
	1, 1, 0, 0, 0, 3, 3, 3, 
	0, 0, 0, 0, 1, 1, 0, 3, 
	3, 3, 0, 1, 3, 3, 0, 0, 
	0, 0, 2, 2, 1, 2, 2, 1, 
	2, 0, 0, 0, 0, 0, 2, 2, 
	1, 2, 0, 0, 0, 0, 1, 1, 
	0, 3, 3, 3, 0, 0, 1, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 3, 3, 3, 0, 1, 0, 
	0, 0, 0, 1, 4, 0, 2, 4, 
	0, 0, 1, 2, 4, 1, 3, 1, 
	3, 4, 0, 0, 1, 4, 4, 0, 
	0, 2, 0, 1, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 1, 1, 0, 
	0, 0, 1, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 1, 4, 
	0, 2, 4, 0, 0, 1, 2, 4, 
	1, 3, 1, 3, 4, 0, 0, 1, 
	4, 4, 0, 0, 2, 0, 1, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	1, 1, 0, 0, 0, 1, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 3, 0, 
	0, 0, 0, 3, 3, 0, 1, 3, 
	3, 0, 0, 0, 0, 1, 4, 0, 
	2, 4, 0, 0, 1, 2, 4, 1, 
	3, 1, 3, 4, 0, 0, 1, 4, 
	4, 0, 0, 2, 0, 1, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 1, 
	1, 0, 0, 0, 1, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 4, 0, 2, 2, 4, 0, 0, 
	1, 2, 2, 4, 1, 3, 1, 3, 
	4, 0, 0, 1, 0, 0, 0, 0, 
	0, 0, 0, 1, 1, 0, 0, 0, 
	0, 2, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	3, 1, 1, 1, 0, 0, 0, 3, 
	3, 1, 0, 1, 3, 3, 0, 0, 
	0, 0, 1, 4, 0, 2, 2, 4, 
	0, 0, 1, 2, 2, 4, 1, 3, 
	1, 3, 4, 0, 0, 1, 0, 0, 
	0, 0, 0, 0, 0, 1, 1, 0, 
	0, 0, 0, 2, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 1, 1, 1, 1, 1, 1, 
	1, 1, 1, 1, 2, 2, 2, 2, 
	2, 2, 1, 1, 2, 2, 2, 0, 
	0
]

class << self
	attr_accessor :_querybuilder_index_offsets
	private :_querybuilder_index_offsets, :_querybuilder_index_offsets=
end
self._querybuilder_index_offsets = [
	0, 0, 7, 11, 14, 16, 18, 21, 
	28, 32, 35, 37, 39, 41, 48, 55, 
	61, 63, 65, 67, 69, 72, 76, 78, 
	84, 90, 97, 99, 102, 108, 114, 116, 
	118, 120, 122, 127, 132, 134, 139, 144, 
	146, 150, 153, 155, 157, 159, 161, 166, 
	171, 173, 177, 179, 181, 183, 185, 188, 
	192, 194, 200, 206, 213, 215, 217, 221, 
	223, 225, 227, 229, 231, 233, 235, 237, 
	239, 241, 243, 249, 255, 261, 264, 268, 
	270, 272, 274, 276, 279, 290, 293, 300, 
	311, 314, 315, 319, 326, 338, 340, 349, 
	351, 359, 369, 371, 373, 376, 387, 397, 
	399, 401, 409, 411, 414, 418, 420, 422, 
	424, 428, 431, 433, 436, 438, 440, 442, 
	444, 446, 448, 450, 453, 455, 458, 462, 
	464, 466, 469, 473, 475, 477, 479, 481, 
	483, 486, 488, 490, 492, 494, 496, 499, 
	510, 513, 520, 531, 534, 535, 539, 546, 
	558, 560, 569, 571, 579, 589, 591, 593, 
	596, 607, 617, 619, 621, 629, 631, 634, 
	638, 640, 642, 644, 648, 651, 653, 656, 
	658, 660, 662, 664, 666, 668, 670, 673, 
	675, 678, 682, 684, 686, 689, 693, 695, 
	697, 699, 701, 703, 706, 708, 710, 712, 
	714, 716, 717, 719, 721, 723, 724, 730, 
	732, 734, 736, 738, 745, 751, 753, 756, 
	762, 768, 770, 772, 774, 776, 779, 790, 
	793, 800, 811, 814, 815, 819, 826, 838, 
	840, 849, 851, 859, 869, 871, 873, 876, 
	887, 897, 899, 901, 909, 911, 914, 918, 
	920, 922, 924, 928, 931, 933, 936, 938, 
	940, 942, 944, 946, 948, 950, 953, 955, 
	958, 962, 964, 966, 969, 973, 975, 977, 
	979, 981, 983, 986, 988, 990, 992, 994, 
	996, 997, 1008, 1011, 1019, 1039, 1050, 1053, 
	1054, 1058, 1066, 1080, 1092, 1094, 1104, 1106, 
	1115, 1126, 1128, 1130, 1133, 1135, 1138, 1142, 
	1144, 1146, 1149, 1151, 1154, 1158, 1160, 1162, 
	1164, 1166, 1175, 1177, 1179, 1181, 1184, 1186, 
	1188, 1190, 1192, 1194, 1196, 1198, 1200, 1202, 
	1204, 1206, 1208, 1210, 1212, 1214, 1216, 1218, 
	1219, 1226, 1230, 1234, 1239, 1241, 1243, 1245, 
	1252, 1259, 1266, 1268, 1271, 1277, 1284, 1286, 
	1288, 1290, 1292, 1295, 1306, 1309, 1317, 1339, 
	1350, 1353, 1354, 1358, 1366, 1382, 1394, 1396, 
	1406, 1408, 1417, 1428, 1430, 1432, 1435, 1437, 
	1440, 1444, 1446, 1448, 1451, 1453, 1456, 1460, 
	1462, 1464, 1466, 1468, 1477, 1479, 1481, 1483, 
	1486, 1488, 1490, 1492, 1494, 1496, 1498, 1500, 
	1502, 1504, 1506, 1508, 1510, 1512, 1514, 1516, 
	1518, 1520, 1521, 1530, 1539, 1550, 1554, 1561, 
	1567, 1573, 1582, 1587, 1592, 1614, 1630, 1652, 
	1674, 1690, 1712, 1723, 1734, 1756, 1772, 1794, 
	1795
]

class << self
	attr_accessor :_querybuilder_indicies
	private :_querybuilder_indicies, :_querybuilder_indicies=
end
self._querybuilder_indicies = [
	0, 2, 3, 0, 3, 3, 1, 4, 
	5, 4, 1, 7, 7, 6, 8, 1, 
	9, 1, 10, 10, 1, 11, 12, 13, 
	11, 13, 13, 1, 14, 15, 14, 1, 
	16, 16, 6, 17, 1, 18, 1, 19, 
	1, 20, 21, 22, 20, 22, 22, 1, 
	23, 12, 24, 23, 24, 24, 1, 25, 
	24, 25, 24, 24, 6, 26, 1, 27, 
	1, 28, 1, 29, 1, 30, 30, 1, 
	30, 31, 30, 1, 32, 1, 33, 34, 
	33, 34, 34, 1, 35, 36, 35, 36, 
	36, 1, 37, 38, 36, 37, 36, 36, 
	6, 39, 1, 40, 40, 1, 40, 41, 
	40, 41, 41, 1, 42, 41, 42, 41, 
	41, 6, 43, 1, 44, 1, 45, 1, 
	46, 1, 47, 48, 47, 49, 1, 50, 
	51, 50, 52, 1, 52, 1, 53, 54, 
	53, 52, 6, 55, 56, 55, 57, 1, 
	57, 1, 58, 58, 57, 6, 59, 60, 
	1, 61, 1, 62, 1, 63, 1, 64, 
	1, 65, 66, 65, 67, 1, 68, 69, 
	68, 70, 1, 70, 1, 71, 71, 70, 
	6, 60, 1, 72, 1, 73, 1, 74, 
	1, 75, 75, 1, 75, 76, 75, 1, 
	77, 1, 78, 79, 78, 79, 79, 1, 
	80, 81, 80, 81, 81, 1, 82, 83, 
	81, 82, 81, 81, 6, 84, 1, 85, 
	1, 86, 87, 86, 6, 88, 1, 89, 
	1, 85, 1, 90, 1, 91, 1, 92, 
	1, 93, 1, 94, 1, 95, 1, 96, 
	1, 97, 1, 98, 99, 98, 99, 99, 
	1, 100, 101, 100, 101, 101, 1, 102, 
	101, 102, 101, 101, 6, 59, 103, 1, 
	10, 72, 10, 1, 104, 1, 105, 1, 
	106, 1, 107, 1, 108, 108, 1, 109, 
	110, 111, 112, 113, 115, 109, 114, 115, 
	115, 1, 117, 118, 116, 119, 120, 120, 
	120, 119, 121, 6, 122, 123, 124, 125, 
	126, 128, 122, 127, 128, 128, 1, 117, 
	130, 129, 129, 131, 132, 131, 1, 133, 
	120, 120, 120, 133, 121, 6, 122, 123, 
	124, 125, 126, 120, 128, 122, 127, 128, 
	128, 1, 114, 1, 134, 135, 135, 136, 
	135, 134, 114, 137, 6, 138, 1, 139, 
	140, 140, 140, 139, 138, 141, 6, 142, 
	143, 143, 143, 115, 142, 144, 115, 115, 
	6, 145, 1, 146, 1, 147, 147, 1, 
	148, 110, 111, 149, 113, 150, 148, 114, 
	150, 150, 1, 151, 143, 143, 143, 150, 
	151, 144, 150, 150, 6, 152, 1, 153, 
	1, 154, 155, 155, 155, 157, 154, 156, 
	6, 158, 1, 122, 122, 1, 158, 26, 
	158, 1, 159, 1, 160, 1, 153, 1, 
	158, 161, 158, 1, 162, 44, 1, 158, 
	1, 163, 164, 1, 165, 1, 166, 1, 
	167, 1, 153, 1, 168, 1, 169, 1, 
	153, 1, 158, 170, 1, 171, 1, 172, 
	172, 1, 173, 174, 173, 1, 175, 1, 
	162, 1, 59, 176, 1, 147, 72, 147, 
	1, 177, 1, 178, 1, 179, 1, 180, 
	1, 153, 1, 181, 182, 1, 183, 1, 
	153, 1, 184, 1, 185, 1, 186, 1, 
	187, 187, 1, 188, 189, 190, 191, 192, 
	194, 188, 193, 194, 194, 1, 196, 197, 
	195, 198, 199, 199, 199, 198, 200, 6, 
	201, 202, 203, 204, 205, 207, 201, 206, 
	207, 207, 1, 196, 209, 208, 208, 210, 
	211, 210, 1, 212, 199, 199, 199, 212, 
	200, 6, 201, 202, 203, 204, 205, 199, 
	207, 201, 206, 207, 207, 1, 193, 1, 
	213, 214, 214, 215, 214, 213, 193, 216, 
	6, 217, 1, 218, 219, 219, 219, 218, 
	217, 220, 6, 221, 222, 222, 222, 194, 
	221, 223, 194, 194, 6, 224, 1, 225, 
	1, 226, 226, 1, 227, 189, 190, 228, 
	192, 229, 227, 193, 229, 229, 1, 230, 
	222, 222, 222, 229, 230, 223, 229, 229, 
	6, 231, 1, 232, 1, 233, 234, 234, 
	234, 236, 233, 235, 6, 237, 1, 201, 
	201, 1, 237, 26, 237, 1, 238, 1, 
	239, 1, 232, 1, 237, 240, 237, 1, 
	241, 44, 1, 237, 1, 242, 243, 1, 
	244, 1, 245, 1, 246, 1, 232, 1, 
	247, 1, 248, 1, 232, 1, 237, 249, 
	1, 250, 1, 251, 251, 1, 252, 253, 
	252, 1, 254, 1, 241, 1, 59, 255, 
	1, 226, 72, 226, 1, 256, 1, 257, 
	1, 258, 1, 259, 1, 232, 1, 260, 
	182, 1, 261, 1, 232, 1, 262, 1, 
	239, 1, 260, 1, 195, 263, 1, 160, 
	1, 181, 1, 116, 264, 13, 264, 13, 
	13, 6, 182, 1, 265, 1, 266, 1, 
	267, 1, 268, 269, 270, 268, 270, 270, 
	1, 271, 3, 271, 3, 3, 6, 272, 
	1, 273, 273, 1, 273, 274, 273, 274, 
	274, 1, 275, 274, 275, 274, 274, 6, 
	276, 1, 277, 1, 278, 1, 279, 1, 
	280, 280, 1, 281, 282, 283, 284, 285, 
	287, 281, 286, 287, 287, 1, 289, 290, 
	288, 291, 292, 292, 292, 291, 293, 6, 
	294, 295, 296, 297, 298, 300, 294, 299, 
	300, 300, 1, 289, 302, 301, 301, 303, 
	304, 303, 1, 305, 292, 292, 292, 305, 
	293, 6, 294, 295, 296, 297, 298, 292, 
	300, 294, 299, 300, 300, 1, 286, 1, 
	306, 307, 307, 308, 307, 306, 286, 309, 
	6, 310, 1, 311, 312, 312, 312, 311, 
	310, 313, 6, 314, 315, 315, 315, 287, 
	314, 316, 287, 287, 6, 317, 1, 318, 
	1, 319, 319, 1, 320, 282, 283, 321, 
	285, 322, 320, 286, 322, 322, 1, 323, 
	315, 315, 315, 322, 323, 316, 322, 322, 
	6, 324, 1, 325, 1, 326, 327, 327, 
	327, 329, 326, 328, 6, 330, 1, 294, 
	294, 1, 330, 26, 330, 1, 331, 1, 
	332, 1, 325, 1, 330, 333, 330, 1, 
	334, 44, 1, 330, 1, 335, 336, 1, 
	337, 1, 338, 1, 339, 1, 325, 1, 
	340, 1, 341, 1, 325, 1, 330, 342, 
	1, 343, 1, 344, 344, 1, 345, 346, 
	345, 1, 347, 1, 334, 1, 59, 348, 
	1, 319, 72, 319, 1, 349, 1, 350, 
	1, 351, 1, 352, 1, 325, 1, 353, 
	182, 1, 354, 1, 325, 1, 355, 1, 
	332, 1, 353, 1, 288, 356, 357, 358, 
	359, 360, 362, 356, 361, 362, 362, 1, 
	364, 365, 363, 366, 367, 368, 368, 368, 
	366, 369, 1, 366, 367, 368, 368, 368, 
	370, 371, 372, 373, 374, 375, 376, 377, 
	378, 379, 380, 381, 366, 369, 1, 382, 
	383, 384, 385, 386, 388, 382, 387, 388, 
	388, 1, 364, 390, 389, 389, 391, 392, 
	391, 1, 393, 367, 368, 368, 368, 393, 
	369, 1, 393, 367, 368, 368, 368, 370, 
	372, 373, 375, 377, 378, 393, 369, 1, 
	382, 383, 384, 385, 386, 368, 388, 382, 
	387, 388, 388, 1, 361, 1, 394, 395, 
	396, 396, 397, 396, 394, 361, 398, 1, 
	399, 1, 400, 401, 402, 402, 402, 400, 
	399, 403, 1, 404, 405, 406, 406, 406, 
	362, 404, 407, 362, 362, 1, 408, 1, 
	409, 1, 382, 382, 1, 409, 1, 409, 
	409, 1, 409, 410, 409, 1, 411, 1, 
	409, 1, 409, 412, 1, 413, 1, 414, 
	414, 1, 415, 416, 415, 1, 410, 1, 
	409, 1, 417, 1, 418, 1, 419, 420, 
	421, 421, 421, 423, 419, 422, 1, 424, 
	1, 425, 1, 418, 1, 426, 427, 1, 
	428, 1, 429, 1, 430, 1, 418, 1, 
	431, 1, 432, 1, 418, 1, 433, 1, 
	434, 1, 435, 1, 436, 1, 418, 1, 
	437, 1, 438, 1, 418, 1, 439, 1, 
	425, 1, 363, 440, 441, 442, 440, 442, 
	442, 1, 443, 444, 443, 1, 445, 446, 
	445, 1, 445, 446, 447, 445, 1, 448, 
	1, 449, 1, 450, 1, 451, 452, 453, 
	451, 453, 453, 1, 454, 455, 442, 454, 
	442, 442, 1, 456, 446, 447, 457, 458, 
	456, 1, 459, 1, 460, 460, 1, 460, 
	461, 460, 461, 461, 1, 462, 463, 461, 
	462, 461, 461, 1, 464, 1, 465, 1, 
	466, 1, 467, 1, 468, 468, 1, 469, 
	470, 471, 472, 473, 475, 469, 474, 475, 
	475, 1, 477, 478, 476, 479, 446, 480, 
	480, 480, 479, 481, 1, 479, 446, 480, 
	480, 480, 482, 483, 484, 447, 485, 486, 
	457, 487, 488, 489, 490, 491, 492, 493, 
	479, 481, 1, 494, 495, 496, 497, 498, 
	500, 494, 499, 500, 500, 1, 477, 502, 
	501, 501, 503, 504, 503, 1, 505, 446, 
	480, 480, 480, 505, 481, 1, 505, 446, 
	480, 480, 480, 482, 484, 447, 485, 457, 
	487, 489, 490, 505, 481, 1, 494, 495, 
	496, 497, 498, 480, 500, 494, 499, 500, 
	500, 1, 474, 1, 506, 507, 508, 508, 
	509, 508, 506, 474, 510, 1, 511, 1, 
	512, 513, 514, 514, 514, 512, 511, 515, 
	1, 516, 517, 518, 518, 518, 475, 516, 
	519, 475, 475, 1, 520, 1, 521, 1, 
	494, 494, 1, 521, 1, 521, 521, 1, 
	521, 522, 521, 1, 523, 1, 521, 1, 
	521, 524, 1, 525, 1, 526, 526, 1, 
	527, 528, 527, 1, 522, 1, 521, 1, 
	529, 1, 530, 1, 531, 532, 533, 533, 
	533, 535, 531, 534, 1, 536, 1, 537, 
	1, 530, 1, 538, 539, 1, 540, 1, 
	541, 1, 542, 1, 530, 1, 543, 1, 
	544, 1, 530, 1, 545, 1, 546, 1, 
	547, 1, 548, 1, 530, 1, 549, 1, 
	550, 1, 530, 1, 551, 1, 537, 1, 
	476, 7, 552, 553, 554, 555, 556, 557, 
	7, 6, 16, 552, 558, 554, 555, 556, 
	557, 16, 6, 559, 552, 558, 554, 560, 
	555, 556, 557, 561, 559, 6, 562, 35, 
	562, 6, 563, 55, 554, 564, 557, 563, 
	6, 565, 554, 564, 557, 565, 6, 566, 
	554, 567, 557, 566, 6, 568, 80, 88, 
	569, 90, 570, 554, 568, 6, 571, 80, 
	554, 571, 6, 572, 554, 567, 572, 6, 
	119, 120, 120, 120, 573, 574, 575, 558, 
	576, 577, 560, 578, 579, 580, 581, 557, 
	582, 583, 584, 119, 121, 6, 133, 120, 
	120, 120, 573, 575, 558, 576, 560, 578, 
	580, 581, 557, 133, 121, 6, 585, 120, 
	120, 120, 573, 574, 575, 558, 576, 577, 
	560, 578, 579, 580, 581, 557, 582, 586, 
	584, 585, 121, 6, 198, 199, 199, 199, 
	587, 588, 589, 558, 590, 591, 560, 592, 
	593, 594, 595, 557, 596, 597, 598, 198, 
	200, 6, 212, 199, 199, 199, 587, 589, 
	558, 590, 560, 592, 594, 595, 557, 212, 
	200, 6, 599, 199, 199, 199, 587, 588, 
	589, 558, 590, 591, 560, 592, 593, 594, 
	595, 557, 596, 600, 598, 599, 200, 6, 
	601, 552, 558, 554, 560, 555, 556, 557, 
	602, 601, 6, 603, 552, 553, 554, 604, 
	555, 556, 557, 605, 603, 6, 291, 292, 
	292, 292, 606, 607, 608, 553, 609, 610, 
	604, 611, 612, 613, 614, 557, 615, 616, 
	617, 291, 293, 6, 305, 292, 292, 292, 
	606, 608, 553, 609, 604, 611, 613, 614, 
	557, 305, 293, 6, 618, 292, 292, 292, 
	606, 607, 608, 553, 609, 610, 604, 611, 
	612, 613, 614, 557, 615, 619, 617, 618, 
	293, 6, 1, 1, 0
]

class << self
	attr_accessor :_querybuilder_trans_targs
	private :_querybuilder_trans_targs, :_querybuilder_trans_targs=
end
self._querybuilder_trans_targs = [
	1, 0, 2, 212, 2, 3, 0, 410, 
	5, 6, 7, 7, 8, 206, 8, 9, 
	411, 11, 12, 13, 14, 8, 15, 14, 
	15, 412, 17, 18, 19, 20, 21, 22, 
	23, 24, 25, 24, 25, 413, 24, 27, 
	28, 29, 411, 31, 32, 33, 34, 35, 
	36, 37, 35, 36, 37, 414, 38, 38, 
	39, 40, 415, 42, 51, 43, 44, 45, 
	46, 47, 48, 49, 47, 48, 49, 416, 
	52, 53, 54, 55, 56, 57, 58, 59, 
	58, 59, 417, 58, 61, 62, 418, 58, 
	60, 65, 64, 68, 69, 70, 71, 72, 
	73, 74, 75, 76, 75, 76, 419, 78, 
	80, 81, 82, 83, 84, 84, 85, 88, 
	90, 93, 94, 97, 85, 86, 205, 420, 
	87, 92, 84, 85, 88, 90, 93, 94, 
	97, 88, 89, 90, 91, 421, 420, 87, 
	95, 92, 96, 420, 87, 92, 420, 87, 
	92, 99, 100, 101, 101, 90, 102, 422, 
	104, 105, 421, 87, 92, 91, 107, 110, 
	111, 113, 114, 116, 120, 117, 118, 119, 
	121, 122, 124, 125, 126, 126, 127, 128, 
	130, 132, 133, 134, 135, 137, 139, 138, 
	140, 141, 142, 143, 143, 144, 147, 149, 
	152, 153, 156, 144, 145, 201, 423, 146, 
	151, 143, 144, 147, 149, 152, 153, 156, 
	147, 148, 149, 150, 424, 423, 146, 154, 
	151, 155, 423, 146, 151, 423, 146, 151, 
	158, 159, 160, 160, 149, 161, 425, 163, 
	164, 424, 146, 151, 150, 166, 169, 170, 
	172, 173, 175, 179, 176, 177, 178, 180, 
	181, 183, 184, 185, 185, 186, 187, 189, 
	191, 192, 193, 194, 196, 197, 199, 203, 
	426, 209, 210, 211, 1, 2, 212, 427, 
	214, 215, 216, 410, 218, 219, 220, 221, 
	222, 222, 223, 226, 228, 231, 232, 235, 
	223, 224, 280, 428, 225, 230, 222, 223, 
	226, 228, 231, 232, 235, 226, 227, 228, 
	229, 429, 428, 225, 233, 230, 234, 428, 
	225, 230, 428, 225, 230, 237, 238, 239, 
	239, 228, 240, 430, 242, 243, 429, 225, 
	230, 229, 245, 248, 249, 251, 252, 254, 
	258, 255, 256, 257, 259, 260, 262, 263, 
	264, 264, 265, 266, 268, 270, 271, 272, 
	273, 275, 276, 278, 281, 282, 286, 288, 
	292, 293, 296, 282, 283, 335, 284, 431, 
	285, 291, 297, 311, 300, 301, 314, 302, 
	317, 305, 310, 325, 330, 333, 281, 282, 
	286, 288, 292, 293, 296, 286, 287, 288, 
	289, 290, 284, 431, 285, 294, 291, 295, 
	284, 431, 285, 291, 284, 431, 285, 291, 
	298, 299, 303, 304, 306, 307, 308, 308, 
	309, 312, 313, 290, 431, 285, 291, 289, 
	315, 316, 318, 322, 319, 320, 321, 323, 
	324, 326, 327, 328, 329, 331, 332, 334, 
	336, 337, 344, 337, 338, 339, 432, 340, 
	341, 342, 343, 336, 337, 344, 345, 432, 
	345, 346, 350, 347, 348, 349, 339, 432, 
	351, 352, 353, 354, 355, 355, 356, 360, 
	362, 366, 367, 370, 356, 357, 409, 358, 
	359, 365, 371, 385, 374, 375, 388, 376, 
	391, 379, 384, 399, 404, 407, 355, 356, 
	360, 362, 366, 367, 370, 360, 361, 362, 
	363, 364, 358, 432, 359, 368, 365, 369, 
	358, 432, 359, 365, 358, 432, 359, 365, 
	372, 373, 377, 378, 380, 381, 382, 382, 
	383, 386, 387, 364, 432, 359, 365, 363, 
	389, 390, 392, 396, 393, 394, 395, 397, 
	398, 400, 401, 402, 403, 405, 406, 408, 
	4, 208, 16, 30, 77, 67, 10, 412, 
	26, 79, 413, 414, 41, 415, 416, 50, 
	417, 63, 66, 418, 419, 98, 103, 106, 
	108, 109, 112, 115, 123, 129, 131, 204, 
	202, 422, 136, 157, 162, 165, 167, 168, 
	171, 174, 182, 188, 190, 200, 198, 425, 
	195, 426, 207, 427, 213, 217, 236, 241, 
	244, 246, 247, 250, 253, 261, 267, 269, 
	279, 277, 430, 274
]

class << self
	attr_accessor :_querybuilder_trans_actions
	private :_querybuilder_trans_actions, :_querybuilder_trans_actions=
end
self._querybuilder_trans_actions = [
	0, 0, 25, 1, 0, 0, 47, 0, 
	1, 1, 45, 0, 25, 1, 0, 0, 
	0, 0, 0, 0, 43, 130, 127, 0, 
	1, 13, 0, 0, 0, 0, 0, 0, 
	0, 41, 124, 0, 1, 9, 9, 0, 
	0, 1, 29, 0, 0, 0, 0, 37, 
	118, 118, 0, 1, 1, 5, 5, 0, 
	1, 1, 5, 0, 0, 0, 0, 0, 
	0, 31, 112, 112, 0, 1, 1, 5, 
	0, 0, 0, 0, 0, 0, 39, 121, 
	0, 1, 9, 9, 1, 1, 11, 11, 
	1, 1, 1, 0, 0, 0, 0, 0, 
	0, 0, 35, 115, 0, 1, 33, 1, 
	0, 0, 0, 0, 19, 0, 0, 0, 
	21, 1, 1, 1, 1, 3, 0, 0, 
	1, 1, 15, 15, 15, 88, 85, 85, 
	85, 1, 0, 0, 0, 0, 5, 49, 
	1, 49, 1, 7, 58, 58, 9, 67, 
	67, 1, 1, 133, 0, 106, 1, 79, 
	1, 1, 17, 94, 94, 17, 1, 1, 
	1, 1, 1, 1, 1, 1, 1, 1, 
	1, 1, 1, 1, 15, 0, 1, 1, 
	1, 1, 1, 1, 1, 1, 0, 1, 
	0, 0, 0, 19, 0, 0, 0, 21, 
	1, 1, 1, 1, 3, 0, 0, 1, 
	1, 15, 15, 15, 88, 85, 85, 85, 
	1, 0, 0, 0, 0, 5, 49, 1, 
	49, 1, 7, 58, 58, 9, 67, 67, 
	1, 1, 133, 0, 103, 1, 79, 1, 
	1, 17, 94, 94, 17, 1, 1, 1, 
	1, 1, 1, 1, 1, 1, 1, 1, 
	1, 1, 1, 15, 0, 1, 1, 1, 
	1, 1, 1, 1, 1, 1, 1, 1, 
	13, 0, 0, 0, 43, 130, 127, 13, 
	0, 0, 1, 29, 0, 0, 0, 0, 
	19, 0, 0, 0, 21, 1, 1, 1, 
	1, 3, 0, 0, 1, 1, 15, 15, 
	15, 88, 85, 85, 85, 1, 0, 0, 
	0, 0, 5, 49, 1, 49, 1, 7, 
	58, 58, 9, 67, 67, 1, 1, 91, 
	0, 103, 1, 70, 1, 1, 17, 94, 
	94, 17, 1, 1, 1, 1, 1, 1, 
	1, 1, 1, 1, 1, 1, 1, 1, 
	15, 0, 1, 1, 1, 1, 1, 1, 
	1, 1, 1, 1, 0, 0, 0, 21, 
	1, 1, 1, 1, 3, 0, 0, 23, 
	1, 1, 1, 1, 1, 1, 1, 1, 
	1, 1, 1, 1, 1, 1, 15, 15, 
	15, 88, 85, 85, 85, 1, 0, 0, 
	0, 0, 5, 52, 49, 1, 49, 1, 
	7, 61, 58, 58, 9, 73, 67, 67, 
	1, 1, 1, 1, 1, 1, 15, 0, 
	1, 1, 1, 17, 97, 94, 94, 17, 
	1, 1, 1, 1, 1, 1, 1, 1, 
	1, 1, 1, 1, 1, 1, 1, 1, 
	0, 25, 1, 0, 0, 0, 27, 0, 
	0, 0, 0, 43, 130, 127, 13, 82, 
	0, 0, 0, 0, 0, 1, 29, 109, 
	0, 0, 0, 0, 19, 0, 0, 0, 
	21, 1, 1, 1, 1, 3, 0, 0, 
	1, 1, 1, 1, 1, 1, 1, 1, 
	1, 1, 1, 1, 1, 1, 15, 15, 
	15, 88, 85, 85, 85, 1, 0, 0, 
	0, 0, 5, 55, 49, 1, 49, 1, 
	7, 64, 58, 58, 9, 76, 67, 67, 
	1, 1, 1, 1, 1, 1, 15, 0, 
	1, 1, 1, 17, 100, 94, 94, 17, 
	1, 1, 1, 1, 1, 1, 1, 1, 
	1, 1, 1, 1, 1, 1, 1, 1, 
	1, 0, 0, 0, 1, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 1, 1, 0, 0, 1, 1, 1, 
	1, 1, 1, 1, 1, 1, 1, 1, 
	1, 0, 1, 1, 1, 1, 1, 1, 
	1, 1, 1, 1, 1, 1, 1, 0, 
	1, 0, 0, 0, 0, 0, 1, 1, 
	1, 1, 1, 1, 1, 1, 1, 1, 
	1, 1, 0, 1
]

class << self
	attr_accessor :_querybuilder_eof_actions
	private :_querybuilder_eof_actions, :_querybuilder_eof_actions=
end
self._querybuilder_eof_actions = [
	0, 0, 0, 47, 0, 0, 0, 0, 
	0, 47, 0, 0, 0, 0, 0, 47, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 47, 0, 0, 0, 47, 0, 0, 
	0, 0, 0, 0, 0, 47, 0, 0, 
	47, 0, 0, 0, 0, 0, 0, 0, 
	0, 47, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 47, 0, 0, 47, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 47, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 47, 0, 
	0, 0, 0, 47, 0, 0, 47, 0, 
	47, 47, 0, 0, 0, 0, 47, 0, 
	0, 47, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 47, 0, 0, 0, 0, 47, 0, 
	0, 47, 0, 47, 47, 0, 0, 0, 
	0, 47, 0, 0, 47, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 47, 0, 
	0, 0, 0, 0, 47, 0, 0, 0, 
	47, 0, 0, 0, 0, 0, 0, 0, 
	47, 0, 0, 0, 0, 47, 0, 0, 
	47, 0, 47, 47, 0, 0, 0, 0, 
	47, 0, 0, 47, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0
]

class << self
	attr_accessor :querybuilder_start
end
self.querybuilder_start = 1;
class << self
	attr_accessor :querybuilder_first_final
end
self.querybuilder_first_final = 410;
class << self
	attr_accessor :querybuilder_error
end
self.querybuilder_error = 0;

class << self
	attr_accessor :querybuilder_en_expr_p
end
self.querybuilder_en_expr_p = 281;
class << self
	attr_accessor :querybuilder_en_clause_p
end
self.querybuilder_en_clause_p = 336;
class << self
	attr_accessor :querybuilder_en_main
end
self.querybuilder_en_main = 1;

# line 161 "querybuilder_rb.rl"

    def self.parse(arg)
      if arg.kind_of?(Array)
        data = "(#{arg.join(') or (')})\n"
      else
        data = "#{arg}\n"
      end
      stack = [[:query]]
      last  = stack.last
      str_buf         = ""
      clause_state = :relation
      eof = 0;
      
# line 1009 "querybuilder_rb.rb"
begin
	p ||= 0
	pe ||= data.length
	cs = querybuilder_start
end
# line 174 "querybuilder_rb.rl"
      
# line 1017 "querybuilder_rb.rb"
begin
	_klen, _trans, _keys, _acts, _nacts = nil
	_goto_level = 0
	_resume = 10
	_eof_trans = 15
	_again = 20
	_test_eof = 30
	_out = 40
	while true
	_trigger_goto = false
	if _goto_level <= 0
	if p == pe
		_goto_level = _test_eof
		next
	end
	if cs == 0
		_goto_level = _out
		next
	end
	end
	if _goto_level <= _resume
	_keys = _querybuilder_key_offsets[cs]
	_trans = _querybuilder_index_offsets[cs]
	_klen = _querybuilder_single_lengths[cs]
	_break_match = false
	
	begin
	  if _klen > 0
	     _lower = _keys
	     _upper = _keys + _klen - 1

	     loop do
	        break if _upper < _lower
	        _mid = _lower + ( (_upper - _lower) >> 1 )

	        if data[p] < _querybuilder_trans_keys[_mid]
	           _upper = _mid - 1
	        elsif data[p] > _querybuilder_trans_keys[_mid]
	           _lower = _mid + 1
	        else
	           _trans += (_mid - _keys)
	           _break_match = true
	           break
	        end
	     end # loop
	     break if _break_match
	     _keys += _klen
	     _trans += _klen
	  end
	  _klen = _querybuilder_range_lengths[cs]
	  if _klen > 0
	     _lower = _keys
	     _upper = _keys + (_klen << 1) - 2
	     loop do
	        break if _upper < _lower
	        _mid = _lower + (((_upper-_lower) >> 1) & ~1)
	        if data[p] < _querybuilder_trans_keys[_mid]
	          _upper = _mid - 2
	        elsif data[p] > _querybuilder_trans_keys[_mid+1]
	          _lower = _mid + 2
	        else
	          _trans += ((_mid - _keys) >> 1)
	          _break_match = true
	          break
	        end
	     end # loop
	     break if _break_match
	     _trans += _klen
	  end
	end while false
	_trans = _querybuilder_indicies[_trans]
	cs = _querybuilder_trans_targs[_trans]
	if _querybuilder_trans_actions[_trans] != 0
		_acts = _querybuilder_trans_actions[_trans]
		_nacts = _querybuilder_actions[_acts]
		_acts += 1
		while _nacts > 0
			_nacts -= 1
			_acts += 1
			case _querybuilder_actions[_acts - 1]
when 0 then
# line 6 "querybuilder_rb.rl"
		begin

      str_buf += data[p].chr
    		end
# line 6 "querybuilder_rb.rl"
when 1 then
# line 10 "querybuilder_rb.rl"
		begin

      last << [:string, str_buf]
      str_buf = ""
    		end
# line 10 "querybuilder_rb.rl"
when 2 then
# line 15 "querybuilder_rb.rl"
		begin

      last << [:integer, str_buf]
      str_buf = ""
    		end
# line 15 "querybuilder_rb.rl"
when 3 then
# line 20 "querybuilder_rb.rl"
		begin

      last << [:real, str_buf]
      str_buf = ""
    		end
# line 20 "querybuilder_rb.rl"
when 4 then
# line 25 "querybuilder_rb.rl"
		begin

      last << [:field, str_buf]
      str_buf = ""
    		end
# line 25 "querybuilder_rb.rl"
when 5 then
# line 30 "querybuilder_rb.rl"
		begin

      last = apply_op(stack, str_buf.downcase.to_sym, false)
      str_buf = ""
    		end
# line 30 "querybuilder_rb.rl"
when 6 then
# line 35 "querybuilder_rb.rl"
		begin

      if clause_state == :relation || clause_state == :parenthesis
        last = insert(stack, [:relation, str_buf])
        str_buf = ""
      end
    		end
# line 35 "querybuilder_rb.rl"
when 7 then
# line 42 "querybuilder_rb.rl"
		begin

      last = apply_op(stack, str_buf.downcase.to_sym)
      str_buf = ""
    		end
# line 42 "querybuilder_rb.rl"
when 8 then
# line 47 "querybuilder_rb.rl"
		begin

      last = apply_op(stack, :interval)
      last << str_buf
      str_buf = ""
    		end
# line 47 "querybuilder_rb.rl"
when 9 then
# line 53 "querybuilder_rb.rl"
		begin

      last = apply_op(stack, :filter)
      clause_state = :filter
    		end
# line 53 "querybuilder_rb.rl"
when 10 then
# line 58 "querybuilder_rb.rl"
		begin

      # remember current machine state 'cs'
      last << [:par, cs]
      stack.push last.last
      last = last.last
      	begin
		cs = 281
		_trigger_goto = true
		_goto_level = _again
		break
	end

    		end
# line 58 "querybuilder_rb.rl"
when 11 then
# line 66 "querybuilder_rb.rl"
		begin

      pop_stack(stack, :par_close)
      # reset machine state 'cs'
      cs = stack.last.delete_at(1)
      # one more time to remove [:par...] line
      stack.pop 
      last = stack.last
      # closing ')' must be parsed twice
      p = p - 1;
    		end
# line 66 "querybuilder_rb.rl"
when 12 then
# line 77 "querybuilder_rb.rl"
		begin

      # remember current machine state 'cs'
      clause_state = :parenthesis
      last << [:clause_par, cs]
      stack.push last.last
      last = last.last
      	begin
		cs = 336
		_trigger_goto = true
		_goto_level = _again
		break
	end

    		end
# line 77 "querybuilder_rb.rl"
when 13 then
# line 86 "querybuilder_rb.rl"
		begin

      pop_stack(stack, :clause_par_close)
      clause_state = :relation
      # reset machine state 'cs'
      cs = stack.last.delete_at(1)
      # one more time to remove [:clause_par...] line
      stack.pop 
      last = stack.last
      # closing ')' must be parsed twice
      p = p - 1;
    		end
# line 86 "querybuilder_rb.rl"
when 14 then
# line 98 "querybuilder_rb.rl"
		begin

      last = apply_op(stack, :scope)
      last << str_buf
      str_buf = ""
    		end
# line 98 "querybuilder_rb.rl"
when 15 then
# line 104 "querybuilder_rb.rl"
		begin

      last = apply_op(stack, :offset)
    		end
# line 104 "querybuilder_rb.rl"
when 16 then
# line 108 "querybuilder_rb.rl"
		begin

      last << [:param, str_buf]
      str_buf = ""
    		end
# line 108 "querybuilder_rb.rl"
when 17 then
# line 113 "querybuilder_rb.rl"
		begin

      last = apply_op(stack, :paginate)
    		end
# line 113 "querybuilder_rb.rl"
when 18 then
# line 117 "querybuilder_rb.rl"
		begin

      last = apply_op(stack, :limit)
      str_buf = ""
    		end
# line 117 "querybuilder_rb.rl"
when 19 then
# line 122 "querybuilder_rb.rl"
		begin

      last = apply_op(stack, :order)
      str_buf = ""
    		end
# line 122 "querybuilder_rb.rl"
when 20 then
# line 127 "querybuilder_rb.rl"
		begin

      last = apply_op(stack, :group)
    		end
# line 127 "querybuilder_rb.rl"
when 21 then
# line 131 "querybuilder_rb.rl"
		begin

      last = apply_op(stack, :from)
      clause_state = :relation
    		end
# line 131 "querybuilder_rb.rl"
when 22 then
# line 136 "querybuilder_rb.rl"
		begin

      if clause_state == :relation
        last = apply_op(stack, "clause_#{str_buf}".to_sym)
        str_buf = ""
      end
    		end
# line 136 "querybuilder_rb.rl"
when 23 then
# line 147 "querybuilder_rb.rl"
		begin

      p = p - 3
      p = 0 if p < 0
      raise QueryException.new("Syntax error near #{data[p..-1].chomp.inspect}.")
    		end
# line 147 "querybuilder_rb.rl"
# line 1325 "querybuilder_rb.rb"
			end # action switch
		end
	end
	if _trigger_goto
		next
	end
	end
	if _goto_level <= _again
	if cs == 0
		_goto_level = _out
		next
	end
	p += 1
	if p != pe
		_goto_level = _resume
		next
	end
	end
	if _goto_level <= _test_eof
	if p == eof
	__acts = _querybuilder_eof_actions[cs]
	__nacts =  _querybuilder_actions[__acts]
	__acts += 1
	while __nacts > 0
		__nacts -= 1
		__acts += 1
		case _querybuilder_actions[__acts - 1]
when 23 then
# line 147 "querybuilder_rb.rl"
		begin

      p = p - 3
      p = 0 if p < 0
      raise QueryException.new("Syntax error near #{data[p..-1].chomp.inspect}.")
    		end
# line 147 "querybuilder_rb.rl"
# line 1362 "querybuilder_rb.rb"
		end # eof action switch
	end
	if _trigger_goto
		next
	end
end
	end
	if _goto_level <= _out
		break
	end
	end
	end
# line 175 "querybuilder_rb.rl"
      
      if p < pe
        p = p - 3
        p = 0 if p < 0
        raise QueryException.new("Syntax error near #{data[p..-1].chomp.inspect}.")
      end
      stack.first
    end
  end
end
