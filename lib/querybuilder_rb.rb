# line 1 "querybuilder_rb.rl"
module QueryBuilder
  class Parser
  # line 156 "querybuilder_rb.rl"


    
# line 9 "querybuilder_rb.rb"
class << self
	attr_accessor :_querybuilder_actions
	private :_querybuilder_actions, :_querybuilder_actions=
end
self._querybuilder_actions = [
	0, 1, 0, 1, 1, 1, 2, 1, 
	3, 1, 4, 1, 5, 1, 6, 1, 
	7, 1, 8, 1, 9, 1, 10, 1, 
	11, 1, 12, 1, 13, 1, 14, 1, 
	15, 1, 16, 1, 17, 1, 18, 1, 
	19, 1, 20, 1, 21, 1, 22, 1, 
	23, 2, 2, 0, 2, 2, 11, 2, 
	2, 13, 2, 3, 0, 2, 3, 11, 
	2, 3, 13, 2, 4, 0, 2, 4, 
	6, 2, 4, 11, 2, 4, 13, 2, 
	6, 4, 2, 6, 13, 2, 7, 0, 
	2, 7, 10, 2, 7, 22, 2, 8, 
	0, 2, 8, 11, 2, 8, 13, 2, 
	10, 12, 2, 12, 10, 2, 14, 13, 
	2, 15, 0, 2, 17, 0, 2, 18, 
	0, 2, 19, 0, 2, 20, 0, 2, 
	21, 0, 2, 21, 12, 2, 22, 7
]

class << self
	attr_accessor :_querybuilder_key_offsets
	private :_querybuilder_key_offsets, :_querybuilder_key_offsets=
end
self._querybuilder_key_offsets = [
	0, 0, 9, 13, 16, 25, 26, 27, 
	30, 39, 43, 46, 55, 56, 57, 58, 
	67, 76, 84, 95, 96, 97, 98, 99, 
	102, 106, 107, 115, 123, 132, 136, 137, 
	140, 148, 156, 157, 158, 159, 160, 166, 
	172, 174, 180, 187, 193, 195, 200, 206, 
	208, 209, 210, 211, 212, 218, 224, 226, 
	231, 237, 238, 239, 240, 241, 244, 248, 
	249, 257, 265, 274, 283, 284, 285, 289, 
	294, 295, 296, 297, 298, 299, 300, 301, 
	302, 303, 304, 305, 313, 321, 329, 334, 
	336, 340, 341, 342, 343, 344, 347, 361, 
	363, 371, 393, 407, 409, 409, 413, 421, 
	437, 452, 454, 465, 466, 467, 470, 484, 
	497, 519, 520, 521, 530, 531, 533, 534, 
	537, 538, 539, 542, 546, 547, 548, 550, 
	554, 562, 563, 564, 565, 567, 568, 569, 
	570, 571, 572, 573, 574, 575, 576, 577, 
	578, 579, 581, 582, 583, 584, 585, 586, 
	589, 603, 605, 613, 635, 649, 651, 651, 
	655, 663, 679, 694, 696, 707, 708, 709, 
	712, 726, 739, 761, 762, 763, 772, 773, 
	775, 776, 779, 780, 781, 784, 788, 789, 
	790, 792, 796, 804, 805, 806, 807, 809, 
	810, 811, 812, 813, 814, 815, 816, 817, 
	818, 819, 820, 821, 823, 824, 825, 826, 
	827, 828, 830, 840, 853, 853, 854, 855, 
	856, 858, 868, 881, 881, 889, 900, 901, 
	902, 903, 904, 913, 921, 932, 933, 936, 
	944, 952, 953, 954, 955, 956, 959, 973, 
	975, 983, 1005, 1019, 1021, 1021, 1025, 1033, 
	1049, 1064, 1066, 1077, 1078, 1079, 1082, 1096, 
	1109, 1131, 1132, 1133, 1142, 1143, 1145, 1146, 
	1149, 1150, 1151, 1154, 1158, 1159, 1160, 1162, 
	1166, 1174, 1175, 1176, 1177, 1179, 1180, 1181, 
	1182, 1183, 1184, 1185, 1186, 1187, 1188, 1189, 
	1190, 1191, 1193, 1194, 1195, 1196, 1197, 1198, 
	1200, 1210, 1223, 1223, 1237, 1239, 1248, 1267, 
	1281, 1283, 1283, 1287, 1296, 1309, 1324, 1326, 
	1338, 1340, 1351, 1365, 1366, 1367, 1370, 1371, 
	1372, 1373, 1374, 1375, 1378, 1382, 1383, 1384, 
	1385, 1395, 1404, 1405, 1406, 1407, 1409, 1410, 
	1411, 1412, 1413, 1414, 1415, 1416, 1417, 1418, 
	1419, 1420, 1421, 1422, 1423, 1424, 1425, 1426, 
	1426, 1435, 1439, 1443, 1448, 1449, 1450, 1451, 
	1460, 1469, 1476, 1477, 1480, 1488, 1497, 1498, 
	1499, 1500, 1501, 1504, 1518, 1520, 1529, 1550, 
	1564, 1566, 1566, 1570, 1579, 1594, 1609, 1611, 
	1623, 1625, 1636, 1650, 1651, 1652, 1655, 1656, 
	1657, 1658, 1659, 1660, 1663, 1667, 1668, 1669, 
	1670, 1680, 1689, 1690, 1691, 1692, 1694, 1695, 
	1696, 1697, 1698, 1699, 1700, 1701, 1702, 1703, 
	1704, 1705, 1706, 1707, 1708, 1709, 1710, 1711, 
	1711, 1715, 1724, 1729, 1738, 1743, 1749, 1755, 
	1762, 1784, 1800, 1822, 1838, 1860, 1882, 1893, 
	1904, 1913, 1935, 1951, 1973, 1984, 1984
]

class << self
	attr_accessor :_querybuilder_trans_keys
	private :_querybuilder_trans_keys, :_querybuilder_trans_keys=
end
self._querybuilder_trans_keys = [
	32, 40, 95, 9, 10, 65, 90, 97, 
	122, 32, 41, 9, 10, 9, 10, 32, 
	32, 97, 102, 103, 108, 111, 112, 9, 
	10, 110, 100, 32, 9, 10, 32, 40, 
	95, 9, 10, 65, 90, 97, 122, 32, 
	41, 9, 10, 9, 10, 32, 32, 97, 
	102, 103, 108, 111, 112, 9, 10, 114, 
	111, 109, 32, 40, 95, 9, 10, 65, 
	90, 97, 122, 32, 40, 95, 9, 10, 
	65, 90, 97, 122, 9, 10, 32, 95, 
	65, 90, 97, 122, 32, 97, 102, 103, 
	105, 108, 111, 112, 119, 9, 10, 114, 
	111, 117, 112, 32, 9, 10, 32, 98, 
	9, 10, 121, 32, 95, 9, 10, 65, 
	90, 97, 122, 32, 95, 9, 10, 65, 
	90, 97, 122, 9, 10, 32, 44, 95, 
	65, 90, 97, 122, 32, 44, 9, 10, 
	110, 32, 9, 10, 32, 95, 9, 10, 
	65, 90, 97, 122, 9, 10, 32, 95, 
	65, 90, 97, 122, 105, 109, 105, 116, 
	32, 45, 9, 10, 48, 57, 32, 45, 
	9, 10, 48, 57, 48, 57, 9, 10, 
	32, 44, 48, 57, 32, 44, 103, 111, 
	112, 9, 10, 32, 45, 9, 10, 48, 
	57, 48, 57, 9, 10, 32, 48, 57, 
	32, 103, 111, 112, 9, 10, 102, 114, 
	102, 115, 101, 116, 32, 45, 9, 10, 
	48, 57, 32, 45, 9, 10, 48, 57, 
	48, 57, 9, 10, 32, 48, 57, 32, 
	103, 111, 112, 9, 10, 114, 100, 101, 
	114, 32, 9, 10, 32, 98, 9, 10, 
	121, 32, 95, 9, 10, 65, 90, 97, 
	122, 32, 95, 9, 10, 65, 90, 97, 
	122, 9, 10, 32, 44, 95, 65, 90, 
	97, 122, 32, 44, 65, 68, 97, 100, 
	103, 9, 10, 83, 67, 9, 10, 32, 
	44, 32, 44, 103, 9, 10, 69, 115, 
	99, 101, 97, 103, 105, 110, 97, 116, 
	101, 32, 95, 9, 10, 65, 90, 97, 
	122, 32, 95, 9, 10, 65, 90, 97, 
	122, 9, 10, 32, 95, 65, 90, 97, 
	122, 32, 103, 111, 9, 10, 102, 114, 
	32, 100, 9, 10, 104, 101, 114, 101, 
	32, 9, 10, 32, 34, 39, 40, 45, 
	95, 9, 10, 48, 57, 65, 90, 97, 
	122, 34, 92, 9, 10, 32, 43, 45, 
	61, 60, 62, 32, 43, 45, 61, 97, 
	100, 102, 103, 104, 105, 108, 109, 110, 
	111, 112, 115, 119, 121, 9, 10, 60, 
	62, 32, 34, 39, 40, 45, 95, 9, 
	10, 48, 57, 65, 90, 97, 122, 39, 
	92, 32, 41, 9, 10, 9, 10, 32, 
	43, 45, 61, 60, 62, 32, 43, 45, 
	61, 97, 102, 103, 105, 108, 110, 111, 
	112, 9, 10, 60, 62, 32, 34, 39, 
	40, 45, 61, 95, 9, 10, 48, 57, 
	65, 90, 97, 122, 48, 57, 9, 10, 
	32, 43, 45, 46, 61, 48, 57, 60, 
	62, 110, 100, 32, 9, 10, 32, 34, 
	39, 40, 45, 95, 9, 10, 48, 57, 
	65, 90, 97, 122, 9, 10, 32, 43, 
	45, 61, 95, 60, 62, 65, 90, 97, 
	122, 32, 43, 45, 61, 97, 100, 102, 
	103, 104, 105, 108, 109, 110, 111, 112, 
	115, 119, 121, 9, 10, 60, 62, 97, 
	121, 9, 10, 32, 43, 45, 61, 115, 
	60, 62, 105, 107, 109, 101, 32, 9, 
	10, 111, 116, 32, 9, 10, 32, 108, 
	9, 10, 105, 107, 102, 114, 32, 100, 
	9, 10, 9, 10, 32, 43, 45, 61, 
	60, 62, 111, 117, 114, 105, 111, 110, 
	117, 116, 101, 110, 116, 104, 101, 99, 
	111, 110, 100, 101, 104, 101, 107, 101, 
	114, 101, 32, 9, 10, 32, 34, 39, 
	40, 45, 95, 9, 10, 48, 57, 65, 
	90, 97, 122, 34, 92, 9, 10, 32, 
	43, 45, 61, 60, 62, 32, 43, 45, 
	61, 97, 100, 102, 103, 104, 105, 108, 
	109, 110, 111, 112, 115, 119, 121, 9, 
	10, 60, 62, 32, 34, 39, 40, 45, 
	95, 9, 10, 48, 57, 65, 90, 97, 
	122, 39, 92, 32, 41, 9, 10, 9, 
	10, 32, 43, 45, 61, 60, 62, 32, 
	43, 45, 61, 97, 102, 103, 105, 108, 
	110, 111, 112, 9, 10, 60, 62, 32, 
	34, 39, 40, 45, 61, 95, 9, 10, 
	48, 57, 65, 90, 97, 122, 48, 57, 
	9, 10, 32, 43, 45, 46, 61, 48, 
	57, 60, 62, 110, 100, 32, 9, 10, 
	32, 34, 39, 40, 45, 95, 9, 10, 
	48, 57, 65, 90, 97, 122, 9, 10, 
	32, 43, 45, 61, 95, 60, 62, 65, 
	90, 97, 122, 32, 43, 45, 61, 97, 
	100, 102, 103, 104, 105, 108, 109, 110, 
	111, 112, 115, 119, 121, 9, 10, 60, 
	62, 97, 121, 9, 10, 32, 43, 45, 
	61, 115, 60, 62, 105, 107, 109, 101, 
	32, 9, 10, 111, 116, 32, 9, 10, 
	32, 108, 9, 10, 105, 107, 102, 114, 
	32, 100, 9, 10, 9, 10, 32, 43, 
	45, 61, 60, 62, 111, 117, 114, 105, 
	111, 110, 117, 116, 101, 110, 116, 104, 
	101, 99, 111, 110, 100, 101, 104, 101, 
	107, 101, 97, 101, 48, 57, 9, 10, 
	32, 43, 45, 61, 48, 57, 60, 62, 
	9, 10, 32, 43, 45, 61, 95, 60, 
	62, 65, 90, 97, 122, 101, 97, 101, 
	48, 57, 9, 10, 32, 43, 45, 61, 
	48, 57, 60, 62, 9, 10, 32, 43, 
	45, 61, 95, 60, 62, 65, 90, 97, 
	122, 9, 10, 32, 95, 65, 90, 97, 
	122, 32, 97, 102, 103, 105, 108, 111, 
	112, 119, 9, 10, 104, 114, 111, 109, 
	32, 40, 95, 9, 10, 65, 90, 97, 
	122, 9, 10, 32, 95, 65, 90, 97, 
	122, 32, 97, 102, 103, 105, 108, 111, 
	112, 119, 9, 10, 110, 32, 9, 10, 
	32, 95, 9, 10, 65, 90, 97, 122, 
	9, 10, 32, 95, 65, 90, 97, 122, 
	104, 101, 114, 101, 32, 9, 10, 32, 
	34, 39, 40, 45, 95, 9, 10, 48, 
	57, 65, 90, 97, 122, 34, 92, 9, 
	10, 32, 43, 45, 61, 60, 62, 32, 
	43, 45, 61, 97, 100, 102, 103, 104, 
	105, 108, 109, 110, 111, 112, 115, 119, 
	121, 9, 10, 60, 62, 32, 34, 39, 
	40, 45, 95, 9, 10, 48, 57, 65, 
	90, 97, 122, 39, 92, 32, 41, 9, 
	10, 9, 10, 32, 43, 45, 61, 60, 
	62, 32, 43, 45, 61, 97, 102, 103, 
	105, 108, 110, 111, 112, 9, 10, 60, 
	62, 32, 34, 39, 40, 45, 61, 95, 
	9, 10, 48, 57, 65, 90, 97, 122, 
	48, 57, 9, 10, 32, 43, 45, 46, 
	61, 48, 57, 60, 62, 110, 100, 32, 
	9, 10, 32, 34, 39, 40, 45, 95, 
	9, 10, 48, 57, 65, 90, 97, 122, 
	9, 10, 32, 43, 45, 61, 95, 60, 
	62, 65, 90, 97, 122, 32, 43, 45, 
	61, 97, 100, 102, 103, 104, 105, 108, 
	109, 110, 111, 112, 115, 119, 121, 9, 
	10, 60, 62, 97, 121, 9, 10, 32, 
	43, 45, 61, 115, 60, 62, 105, 107, 
	109, 101, 32, 9, 10, 111, 116, 32, 
	9, 10, 32, 108, 9, 10, 105, 107, 
	102, 114, 32, 100, 9, 10, 9, 10, 
	32, 43, 45, 61, 60, 62, 111, 117, 
	114, 105, 111, 110, 117, 116, 101, 110, 
	116, 104, 101, 99, 111, 110, 100, 101, 
	104, 101, 107, 101, 97, 101, 48, 57, 
	9, 10, 32, 43, 45, 61, 48, 57, 
	60, 62, 9, 10, 32, 43, 45, 61, 
	95, 60, 62, 65, 90, 97, 122, 32, 
	34, 39, 40, 45, 95, 9, 10, 48, 
	57, 65, 90, 97, 122, 34, 92, 32, 
	41, 43, 45, 61, 9, 10, 60, 62, 
	32, 41, 43, 45, 61, 97, 100, 104, 
	108, 109, 110, 111, 115, 119, 121, 9, 
	10, 60, 62, 32, 34, 39, 40, 45, 
	95, 9, 10, 48, 57, 65, 90, 97, 
	122, 39, 92, 32, 41, 9, 10, 32, 
	41, 43, 45, 61, 9, 10, 60, 62, 
	32, 41, 43, 45, 61, 97, 108, 110, 
	111, 9, 10, 60, 62, 32, 34, 39, 
	40, 45, 61, 95, 9, 10, 48, 57, 
	65, 90, 97, 122, 48, 57, 32, 41, 
	43, 45, 46, 61, 9, 10, 48, 57, 
	60, 62, 48, 57, 32, 41, 43, 45, 
	61, 9, 10, 48, 57, 60, 62, 32, 
	41, 43, 45, 61, 95, 9, 10, 60, 
	62, 65, 90, 97, 122, 110, 100, 32, 
	9, 10, 105, 107, 101, 111, 116, 32, 
	9, 10, 32, 108, 9, 10, 114, 97, 
	121, 32, 41, 43, 45, 61, 115, 9, 
	10, 60, 62, 32, 41, 43, 45, 61, 
	9, 10, 60, 62, 111, 117, 114, 105, 
	111, 110, 117, 116, 101, 110, 116, 104, 
	101, 99, 111, 110, 100, 101, 101, 107, 
	101, 97, 32, 40, 95, 9, 10, 65, 
	90, 97, 122, 32, 41, 9, 10, 32, 
	41, 9, 10, 32, 41, 102, 9, 10, 
	114, 111, 109, 32, 40, 95, 9, 10, 
	65, 90, 97, 122, 32, 41, 95, 9, 
	10, 65, 90, 97, 122, 32, 41, 102, 
	105, 119, 9, 10, 110, 32, 9, 10, 
	32, 95, 9, 10, 65, 90, 97, 122, 
	32, 41, 95, 9, 10, 65, 90, 97, 
	122, 104, 101, 114, 101, 32, 9, 10, 
	32, 34, 39, 40, 45, 95, 9, 10, 
	48, 57, 65, 90, 97, 122, 34, 92, 
	32, 41, 43, 45, 61, 9, 10, 60, 
	62, 32, 41, 43, 45, 61, 97, 100, 
	102, 104, 105, 108, 109, 110, 111, 115, 
	119, 121, 9, 10, 60, 62, 32, 34, 
	39, 40, 45, 95, 9, 10, 48, 57, 
	65, 90, 97, 122, 39, 92, 32, 41, 
	9, 10, 32, 41, 43, 45, 61, 9, 
	10, 60, 62, 32, 41, 43, 45, 61, 
	97, 102, 105, 108, 110, 111, 9, 10, 
	60, 62, 32, 34, 39, 40, 45, 61, 
	95, 9, 10, 48, 57, 65, 90, 97, 
	122, 48, 57, 32, 41, 43, 45, 46, 
	61, 9, 10, 48, 57, 60, 62, 48, 
	57, 32, 41, 43, 45, 61, 9, 10, 
	48, 57, 60, 62, 32, 41, 43, 45, 
	61, 95, 9, 10, 60, 62, 65, 90, 
	97, 122, 110, 100, 32, 9, 10, 105, 
	107, 101, 111, 116, 32, 9, 10, 32, 
	108, 9, 10, 114, 97, 121, 32, 41, 
	43, 45, 61, 115, 9, 10, 60, 62, 
	32, 41, 43, 45, 61, 9, 10, 60, 
	62, 111, 117, 114, 105, 111, 110, 117, 
	116, 101, 110, 116, 104, 101, 99, 111, 
	110, 100, 101, 101, 107, 101, 97, 32, 
	44, 9, 10, 32, 97, 102, 103, 108, 
	111, 112, 9, 10, 32, 44, 103, 9, 
	10, 32, 44, 65, 68, 97, 100, 103, 
	9, 10, 32, 103, 111, 9, 10, 32, 
	103, 111, 112, 9, 10, 32, 103, 111, 
	112, 9, 10, 32, 44, 103, 111, 112, 
	9, 10, 32, 43, 45, 61, 97, 100, 
	102, 103, 104, 105, 108, 109, 110, 111, 
	112, 115, 119, 121, 9, 10, 60, 62, 
	32, 43, 45, 61, 97, 102, 103, 105, 
	108, 110, 111, 112, 9, 10, 60, 62, 
	32, 43, 45, 61, 97, 100, 102, 103, 
	104, 105, 108, 109, 110, 111, 112, 115, 
	119, 121, 9, 10, 60, 62, 32, 43, 
	45, 61, 97, 102, 103, 105, 108, 110, 
	111, 112, 9, 10, 60, 62, 32, 43, 
	45, 61, 97, 100, 102, 103, 104, 105, 
	108, 109, 110, 111, 112, 115, 119, 121, 
	9, 10, 60, 62, 32, 43, 45, 61, 
	97, 100, 102, 103, 104, 105, 108, 109, 
	110, 111, 112, 115, 119, 121, 9, 10, 
	60, 62, 32, 97, 102, 103, 105, 108, 
	111, 112, 119, 9, 10, 32, 97, 102, 
	103, 105, 108, 111, 112, 119, 9, 10, 
	32, 97, 102, 103, 108, 111, 112, 9, 
	10, 32, 43, 45, 61, 97, 100, 102, 
	103, 104, 105, 108, 109, 110, 111, 112, 
	115, 119, 121, 9, 10, 60, 62, 32, 
	43, 45, 61, 97, 102, 103, 105, 108, 
	110, 111, 112, 9, 10, 60, 62, 32, 
	43, 45, 61, 97, 100, 102, 103, 104, 
	105, 108, 109, 110, 111, 112, 115, 119, 
	121, 9, 10, 60, 62, 32, 97, 102, 
	103, 105, 108, 111, 112, 119, 9, 10, 
	0
]

class << self
	attr_accessor :_querybuilder_single_lengths
	private :_querybuilder_single_lengths, :_querybuilder_single_lengths=
end
self._querybuilder_single_lengths = [
	0, 3, 2, 3, 7, 1, 1, 1, 
	3, 2, 3, 7, 1, 1, 1, 3, 
	3, 4, 9, 1, 1, 1, 1, 1, 
	2, 1, 2, 2, 5, 2, 1, 1, 
	2, 4, 1, 1, 1, 1, 2, 2, 
	0, 4, 5, 2, 0, 3, 4, 2, 
	1, 1, 1, 1, 2, 2, 0, 3, 
	4, 1, 1, 1, 1, 1, 2, 1, 
	2, 2, 5, 7, 1, 1, 4, 3, 
	1, 1, 1, 1, 1, 1, 1, 1, 
	1, 1, 1, 2, 2, 4, 3, 2, 
	2, 1, 1, 1, 1, 1, 6, 2, 
	6, 18, 6, 2, 0, 2, 6, 12, 
	7, 0, 7, 1, 1, 1, 6, 7, 
	18, 1, 1, 7, 1, 2, 1, 1, 
	1, 1, 1, 2, 1, 1, 2, 2, 
	6, 1, 1, 1, 2, 1, 1, 1, 
	1, 1, 1, 1, 1, 1, 1, 1, 
	1, 2, 1, 1, 1, 1, 1, 1, 
	6, 2, 6, 18, 6, 2, 0, 2, 
	6, 12, 7, 0, 7, 1, 1, 1, 
	6, 7, 18, 1, 1, 7, 1, 2, 
	1, 1, 1, 1, 1, 2, 1, 1, 
	2, 2, 6, 1, 1, 1, 2, 1, 
	1, 1, 1, 1, 1, 1, 1, 1, 
	1, 1, 1, 2, 1, 1, 1, 1, 
	1, 0, 6, 7, 0, 1, 1, 1, 
	0, 6, 7, 0, 4, 9, 1, 1, 
	1, 1, 3, 4, 9, 1, 1, 2, 
	4, 1, 1, 1, 1, 1, 6, 2, 
	6, 18, 6, 2, 0, 2, 6, 12, 
	7, 0, 7, 1, 1, 1, 6, 7, 
	18, 1, 1, 7, 1, 2, 1, 1, 
	1, 1, 1, 2, 1, 1, 2, 2, 
	6, 1, 1, 1, 2, 1, 1, 1, 
	1, 1, 1, 1, 1, 1, 1, 1, 
	1, 2, 1, 1, 1, 1, 1, 0, 
	6, 7, 0, 6, 2, 5, 15, 6, 
	2, 0, 2, 5, 9, 7, 0, 6, 
	0, 5, 6, 1, 1, 1, 1, 1, 
	1, 1, 1, 1, 2, 1, 1, 1, 
	6, 5, 1, 1, 1, 2, 1, 1, 
	1, 1, 1, 1, 1, 1, 1, 1, 
	1, 1, 1, 1, 1, 1, 1, 0, 
	3, 2, 2, 3, 1, 1, 1, 3, 
	3, 5, 1, 1, 2, 3, 1, 1, 
	1, 1, 1, 6, 2, 5, 17, 6, 
	2, 0, 2, 5, 11, 7, 0, 6, 
	0, 5, 6, 1, 1, 1, 1, 1, 
	1, 1, 1, 1, 2, 1, 1, 1, 
	6, 5, 1, 1, 1, 2, 1, 1, 
	1, 1, 1, 1, 1, 1, 1, 1, 
	1, 1, 1, 1, 1, 1, 1, 0, 
	2, 7, 3, 7, 3, 4, 4, 5, 
	18, 12, 18, 12, 18, 18, 9, 9, 
	7, 18, 12, 18, 9, 0, 0
]

class << self
	attr_accessor :_querybuilder_range_lengths
	private :_querybuilder_range_lengths, :_querybuilder_range_lengths=
end
self._querybuilder_range_lengths = [
	0, 3, 1, 0, 1, 0, 0, 1, 
	3, 1, 0, 1, 0, 0, 0, 3, 
	3, 2, 1, 0, 0, 0, 0, 1, 
	1, 0, 3, 3, 2, 1, 0, 1, 
	3, 2, 0, 0, 0, 0, 2, 2, 
	1, 1, 1, 2, 1, 1, 1, 0, 
	0, 0, 0, 0, 2, 2, 1, 1, 
	1, 0, 0, 0, 0, 1, 1, 0, 
	3, 3, 2, 1, 0, 0, 0, 1, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 3, 3, 2, 1, 0, 
	1, 0, 0, 0, 0, 1, 4, 0, 
	1, 2, 4, 0, 0, 1, 1, 2, 
	4, 1, 2, 0, 0, 1, 4, 3, 
	2, 0, 0, 1, 0, 0, 0, 1, 
	0, 0, 1, 1, 0, 0, 0, 1, 
	1, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 1, 
	4, 0, 1, 2, 4, 0, 0, 1, 
	1, 2, 4, 1, 2, 0, 0, 1, 
	4, 3, 2, 0, 0, 1, 0, 0, 
	0, 1, 0, 0, 1, 1, 0, 0, 
	0, 1, 1, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 1, 2, 3, 0, 0, 0, 0, 
	1, 2, 3, 0, 2, 1, 0, 0, 
	0, 0, 3, 2, 1, 0, 1, 3, 
	2, 0, 0, 0, 0, 1, 4, 0, 
	1, 2, 4, 0, 0, 1, 1, 2, 
	4, 1, 2, 0, 0, 1, 4, 3, 
	2, 0, 0, 1, 0, 0, 0, 1, 
	0, 0, 1, 1, 0, 0, 0, 1, 
	1, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 1, 
	2, 3, 0, 4, 0, 2, 2, 4, 
	0, 0, 1, 2, 2, 4, 1, 3, 
	1, 3, 4, 0, 0, 1, 0, 0, 
	0, 0, 0, 1, 1, 0, 0, 0, 
	2, 2, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	3, 1, 1, 1, 0, 0, 0, 3, 
	3, 1, 0, 1, 3, 3, 0, 0, 
	0, 0, 1, 4, 0, 2, 2, 4, 
	0, 0, 1, 2, 2, 4, 1, 3, 
	1, 3, 4, 0, 0, 1, 0, 0, 
	0, 0, 0, 1, 1, 0, 0, 0, 
	2, 2, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	1, 1, 1, 1, 1, 1, 1, 1, 
	2, 2, 2, 2, 2, 2, 1, 1, 
	1, 2, 2, 2, 1, 0, 0
]

class << self
	attr_accessor :_querybuilder_index_offsets
	private :_querybuilder_index_offsets, :_querybuilder_index_offsets=
end
self._querybuilder_index_offsets = [
	0, 0, 7, 11, 15, 24, 26, 28, 
	31, 38, 42, 46, 55, 57, 59, 61, 
	68, 75, 82, 93, 95, 97, 99, 101, 
	104, 108, 110, 116, 122, 130, 134, 136, 
	139, 145, 152, 154, 156, 158, 160, 165, 
	170, 172, 178, 185, 190, 192, 197, 203, 
	206, 208, 210, 212, 214, 219, 224, 226, 
	231, 237, 239, 241, 243, 245, 248, 252, 
	254, 260, 266, 274, 283, 285, 287, 292, 
	297, 299, 301, 303, 305, 307, 309, 311, 
	313, 315, 317, 319, 325, 331, 338, 343, 
	346, 350, 352, 354, 356, 358, 361, 372, 
	375, 383, 404, 415, 418, 419, 423, 431, 
	446, 458, 460, 470, 472, 474, 477, 488, 
	499, 520, 522, 524, 533, 535, 538, 540, 
	543, 545, 547, 550, 554, 556, 558, 561, 
	565, 573, 575, 577, 579, 582, 584, 586, 
	588, 590, 592, 594, 596, 598, 600, 602, 
	604, 606, 609, 611, 613, 615, 617, 619, 
	622, 633, 636, 644, 665, 676, 679, 680, 
	684, 692, 707, 719, 721, 731, 733, 735, 
	738, 749, 760, 781, 783, 785, 794, 796, 
	799, 801, 804, 806, 808, 811, 815, 817, 
	819, 822, 826, 834, 836, 838, 840, 843, 
	845, 847, 849, 851, 853, 855, 857, 859, 
	861, 863, 865, 867, 870, 872, 874, 876, 
	878, 880, 882, 891, 902, 903, 905, 907, 
	909, 911, 920, 931, 932, 939, 950, 952, 
	954, 956, 958, 965, 972, 983, 985, 988, 
	994, 1001, 1003, 1005, 1007, 1009, 1012, 1023, 
	1026, 1034, 1055, 1066, 1069, 1070, 1074, 1082, 
	1097, 1109, 1111, 1121, 1123, 1125, 1128, 1139, 
	1150, 1171, 1173, 1175, 1184, 1186, 1189, 1191, 
	1194, 1196, 1198, 1201, 1205, 1207, 1209, 1212, 
	1216, 1224, 1226, 1228, 1230, 1233, 1235, 1237, 
	1239, 1241, 1243, 1245, 1247, 1249, 1251, 1253, 
	1255, 1257, 1260, 1262, 1264, 1266, 1268, 1270, 
	1272, 1281, 1292, 1293, 1304, 1307, 1315, 1333, 
	1344, 1347, 1348, 1352, 1360, 1372, 1384, 1386, 
	1396, 1398, 1407, 1418, 1420, 1422, 1425, 1427, 
	1429, 1431, 1433, 1435, 1438, 1442, 1444, 1446, 
	1448, 1457, 1465, 1467, 1469, 1471, 1474, 1476, 
	1478, 1480, 1482, 1484, 1486, 1488, 1490, 1492, 
	1494, 1496, 1498, 1500, 1502, 1504, 1506, 1508, 
	1509, 1516, 1520, 1524, 1529, 1531, 1533, 1535, 
	1542, 1549, 1556, 1558, 1561, 1567, 1574, 1576, 
	1578, 1580, 1582, 1585, 1596, 1599, 1607, 1627, 
	1638, 1641, 1642, 1646, 1654, 1668, 1680, 1682, 
	1692, 1694, 1703, 1714, 1716, 1718, 1721, 1723, 
	1725, 1727, 1729, 1731, 1734, 1738, 1740, 1742, 
	1744, 1753, 1761, 1763, 1765, 1767, 1770, 1772, 
	1774, 1776, 1778, 1780, 1782, 1784, 1786, 1788, 
	1790, 1792, 1794, 1796, 1798, 1800, 1802, 1804, 
	1805, 1809, 1818, 1823, 1832, 1837, 1843, 1849, 
	1856, 1877, 1892, 1913, 1928, 1949, 1970, 1981, 
	1992, 2001, 2022, 2037, 2058, 2069, 2070
]

class << self
	attr_accessor :_querybuilder_indicies
	private :_querybuilder_indicies, :_querybuilder_indicies=
end
self._querybuilder_indicies = [
	0, 2, 3, 0, 3, 3, 1, 4, 
	5, 4, 1, 7, 8, 7, 6, 7, 
	9, 10, 11, 12, 13, 14, 7, 1, 
	15, 1, 16, 1, 17, 17, 1, 18, 
	19, 20, 18, 20, 20, 1, 21, 22, 
	21, 1, 23, 24, 23, 6, 23, 9, 
	25, 11, 12, 13, 14, 23, 1, 26, 
	1, 27, 1, 28, 1, 29, 30, 31, 
	29, 31, 31, 1, 32, 19, 33, 32, 
	33, 33, 1, 34, 35, 34, 33, 33, 
	33, 6, 36, 9, 25, 11, 37, 12, 
	13, 14, 38, 36, 1, 39, 1, 40, 
	1, 41, 1, 42, 1, 43, 43, 1, 
	43, 44, 43, 1, 45, 1, 46, 47, 
	46, 47, 47, 1, 48, 49, 48, 49, 
	49, 1, 50, 51, 50, 52, 49, 49, 
	49, 6, 53, 48, 53, 1, 54, 1, 
	55, 55, 1, 55, 56, 55, 56, 56, 
	1, 57, 58, 57, 56, 56, 56, 6, 
	59, 1, 60, 1, 61, 1, 62, 1, 
	63, 64, 63, 65, 1, 66, 67, 66, 
	68, 1, 68, 1, 69, 70, 69, 71, 
	68, 6, 72, 73, 11, 74, 14, 72, 
	1, 73, 75, 73, 76, 1, 76, 1, 
	77, 78, 77, 76, 6, 79, 11, 74, 
	14, 79, 1, 80, 81, 1, 82, 1, 
	83, 1, 84, 1, 85, 1, 86, 87, 
	86, 88, 1, 89, 90, 89, 91, 1, 
	91, 1, 92, 93, 92, 91, 6, 94, 
	11, 95, 14, 94, 1, 81, 1, 96, 
	1, 97, 1, 98, 1, 99, 99, 1, 
	99, 100, 99, 1, 101, 1, 102, 103, 
	102, 103, 103, 1, 104, 105, 104, 105, 
	105, 1, 106, 107, 106, 108, 105, 105, 
	105, 6, 109, 104, 110, 111, 112, 113, 
	11, 109, 1, 114, 1, 115, 1, 116, 
	117, 116, 118, 6, 119, 104, 11, 119, 
	1, 110, 1, 120, 1, 115, 1, 112, 
	1, 121, 1, 122, 1, 123, 1, 124, 
	1, 125, 1, 126, 1, 127, 1, 128, 
	129, 128, 129, 129, 1, 130, 131, 130, 
	131, 131, 1, 132, 133, 132, 131, 131, 
	131, 6, 134, 11, 95, 134, 1, 80, 
	135, 1, 17, 96, 17, 1, 136, 1, 
	137, 1, 138, 1, 139, 1, 140, 140, 
	1, 141, 142, 143, 144, 145, 147, 141, 
	146, 147, 147, 1, 149, 150, 148, 151, 
	152, 151, 153, 153, 153, 154, 6, 151, 
	153, 153, 153, 155, 156, 25, 11, 157, 
	37, 158, 159, 160, 161, 14, 162, 163, 
	164, 151, 154, 1, 165, 166, 167, 168, 
	169, 171, 165, 170, 171, 171, 1, 149, 
	173, 172, 172, 174, 175, 174, 1, 176, 
	177, 176, 153, 153, 153, 154, 6, 176, 
	153, 153, 153, 155, 25, 11, 37, 158, 
	160, 161, 14, 176, 154, 1, 165, 166, 
	167, 168, 169, 153, 171, 165, 170, 171, 
	171, 1, 146, 1, 178, 179, 178, 180, 
	180, 181, 180, 146, 182, 6, 183, 1, 
	184, 1, 185, 185, 1, 186, 142, 143, 
	187, 145, 188, 186, 146, 188, 188, 1, 
	189, 190, 189, 191, 191, 191, 188, 192, 
	188, 188, 6, 193, 153, 153, 153, 155, 
	156, 25, 11, 157, 37, 158, 159, 160, 
	161, 14, 162, 194, 164, 193, 154, 1, 
	195, 1, 196, 1, 197, 198, 197, 199, 
	199, 199, 201, 200, 6, 202, 1, 203, 
	60, 1, 204, 1, 165, 165, 1, 205, 
	1, 206, 1, 207, 207, 1, 208, 209, 
	208, 1, 210, 1, 203, 1, 80, 211, 
	1, 185, 96, 185, 1, 197, 198, 197, 
	199, 199, 199, 200, 6, 212, 1, 213, 
	1, 196, 1, 214, 215, 1, 216, 1, 
	217, 1, 218, 1, 196, 1, 219, 1, 
	220, 1, 196, 1, 221, 1, 222, 1, 
	223, 1, 224, 1, 196, 1, 225, 226, 
	1, 227, 1, 196, 1, 228, 1, 229, 
	1, 230, 1, 231, 231, 1, 232, 233, 
	234, 235, 236, 238, 232, 237, 238, 238, 
	1, 240, 241, 239, 242, 243, 242, 244, 
	244, 244, 245, 6, 242, 244, 244, 244, 
	246, 247, 25, 11, 248, 37, 249, 250, 
	251, 252, 14, 253, 254, 255, 242, 245, 
	1, 256, 257, 258, 259, 260, 262, 256, 
	261, 262, 262, 1, 240, 264, 263, 263, 
	265, 266, 265, 1, 267, 268, 267, 244, 
	244, 244, 245, 6, 267, 244, 244, 244, 
	246, 25, 11, 37, 249, 251, 252, 14, 
	267, 245, 1, 256, 257, 258, 259, 260, 
	244, 262, 256, 261, 262, 262, 1, 237, 
	1, 269, 270, 269, 271, 271, 272, 271, 
	237, 273, 6, 274, 1, 275, 1, 276, 
	276, 1, 277, 233, 234, 278, 236, 279, 
	277, 237, 279, 279, 1, 280, 281, 280, 
	282, 282, 282, 279, 283, 279, 279, 6, 
	284, 244, 244, 244, 246, 247, 25, 11, 
	248, 37, 249, 250, 251, 252, 14, 253, 
	285, 255, 284, 245, 1, 286, 1, 287, 
	1, 288, 289, 288, 290, 290, 290, 292, 
	291, 6, 293, 1, 294, 60, 1, 295, 
	1, 256, 256, 1, 296, 1, 297, 1, 
	298, 298, 1, 299, 300, 299, 1, 301, 
	1, 294, 1, 80, 302, 1, 276, 96, 
	276, 1, 288, 289, 288, 290, 290, 290, 
	291, 6, 303, 1, 304, 1, 287, 1, 
	305, 306, 1, 307, 1, 308, 1, 309, 
	1, 287, 1, 310, 1, 311, 1, 287, 
	1, 312, 1, 313, 1, 314, 1, 315, 
	1, 287, 1, 316, 226, 1, 317, 1, 
	287, 1, 318, 1, 304, 1, 316, 1, 
	319, 1, 320, 321, 320, 322, 322, 322, 
	319, 323, 6, 324, 325, 324, 282, 282, 
	282, 238, 283, 238, 238, 6, 239, 326, 
	1, 213, 1, 225, 1, 327, 1, 328, 
	329, 328, 330, 330, 330, 327, 331, 6, 
	332, 333, 332, 191, 191, 191, 147, 192, 
	147, 147, 6, 148, 334, 335, 334, 20, 
	20, 20, 6, 336, 9, 25, 11, 37, 
	12, 13, 14, 337, 336, 1, 226, 1, 
	338, 1, 339, 1, 340, 1, 341, 342, 
	343, 341, 343, 343, 1, 344, 345, 344, 
	3, 3, 3, 6, 346, 9, 10, 11, 
	347, 12, 13, 14, 348, 346, 1, 349, 
	1, 350, 350, 1, 350, 351, 350, 351, 
	351, 1, 352, 353, 352, 351, 351, 351, 
	6, 354, 1, 355, 1, 356, 1, 357, 
	1, 358, 358, 1, 359, 360, 361, 362, 
	363, 365, 359, 364, 365, 365, 1, 367, 
	368, 366, 369, 370, 369, 371, 371, 371, 
	372, 6, 369, 371, 371, 371, 373, 374, 
	10, 11, 375, 347, 376, 377, 378, 379, 
	14, 380, 381, 382, 369, 372, 1, 383, 
	384, 385, 386, 387, 389, 383, 388, 389, 
	389, 1, 367, 391, 390, 390, 392, 393, 
	392, 1, 394, 395, 394, 371, 371, 371, 
	372, 6, 394, 371, 371, 371, 373, 10, 
	11, 347, 376, 378, 379, 14, 394, 372, 
	1, 383, 384, 385, 386, 387, 371, 389, 
	383, 388, 389, 389, 1, 364, 1, 396, 
	397, 396, 398, 398, 399, 398, 364, 400, 
	6, 401, 1, 402, 1, 403, 403, 1, 
	404, 360, 361, 405, 363, 406, 404, 364, 
	406, 406, 1, 407, 408, 407, 409, 409, 
	409, 406, 410, 406, 406, 6, 411, 371, 
	371, 371, 373, 374, 10, 11, 375, 347, 
	376, 377, 378, 379, 14, 380, 412, 382, 
	411, 372, 1, 413, 1, 414, 1, 415, 
	416, 415, 417, 417, 417, 419, 418, 6, 
	420, 1, 421, 60, 1, 422, 1, 383, 
	383, 1, 423, 1, 424, 1, 425, 425, 
	1, 426, 427, 426, 1, 428, 1, 421, 
	1, 80, 429, 1, 403, 96, 403, 1, 
	415, 416, 415, 417, 417, 417, 418, 6, 
	430, 1, 431, 1, 414, 1, 432, 433, 
	1, 434, 1, 435, 1, 436, 1, 414, 
	1, 437, 1, 438, 1, 414, 1, 439, 
	1, 440, 1, 441, 1, 442, 1, 414, 
	1, 443, 226, 1, 444, 1, 414, 1, 
	445, 1, 431, 1, 443, 1, 446, 1, 
	447, 448, 447, 449, 449, 449, 446, 450, 
	6, 451, 452, 451, 409, 409, 409, 365, 
	410, 365, 365, 6, 366, 453, 454, 455, 
	456, 457, 459, 453, 458, 459, 459, 1, 
	461, 462, 460, 463, 464, 465, 465, 465, 
	463, 466, 1, 463, 464, 465, 465, 465, 
	467, 468, 469, 470, 471, 472, 473, 474, 
	475, 476, 463, 466, 1, 477, 478, 479, 
	480, 481, 483, 477, 482, 483, 483, 1, 
	461, 485, 484, 484, 486, 487, 486, 1, 
	488, 464, 465, 465, 465, 488, 466, 1, 
	488, 464, 465, 465, 465, 467, 470, 472, 
	473, 488, 466, 1, 477, 478, 479, 480, 
	481, 465, 483, 477, 482, 483, 483, 1, 
	458, 1, 489, 490, 491, 491, 492, 491, 
	489, 458, 493, 1, 494, 1, 495, 496, 
	497, 497, 497, 495, 494, 498, 1, 499, 
	500, 501, 501, 501, 459, 499, 502, 459, 
	459, 1, 503, 1, 504, 1, 477, 477, 
	1, 505, 1, 506, 1, 504, 1, 507, 
	1, 508, 1, 509, 509, 1, 510, 470, 
	510, 1, 504, 1, 511, 1, 512, 1, 
	513, 514, 515, 515, 515, 517, 513, 516, 
	1, 513, 514, 515, 515, 515, 513, 516, 
	1, 518, 1, 519, 1, 512, 1, 520, 
	521, 1, 522, 1, 523, 1, 524, 1, 
	512, 1, 525, 1, 526, 1, 512, 1, 
	527, 1, 528, 1, 529, 1, 530, 1, 
	512, 1, 531, 1, 532, 1, 512, 1, 
	533, 1, 519, 1, 460, 534, 535, 536, 
	534, 536, 536, 1, 537, 538, 537, 1, 
	539, 540, 539, 1, 539, 540, 541, 539, 
	1, 542, 1, 543, 1, 544, 1, 545, 
	546, 547, 545, 547, 547, 1, 548, 549, 
	536, 548, 536, 536, 1, 550, 540, 541, 
	551, 552, 550, 1, 553, 1, 554, 554, 
	1, 554, 555, 554, 555, 555, 1, 556, 
	557, 555, 556, 555, 555, 1, 558, 1, 
	559, 1, 560, 1, 561, 1, 562, 562, 
	1, 563, 564, 565, 566, 567, 569, 563, 
	568, 569, 569, 1, 571, 572, 570, 573, 
	540, 574, 574, 574, 573, 575, 1, 573, 
	540, 574, 574, 574, 576, 577, 541, 578, 
	551, 579, 580, 581, 582, 583, 584, 585, 
	573, 575, 1, 586, 587, 588, 589, 590, 
	592, 586, 591, 592, 592, 1, 571, 594, 
	593, 593, 595, 596, 595, 1, 597, 540, 
	574, 574, 574, 597, 575, 1, 597, 540, 
	574, 574, 574, 576, 541, 551, 579, 581, 
	582, 597, 575, 1, 586, 587, 588, 589, 
	590, 574, 592, 586, 591, 592, 592, 1, 
	568, 1, 598, 599, 600, 600, 601, 600, 
	598, 568, 602, 1, 603, 1, 604, 605, 
	606, 606, 606, 604, 603, 607, 1, 608, 
	609, 610, 610, 610, 569, 608, 611, 569, 
	569, 1, 612, 1, 613, 1, 586, 586, 
	1, 614, 1, 615, 1, 613, 1, 616, 
	1, 617, 1, 618, 618, 1, 619, 579, 
	619, 1, 613, 1, 620, 1, 621, 1, 
	622, 623, 624, 624, 624, 626, 622, 625, 
	1, 622, 623, 624, 624, 624, 622, 625, 
	1, 627, 1, 628, 1, 621, 1, 629, 
	630, 1, 631, 1, 632, 1, 633, 1, 
	621, 1, 634, 1, 635, 1, 621, 1, 
	636, 1, 637, 1, 638, 1, 639, 1, 
	621, 1, 640, 1, 641, 1, 621, 1, 
	642, 1, 628, 1, 570, 53, 48, 53, 
	6, 23, 9, 25, 11, 12, 13, 14, 
	23, 6, 119, 104, 11, 119, 6, 109, 
	104, 110, 111, 112, 113, 11, 109, 6, 
	134, 11, 95, 134, 6, 94, 11, 95, 
	14, 94, 6, 79, 11, 74, 14, 79, 
	6, 72, 73, 11, 74, 14, 72, 6, 
	151, 153, 153, 153, 155, 156, 25, 11, 
	157, 37, 158, 159, 160, 161, 14, 162, 
	163, 164, 151, 154, 6, 176, 153, 153, 
	153, 155, 25, 11, 37, 158, 160, 161, 
	14, 176, 154, 6, 242, 244, 244, 244, 
	246, 247, 25, 11, 248, 37, 249, 250, 
	251, 252, 14, 253, 254, 255, 242, 245, 
	6, 267, 244, 244, 244, 246, 25, 11, 
	37, 249, 251, 252, 14, 267, 245, 6, 
	284, 244, 244, 244, 246, 247, 25, 11, 
	248, 37, 249, 250, 251, 252, 14, 253, 
	285, 255, 284, 245, 6, 193, 153, 153, 
	153, 155, 156, 25, 11, 157, 37, 158, 
	159, 160, 161, 14, 162, 194, 164, 193, 
	154, 6, 36, 9, 25, 11, 37, 12, 
	13, 14, 38, 36, 6, 336, 9, 25, 
	11, 37, 12, 13, 14, 337, 336, 6, 
	7, 9, 10, 11, 12, 13, 14, 7, 
	6, 369, 371, 371, 371, 373, 374, 10, 
	11, 375, 347, 376, 377, 378, 379, 14, 
	380, 381, 382, 369, 372, 6, 394, 371, 
	371, 371, 373, 10, 11, 347, 376, 378, 
	379, 14, 394, 372, 6, 411, 371, 371, 
	371, 373, 374, 10, 11, 375, 347, 376, 
	377, 378, 379, 14, 380, 412, 382, 411, 
	372, 6, 346, 9, 10, 11, 347, 12, 
	13, 14, 348, 346, 6, 1, 1, 0
]

class << self
	attr_accessor :_querybuilder_trans_targs
	private :_querybuilder_trans_targs, :_querybuilder_trans_targs=
end
self._querybuilder_trans_targs = [
	1, 0, 2, 227, 2, 3, 0, 4, 
	440, 5, 223, 19, 34, 87, 76, 6, 
	7, 8, 8, 9, 220, 9, 10, 11, 
	425, 12, 13, 14, 15, 16, 9, 17, 
	16, 17, 18, 438, 18, 30, 89, 20, 
	21, 22, 23, 24, 25, 26, 27, 28, 
	27, 28, 29, 424, 27, 29, 31, 32, 
	33, 11, 425, 35, 36, 37, 38, 39, 
	40, 41, 39, 40, 41, 42, 431, 43, 
	42, 43, 47, 44, 45, 46, 430, 46, 
	48, 58, 49, 50, 51, 52, 53, 54, 
	55, 53, 54, 55, 56, 429, 56, 57, 
	59, 60, 61, 62, 63, 64, 65, 66, 
	65, 66, 67, 427, 65, 67, 68, 72, 
	73, 75, 69, 70, 71, 426, 65, 71, 
	74, 77, 78, 79, 80, 81, 82, 83, 
	84, 85, 84, 85, 86, 428, 86, 88, 
	90, 91, 92, 93, 94, 94, 95, 99, 
	101, 105, 106, 218, 95, 96, 219, 97, 
	432, 98, 104, 107, 113, 129, 116, 132, 
	120, 126, 140, 215, 213, 94, 95, 99, 
	101, 105, 106, 218, 99, 100, 101, 102, 
	103, 433, 97, 432, 98, 216, 104, 108, 
	109, 110, 110, 101, 111, 112, 437, 98, 
	104, 112, 145, 114, 115, 103, 433, 98, 
	104, 128, 117, 118, 119, 121, 122, 123, 
	123, 124, 125, 127, 130, 131, 133, 137, 
	134, 135, 136, 138, 139, 141, 142, 143, 
	144, 146, 148, 147, 149, 150, 151, 152, 
	152, 153, 157, 159, 163, 164, 211, 153, 
	154, 212, 155, 434, 156, 162, 165, 171, 
	187, 174, 190, 178, 184, 198, 208, 206, 
	152, 153, 157, 159, 163, 164, 211, 157, 
	158, 159, 160, 161, 435, 155, 434, 156, 
	209, 162, 166, 167, 168, 168, 159, 169, 
	170, 436, 156, 162, 170, 203, 172, 173, 
	161, 435, 156, 162, 186, 175, 176, 177, 
	179, 180, 181, 181, 182, 183, 185, 188, 
	189, 191, 195, 192, 193, 194, 196, 197, 
	199, 200, 201, 202, 204, 205, 207, 210, 
	155, 434, 156, 162, 155, 434, 214, 217, 
	97, 432, 98, 104, 97, 432, 221, 439, 
	221, 222, 224, 225, 226, 1, 2, 227, 
	228, 444, 228, 229, 233, 230, 231, 232, 
	4, 440, 234, 235, 236, 237, 238, 238, 
	239, 243, 245, 249, 250, 297, 239, 240, 
	298, 241, 441, 242, 248, 251, 257, 273, 
	260, 276, 264, 270, 284, 294, 292, 238, 
	239, 243, 245, 249, 250, 297, 243, 244, 
	245, 246, 247, 442, 241, 441, 242, 295, 
	248, 252, 253, 254, 254, 245, 255, 256, 
	443, 242, 248, 256, 289, 258, 259, 247, 
	442, 242, 248, 272, 261, 262, 263, 265, 
	266, 267, 267, 268, 269, 271, 274, 275, 
	277, 281, 278, 279, 280, 282, 283, 285, 
	286, 287, 288, 290, 291, 293, 296, 241, 
	441, 242, 248, 241, 441, 299, 300, 304, 
	306, 310, 311, 314, 300, 301, 351, 302, 
	445, 303, 309, 315, 326, 330, 318, 333, 
	321, 325, 341, 346, 349, 299, 300, 304, 
	306, 310, 311, 314, 304, 305, 306, 307, 
	308, 302, 445, 303, 312, 309, 313, 302, 
	445, 303, 309, 302, 445, 303, 309, 316, 
	317, 319, 320, 322, 323, 324, 324, 327, 
	328, 308, 445, 303, 309, 329, 331, 332, 
	334, 338, 335, 336, 337, 339, 340, 342, 
	343, 344, 345, 347, 348, 350, 352, 353, 
	360, 353, 354, 355, 446, 356, 357, 358, 
	359, 352, 353, 360, 361, 446, 361, 362, 
	366, 363, 364, 365, 355, 446, 367, 368, 
	369, 370, 371, 371, 372, 376, 378, 382, 
	383, 386, 372, 373, 423, 374, 375, 381, 
	387, 398, 402, 390, 405, 393, 397, 413, 
	418, 421, 371, 372, 376, 378, 382, 383, 
	386, 376, 377, 378, 379, 380, 374, 446, 
	375, 384, 381, 385, 374, 446, 375, 381, 
	374, 446, 375, 381, 388, 389, 391, 392, 
	394, 395, 396, 396, 399, 400, 380, 446, 
	375, 381, 401, 403, 404, 406, 410, 407, 
	408, 409, 411, 412, 414, 415, 416, 417, 
	419, 420, 422
]

class << self
	attr_accessor :_querybuilder_trans_actions
	private :_querybuilder_trans_actions, :_querybuilder_trans_actions=
end
self._querybuilder_trans_actions = [
	0, 0, 25, 1, 0, 0, 47, 0, 
	0, 1, 0, 0, 0, 1, 0, 1, 
	1, 45, 0, 25, 1, 0, 0, 0, 
	0, 0, 0, 0, 0, 43, 130, 127, 
	0, 1, 13, 13, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 41, 124, 
	0, 1, 9, 9, 9, 0, 0, 0, 
	1, 29, 29, 0, 0, 0, 0, 37, 
	118, 118, 0, 1, 1, 5, 5, 5, 
	0, 0, 0, 1, 1, 5, 5, 0, 
	0, 0, 0, 0, 0, 0, 31, 112, 
	112, 0, 1, 1, 5, 5, 0, 0, 
	0, 0, 0, 0, 0, 0, 39, 121, 
	0, 1, 9, 9, 9, 0, 1, 1, 
	1, 1, 1, 1, 11, 11, 11, 0, 
	1, 0, 0, 0, 0, 0, 0, 0, 
	35, 115, 0, 1, 33, 33, 0, 1, 
	0, 0, 0, 0, 19, 0, 0, 0, 
	21, 1, 1, 1, 1, 3, 0, 0, 
	0, 1, 1, 1, 1, 1, 1, 1, 
	1, 1, 1, 1, 1, 15, 15, 15, 
	88, 85, 85, 85, 1, 0, 0, 0, 
	0, 0, 5, 5, 49, 1, 49, 1, 
	1, 133, 0, 106, 1, 79, 79, 67, 
	67, 0, 1, 1, 1, 17, 17, 94, 
	94, 0, 1, 1, 1, 1, 1, 15, 
	0, 1, 1, 1, 1, 1, 1, 1, 
	1, 1, 1, 1, 1, 1, 1, 1, 
	1, 1, 0, 1, 0, 0, 0, 19, 
	0, 0, 0, 21, 1, 1, 1, 1, 
	3, 0, 0, 0, 1, 1, 1, 1, 
	1, 1, 1, 1, 1, 1, 1, 1, 
	15, 15, 15, 88, 85, 85, 85, 1, 
	0, 0, 0, 0, 0, 5, 5, 49, 
	1, 49, 1, 1, 133, 0, 103, 1, 
	79, 79, 67, 67, 0, 1, 1, 1, 
	17, 17, 94, 94, 0, 1, 1, 1, 
	1, 1, 15, 0, 1, 1, 1, 1, 
	1, 1, 1, 1, 1, 1, 1, 1, 
	1, 1, 1, 1, 1, 1, 1, 1, 
	7, 7, 58, 58, 9, 9, 1, 1, 
	7, 7, 58, 58, 9, 9, 13, 13, 
	0, 0, 0, 0, 0, 43, 130, 127, 
	13, 13, 0, 0, 0, 0, 0, 1, 
	29, 29, 0, 0, 0, 0, 19, 0, 
	0, 0, 21, 1, 1, 1, 1, 3, 
	0, 0, 0, 1, 1, 1, 1, 1, 
	1, 1, 1, 1, 1, 1, 1, 15, 
	15, 15, 88, 85, 85, 85, 1, 0, 
	0, 0, 0, 0, 5, 5, 49, 1, 
	49, 1, 1, 91, 0, 103, 1, 70, 
	70, 67, 67, 0, 1, 1, 1, 17, 
	17, 94, 94, 0, 1, 1, 1, 1, 
	1, 15, 0, 1, 1, 1, 1, 1, 
	1, 1, 1, 1, 1, 1, 1, 1, 
	1, 1, 1, 1, 1, 1, 1, 7, 
	7, 58, 58, 9, 9, 0, 0, 0, 
	21, 1, 1, 1, 1, 3, 0, 0, 
	23, 1, 1, 1, 1, 1, 1, 1, 
	1, 1, 1, 1, 1, 15, 15, 15, 
	88, 85, 85, 85, 1, 0, 0, 0, 
	0, 5, 52, 49, 1, 49, 1, 7, 
	61, 58, 58, 9, 73, 67, 67, 1, 
	1, 1, 1, 1, 1, 15, 0, 1, 
	1, 17, 97, 94, 94, 0, 1, 1, 
	1, 1, 1, 1, 1, 1, 1, 1, 
	1, 1, 1, 1, 1, 1, 0, 25, 
	1, 0, 0, 0, 27, 0, 0, 0, 
	0, 43, 130, 127, 13, 82, 0, 0, 
	0, 0, 0, 1, 29, 109, 0, 0, 
	0, 0, 19, 0, 0, 0, 21, 1, 
	1, 1, 1, 3, 0, 0, 1, 1, 
	1, 1, 1, 1, 1, 1, 1, 1, 
	1, 1, 15, 15, 15, 88, 85, 85, 
	85, 1, 0, 0, 0, 0, 5, 55, 
	49, 1, 49, 1, 7, 64, 58, 58, 
	9, 76, 67, 67, 1, 1, 1, 1, 
	1, 1, 15, 0, 1, 1, 17, 100, 
	94, 94, 0, 1, 1, 1, 1, 1, 
	1, 1, 1, 1, 1, 1, 1, 1, 
	1, 1, 1
]

class << self
	attr_accessor :_querybuilder_eof_actions
	private :_querybuilder_eof_actions, :_querybuilder_eof_actions=
end
self._querybuilder_eof_actions = [
	0, 0, 0, 47, 0, 0, 0, 0, 
	0, 0, 47, 0, 0, 0, 0, 0, 
	0, 47, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 47, 0, 0, 0, 
	0, 47, 0, 0, 0, 0, 0, 0, 
	0, 47, 0, 0, 0, 47, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 47, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 47, 0, 0, 0, 47, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 47, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	47, 0, 0, 0, 0, 0, 47, 0, 
	0, 0, 47, 0, 0, 0, 0, 47, 
	0, 0, 0, 47, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	47, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 47, 0, 0, 0, 0, 0, 
	47, 0, 0, 0, 47, 0, 0, 0, 
	0, 47, 0, 0, 0, 47, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 47, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 47, 47, 0, 0, 0, 0, 
	0, 47, 47, 0, 47, 0, 0, 0, 
	0, 0, 0, 47, 0, 0, 0, 0, 
	47, 0, 0, 0, 0, 0, 0, 0, 
	47, 0, 0, 0, 0, 0, 47, 0, 
	0, 0, 47, 0, 0, 0, 0, 47, 
	0, 0, 0, 47, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	47, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	47, 47, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0
]

class << self
	attr_accessor :querybuilder_start
end
self.querybuilder_start = 1;
class << self
	attr_accessor :querybuilder_first_final
end
self.querybuilder_first_final = 424;
class << self
	attr_accessor :querybuilder_error
end
self.querybuilder_error = 0;

class << self
	attr_accessor :querybuilder_en_expr_p
end
self.querybuilder_en_expr_p = 299;
class << self
	attr_accessor :querybuilder_en_clause_p
end
self.querybuilder_en_clause_p = 352;
class << self
	attr_accessor :querybuilder_en_main
end
self.querybuilder_en_main = 1;

# line 159 "querybuilder_rb.rl"

    def self.parse(string)
      if string.kind_of?(Array)
        data = "(#{string.join(') or (')})"
      else
        data = "#{string}\n"
      end
      stack = [[:query]]
      last  = stack.last
      str_buf         = ""
      clause_state = :relation
      eof = 0;
      
# line 1087 "querybuilder_rb.rb"
begin
	p ||= 0
	pe ||= data.length
	cs = querybuilder_start
end
# line 172 "querybuilder_rb.rl"
      
# line 1095 "querybuilder_rb.rb"
begin
	_klen, _trans, _keys, _acts, _nacts = nil
	_goto_level = 0
	_resume = 10
	_eof_trans = 15
	_again = 20
	_test_eof = 30
	_out = 40
	while true
	_trigger_goto = false
	if _goto_level <= 0
	if p == pe
		_goto_level = _test_eof
		next
	end
	if cs == 0
		_goto_level = _out
		next
	end
	end
	if _goto_level <= _resume
	_keys = _querybuilder_key_offsets[cs]
	_trans = _querybuilder_index_offsets[cs]
	_klen = _querybuilder_single_lengths[cs]
	_break_match = false
	
	begin
	  if _klen > 0
	     _lower = _keys
	     _upper = _keys + _klen - 1

	     loop do
	        break if _upper < _lower
	        _mid = _lower + ( (_upper - _lower) >> 1 )

	        if data[p] < _querybuilder_trans_keys[_mid]
	           _upper = _mid - 1
	        elsif data[p] > _querybuilder_trans_keys[_mid]
	           _lower = _mid + 1
	        else
	           _trans += (_mid - _keys)
	           _break_match = true
	           break
	        end
	     end # loop
	     break if _break_match
	     _keys += _klen
	     _trans += _klen
	  end
	  _klen = _querybuilder_range_lengths[cs]
	  if _klen > 0
	     _lower = _keys
	     _upper = _keys + (_klen << 1) - 2
	     loop do
	        break if _upper < _lower
	        _mid = _lower + (((_upper-_lower) >> 1) & ~1)
	        if data[p] < _querybuilder_trans_keys[_mid]
	          _upper = _mid - 2
	        elsif data[p] > _querybuilder_trans_keys[_mid+1]
	          _lower = _mid + 2
	        else
	          _trans += ((_mid - _keys) >> 1)
	          _break_match = true
	          break
	        end
	     end # loop
	     break if _break_match
	     _trans += _klen
	  end
	end while false
	_trans = _querybuilder_indicies[_trans]
	cs = _querybuilder_trans_targs[_trans]
	if _querybuilder_trans_actions[_trans] != 0
		_acts = _querybuilder_trans_actions[_trans]
		_nacts = _querybuilder_actions[_acts]
		_acts += 1
		while _nacts > 0
			_nacts -= 1
			_acts += 1
			case _querybuilder_actions[_acts - 1]
when 0 then
# line 6 "querybuilder_rb.rl"
		begin

      str_buf += data[p].chr
    		end
# line 6 "querybuilder_rb.rl"
when 1 then
# line 10 "querybuilder_rb.rl"
		begin

      last << [:string, str_buf]
      str_buf = ""
    		end
# line 10 "querybuilder_rb.rl"
when 2 then
# line 15 "querybuilder_rb.rl"
		begin

      last << [:integer, str_buf]
      str_buf = ""
    		end
# line 15 "querybuilder_rb.rl"
when 3 then
# line 20 "querybuilder_rb.rl"
		begin

      last << [:real, str_buf]
      str_buf = ""
    		end
# line 20 "querybuilder_rb.rl"
when 4 then
# line 25 "querybuilder_rb.rl"
		begin

      last << [:field, str_buf]
      str_buf = ""
    		end
# line 25 "querybuilder_rb.rl"
when 5 then
# line 30 "querybuilder_rb.rl"
		begin

      last = apply_op(stack, str_buf.downcase.to_sym, false)
      str_buf = ""
    		end
# line 30 "querybuilder_rb.rl"
when 6 then
# line 35 "querybuilder_rb.rl"
		begin

      if clause_state == :relation || clause_state == :parenthesis
        last = insert(stack, [:relation, str_buf])
        str_buf = ""
      end
    		end
# line 35 "querybuilder_rb.rl"
when 7 then
# line 42 "querybuilder_rb.rl"
		begin

      last = apply_op(stack, str_buf.downcase.to_sym)
      str_buf = ""
    		end
# line 42 "querybuilder_rb.rl"
when 8 then
# line 47 "querybuilder_rb.rl"
		begin

      last = apply_op(stack, :interval)
      last << str_buf
      str_buf = ""
    		end
# line 47 "querybuilder_rb.rl"
when 9 then
# line 53 "querybuilder_rb.rl"
		begin

      last = apply_op(stack, :filter)
      clause_state = :filter
    		end
# line 53 "querybuilder_rb.rl"
when 10 then
# line 58 "querybuilder_rb.rl"
		begin

      # remember current machine state 'cs'
      last << [:par, cs]
      stack.push last.last
      last = last.last
      	begin
		cs = 299
		_trigger_goto = true
		_goto_level = _again
		break
	end

    		end
# line 58 "querybuilder_rb.rl"
when 11 then
# line 66 "querybuilder_rb.rl"
		begin

      pop_stack(stack, :par_close)
      # reset machine state 'cs'
      cs = stack.last.delete_at(1)
      # one more time to remove [:par...] line
      stack.pop 
      last = stack.last
      # closing ')' must be parsed twice
      p = p - 1;
    		end
# line 66 "querybuilder_rb.rl"
when 12 then
# line 77 "querybuilder_rb.rl"
		begin

      # remember current machine state 'cs'
      clause_state = :parenthesis
      last << [:clause_par, cs]
      stack.push last.last
      last = last.last
      	begin
		cs = 352
		_trigger_goto = true
		_goto_level = _again
		break
	end

    		end
# line 77 "querybuilder_rb.rl"
when 13 then
# line 86 "querybuilder_rb.rl"
		begin

      pop_stack(stack, :clause_par_close)
      clause_state = :relation
      # reset machine state 'cs'
      cs = stack.last.delete_at(1)
      # one more time to remove [:clause_par...] line
      stack.pop 
      last = stack.last
      # closing ')' must be parsed twice
      p = p - 1;
    		end
# line 86 "querybuilder_rb.rl"
when 14 then
# line 98 "querybuilder_rb.rl"
		begin

      last = apply_op(stack, :scope)
      last << str_buf
      str_buf = ""
    		end
# line 98 "querybuilder_rb.rl"
when 15 then
# line 104 "querybuilder_rb.rl"
		begin

      last = apply_op(stack, :offset)
    		end
# line 104 "querybuilder_rb.rl"
when 16 then
# line 108 "querybuilder_rb.rl"
		begin

      last << [:param, str_buf]
      str_buf = ""
    		end
# line 108 "querybuilder_rb.rl"
when 17 then
# line 113 "querybuilder_rb.rl"
		begin

      last = apply_op(stack, :paginate)
    		end
# line 113 "querybuilder_rb.rl"
when 18 then
# line 117 "querybuilder_rb.rl"
		begin

      last = apply_op(stack, :limit)
      str_buf = ""
    		end
# line 117 "querybuilder_rb.rl"
when 19 then
# line 122 "querybuilder_rb.rl"
		begin

      last = apply_op(stack, :order)
      str_buf = ""
    		end
# line 122 "querybuilder_rb.rl"
when 20 then
# line 127 "querybuilder_rb.rl"
		begin

      last = apply_op(stack, :group)
    		end
# line 127 "querybuilder_rb.rl"
when 21 then
# line 131 "querybuilder_rb.rl"
		begin

      last = apply_op(stack, :from)
    		end
# line 131 "querybuilder_rb.rl"
when 22 then
# line 135 "querybuilder_rb.rl"
		begin

      if clause_state == :relation
        last = apply_op(stack, "clause_#{str_buf}".to_sym)
        str_buf = ""
      end
    		end
# line 135 "querybuilder_rb.rl"
when 23 then
# line 146 "querybuilder_rb.rl"
		begin

      p = p - 1;
      raise QueryException.new("Syntax error near #{data[p..-1].chomp.inspect}.")
    		end
# line 146 "querybuilder_rb.rl"
# line 1401 "querybuilder_rb.rb"
			end # action switch
		end
	end
	if _trigger_goto
		next
	end
	end
	if _goto_level <= _again
	if cs == 0
		_goto_level = _out
		next
	end
	p += 1
	if p != pe
		_goto_level = _resume
		next
	end
	end
	if _goto_level <= _test_eof
	if p == eof
	__acts = _querybuilder_eof_actions[cs]
	__nacts =  _querybuilder_actions[__acts]
	__acts += 1
	while __nacts > 0
		__nacts -= 1
		__acts += 1
		case _querybuilder_actions[__acts - 1]
when 23 then
# line 146 "querybuilder_rb.rl"
		begin

      p = p - 1;
      raise QueryException.new("Syntax error near #{data[p..-1].chomp.inspect}.")
    		end
# line 146 "querybuilder_rb.rl"
# line 1437 "querybuilder_rb.rb"
		end # eof action switch
	end
	if _trigger_goto
		next
	end
end
	end
	if _goto_level <= _out
		break
	end
	end
	end
# line 173 "querybuilder_rb.rl"
    
      raise QueryException.new("Syntax error near #{data[p..-1].chomp.inspect}.") if p != pe
      stack.first
    end
  end
end
