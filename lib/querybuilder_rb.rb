
# line 1 "querybuilder_rb.rl"
module QueryBuilder
  class Parser
  
# line 178 "querybuilder_rb.rl"


    
# line 11 "querybuilder_rb.rb"
class << self
	attr_accessor :_querybuilder_actions
	private :_querybuilder_actions, :_querybuilder_actions=
end
self._querybuilder_actions = [
	0, 1, 0, 1, 1, 1, 2, 1, 
	3, 1, 4, 1, 5, 1, 6, 1, 
	7, 1, 8, 1, 9, 1, 10, 1, 
	11, 1, 12, 1, 13, 1, 14, 1, 
	15, 1, 16, 1, 17, 1, 18, 1, 
	19, 1, 20, 1, 21, 1, 22, 1, 
	23, 1, 24, 1, 25, 1, 26, 1, 
	27, 2, 4, 0, 2, 4, 15, 2, 
	4, 17, 2, 5, 0, 2, 5, 15, 
	2, 5, 17, 2, 6, 0, 2, 6, 
	10, 2, 6, 15, 2, 6, 17, 2, 
	7, 0, 2, 7, 15, 2, 7, 17, 
	2, 8, 0, 2, 10, 6, 2, 10, 
	17, 2, 11, 0, 2, 11, 14, 2, 
	11, 26, 2, 12, 0, 2, 12, 15, 
	2, 12, 17, 2, 14, 16, 2, 16, 
	14, 2, 18, 17, 2, 19, 0, 2, 
	21, 0, 2, 22, 0, 2, 23, 0, 
	2, 24, 0, 2, 25, 0, 2, 25, 
	16, 2, 26, 11
]

class << self
	attr_accessor :_querybuilder_key_offsets
	private :_querybuilder_key_offsets, :_querybuilder_key_offsets=
end
self._querybuilder_key_offsets = [
	0, 0, 9, 13, 16, 17, 18, 21, 
	30, 34, 37, 38, 39, 40, 49, 58, 
	66, 67, 68, 69, 70, 73, 77, 78, 
	86, 94, 104, 105, 106, 107, 108, 114, 
	120, 122, 128, 134, 136, 141, 142, 143, 
	144, 145, 146, 152, 158, 160, 165, 166, 
	167, 168, 169, 170, 171, 172, 180, 188, 
	196, 198, 199, 200, 201, 204, 208, 209, 
	217, 225, 235, 236, 237, 241, 242, 243, 
	244, 245, 253, 261, 271, 279, 287, 297, 
	298, 301, 309, 317, 319, 323, 324, 325, 
	326, 327, 330, 345, 347, 355, 370, 371, 
	374, 377, 379, 379, 379, 388, 396, 404, 
	418, 434, 436, 436, 440, 448, 449, 450, 
	453, 468, 470, 481, 483, 493, 507, 508, 
	509, 518, 519, 522, 525, 526, 527, 528, 
	531, 533, 534, 537, 538, 539, 540, 541, 
	542, 543, 544, 545, 546, 547, 549, 550, 
	553, 557, 558, 559, 561, 565, 566, 567, 
	568, 569, 570, 572, 573, 574, 575, 576, 
	577, 580, 595, 597, 605, 620, 621, 624, 
	627, 629, 629, 629, 638, 646, 654, 668, 
	684, 686, 686, 690, 698, 699, 700, 703, 
	718, 720, 731, 733, 743, 757, 758, 759, 
	768, 769, 772, 775, 776, 777, 778, 781, 
	783, 784, 787, 788, 789, 790, 791, 792, 
	793, 794, 795, 796, 797, 799, 800, 803, 
	807, 808, 809, 811, 815, 816, 817, 818, 
	819, 820, 822, 823, 824, 825, 826, 827, 
	841, 842, 842, 843, 844, 845, 859, 860, 
	860, 868, 869, 870, 871, 872, 881, 889, 
	890, 893, 901, 909, 910, 911, 912, 913, 
	916, 931, 933, 941, 956, 957, 960, 963, 
	965, 965, 965, 974, 982, 990, 1004, 1020, 
	1022, 1022, 1026, 1034, 1035, 1036, 1039, 1054, 
	1056, 1067, 1069, 1079, 1093, 1094, 1095, 1104, 
	1105, 1108, 1111, 1112, 1113, 1114, 1117, 1119, 
	1120, 1123, 1124, 1125, 1126, 1127, 1128, 1129, 
	1130, 1131, 1132, 1133, 1135, 1136, 1139, 1143, 
	1144, 1145, 1147, 1151, 1152, 1153, 1154, 1155, 
	1156, 1158, 1159, 1160, 1161, 1162, 1163, 1177, 
	1178, 1178, 1193, 1195, 1204, 1225, 1240, 1241, 
	1244, 1247, 1249, 1249, 1249, 1259, 1267, 1275, 
	1290, 1306, 1308, 1308, 1312, 1321, 1337, 1338, 
	1339, 1342, 1343, 1345, 1348, 1349, 1350, 1351, 
	1352, 1353, 1354, 1356, 1357, 1360, 1364, 1365, 
	1366, 1368, 1380, 1382, 1393, 1408, 1409, 1410, 
	1420, 1421, 1422, 1423, 1426, 1427, 1428, 1429, 
	1430, 1431, 1432, 1433, 1434, 1435, 1436, 1437, 
	1438, 1439, 1440, 1441, 1442, 1443, 1443, 1452, 
	1456, 1460, 1465, 1466, 1467, 1468, 1477, 1486, 
	1493, 1494, 1497, 1505, 1514, 1515, 1516, 1517, 
	1518, 1521, 1536, 1538, 1547, 1570, 1585, 1586, 
	1589, 1592, 1594, 1594, 1594, 1604, 1612, 1620, 
	1635, 1651, 1653, 1653, 1657, 1666, 1684, 1685, 
	1686, 1689, 1690, 1692, 1695, 1696, 1697, 1698, 
	1699, 1700, 1701, 1703, 1704, 1707, 1711, 1712, 
	1713, 1715, 1727, 1729, 1740, 1755, 1756, 1757, 
	1767, 1768, 1769, 1770, 1773, 1774, 1775, 1776, 
	1777, 1778, 1779, 1780, 1781, 1782, 1783, 1784, 
	1785, 1786, 1787, 1788, 1789, 1790, 1790, 1799, 
	1808, 1819, 1826, 1832, 1837, 1841, 1844, 1855, 
	1862, 1885, 1903, 1926, 1949, 1967, 1990, 2001, 
	2012, 2035, 2053, 2076, 2076
]

class << self
	attr_accessor :_querybuilder_trans_keys
	private :_querybuilder_trans_keys, :_querybuilder_trans_keys=
end
self._querybuilder_trans_keys = [
	32, 40, 95, 9, 10, 65, 90, 97, 
	122, 32, 41, 9, 10, 32, 9, 10, 
	110, 100, 32, 9, 10, 32, 40, 95, 
	9, 10, 65, 90, 97, 122, 32, 41, 
	9, 10, 32, 9, 10, 114, 111, 109, 
	32, 40, 95, 9, 10, 65, 90, 97, 
	122, 32, 40, 95, 9, 10, 65, 90, 
	97, 122, 32, 95, 9, 10, 65, 90, 
	97, 122, 114, 111, 117, 112, 32, 9, 
	10, 32, 98, 9, 10, 121, 32, 95, 
	9, 10, 65, 90, 97, 122, 32, 95, 
	9, 10, 65, 90, 97, 122, 32, 44, 
	46, 95, 9, 10, 65, 90, 97, 122, 
	105, 109, 105, 116, 32, 45, 9, 10, 
	48, 57, 32, 45, 9, 10, 48, 57, 
	48, 57, 32, 44, 9, 10, 48, 57, 
	32, 45, 9, 10, 48, 57, 48, 57, 
	32, 9, 10, 48, 57, 102, 102, 115, 
	101, 116, 32, 45, 9, 10, 48, 57, 
	32, 45, 9, 10, 48, 57, 48, 57, 
	32, 9, 10, 48, 57, 97, 103, 105, 
	110, 97, 116, 101, 32, 95, 9, 10, 
	65, 90, 97, 122, 32, 95, 9, 10, 
	65, 90, 97, 122, 32, 95, 9, 10, 
	65, 90, 97, 122, 102, 114, 100, 101, 
	114, 32, 9, 10, 32, 98, 9, 10, 
	121, 32, 95, 9, 10, 65, 90, 97, 
	122, 32, 95, 9, 10, 65, 90, 97, 
	122, 32, 44, 46, 95, 9, 10, 65, 
	90, 97, 122, 83, 67, 32, 44, 9, 
	10, 69, 115, 99, 101, 32, 95, 9, 
	10, 65, 90, 97, 122, 32, 95, 9, 
	10, 65, 90, 97, 122, 32, 44, 46, 
	95, 9, 10, 65, 90, 97, 122, 32, 
	95, 9, 10, 65, 90, 97, 122, 32, 
	95, 9, 10, 65, 90, 97, 122, 32, 
	44, 46, 95, 9, 10, 65, 90, 97, 
	122, 110, 32, 9, 10, 32, 95, 9, 
	10, 65, 90, 97, 122, 32, 95, 9, 
	10, 65, 90, 97, 122, 102, 114, 32, 
	100, 9, 10, 104, 101, 114, 101, 32, 
	9, 10, 32, 34, 35, 39, 40, 45, 
	95, 9, 10, 48, 57, 65, 90, 97, 
	122, 34, 92, 32, 43, 45, 61, 9, 
	10, 60, 62, 32, 34, 35, 39, 40, 
	45, 95, 9, 10, 48, 57, 65, 90, 
	97, 122, 123, 34, 92, 125, 34, 92, 
	125, 34, 92, 32, 43, 45, 46, 61, 
	9, 10, 60, 62, 32, 95, 9, 10, 
	65, 90, 97, 122, 32, 95, 9, 10, 
	65, 90, 97, 122, 32, 43, 45, 46, 
	61, 95, 9, 10, 60, 62, 65, 90, 
	97, 122, 32, 34, 35, 39, 40, 45, 
	61, 95, 9, 10, 48, 57, 65, 90, 
	97, 122, 39, 92, 32, 41, 9, 10, 
	32, 43, 45, 61, 9, 10, 60, 62, 
	110, 100, 32, 9, 10, 32, 34, 35, 
	39, 40, 45, 95, 9, 10, 48, 57, 
	65, 90, 97, 122, 48, 57, 32, 43, 
	45, 46, 61, 9, 10, 48, 57, 60, 
	62, 48, 57, 32, 43, 45, 61, 9, 
	10, 48, 57, 60, 62, 32, 43, 45, 
	46, 61, 95, 9, 10, 60, 62, 65, 
	90, 97, 122, 97, 121, 32, 43, 45, 
	61, 115, 9, 10, 60, 62, 113, 32, 
	9, 10, 101, 114, 116, 111, 117, 114, 
	101, 105, 116, 107, 109, 101, 97, 105, 
	111, 116, 99, 104, 110, 117, 116, 101, 
	110, 116, 104, 101, 111, 116, 32, 9, 
	10, 32, 108, 9, 10, 105, 107, 102, 
	114, 32, 100, 9, 10, 101, 99, 111, 
	110, 100, 101, 104, 101, 107, 101, 114, 
	101, 32, 9, 10, 32, 34, 35, 39, 
	40, 45, 95, 9, 10, 48, 57, 65, 
	90, 97, 122, 34, 92, 32, 43, 45, 
	61, 9, 10, 60, 62, 32, 34, 35, 
	39, 40, 45, 95, 9, 10, 48, 57, 
	65, 90, 97, 122, 123, 34, 92, 125, 
	34, 92, 125, 34, 92, 32, 43, 45, 
	46, 61, 9, 10, 60, 62, 32, 95, 
	9, 10, 65, 90, 97, 122, 32, 95, 
	9, 10, 65, 90, 97, 122, 32, 43, 
	45, 46, 61, 95, 9, 10, 60, 62, 
	65, 90, 97, 122, 32, 34, 35, 39, 
	40, 45, 61, 95, 9, 10, 48, 57, 
	65, 90, 97, 122, 39, 92, 32, 41, 
	9, 10, 32, 43, 45, 61, 9, 10, 
	60, 62, 110, 100, 32, 9, 10, 32, 
	34, 35, 39, 40, 45, 95, 9, 10, 
	48, 57, 65, 90, 97, 122, 48, 57, 
	32, 43, 45, 46, 61, 9, 10, 48, 
	57, 60, 62, 48, 57, 32, 43, 45, 
	61, 9, 10, 48, 57, 60, 62, 32, 
	43, 45, 46, 61, 95, 9, 10, 60, 
	62, 65, 90, 97, 122, 97, 121, 32, 
	43, 45, 61, 115, 9, 10, 60, 62, 
	113, 32, 9, 10, 101, 114, 116, 111, 
	117, 114, 101, 105, 116, 107, 109, 101, 
	97, 105, 111, 116, 99, 104, 110, 117, 
	116, 101, 110, 116, 104, 101, 111, 116, 
	32, 9, 10, 32, 108, 9, 10, 105, 
	107, 102, 114, 32, 100, 9, 10, 101, 
	99, 111, 110, 100, 101, 104, 101, 107, 
	101, 97, 97, 32, 43, 45, 46, 61, 
	95, 9, 10, 60, 62, 65, 90, 97, 
	122, 101, 101, 97, 97, 32, 43, 45, 
	46, 61, 95, 9, 10, 60, 62, 65, 
	90, 97, 122, 101, 32, 95, 9, 10, 
	65, 90, 97, 122, 104, 114, 111, 109, 
	32, 40, 95, 9, 10, 65, 90, 97, 
	122, 32, 95, 9, 10, 65, 90, 97, 
	122, 110, 32, 9, 10, 32, 95, 9, 
	10, 65, 90, 97, 122, 32, 95, 9, 
	10, 65, 90, 97, 122, 104, 101, 114, 
	101, 32, 9, 10, 32, 34, 35, 39, 
	40, 45, 95, 9, 10, 48, 57, 65, 
	90, 97, 122, 34, 92, 32, 43, 45, 
	61, 9, 10, 60, 62, 32, 34, 35, 
	39, 40, 45, 95, 9, 10, 48, 57, 
	65, 90, 97, 122, 123, 34, 92, 125, 
	34, 92, 125, 34, 92, 32, 43, 45, 
	46, 61, 9, 10, 60, 62, 32, 95, 
	9, 10, 65, 90, 97, 122, 32, 95, 
	9, 10, 65, 90, 97, 122, 32, 43, 
	45, 46, 61, 95, 9, 10, 60, 62, 
	65, 90, 97, 122, 32, 34, 35, 39, 
	40, 45, 61, 95, 9, 10, 48, 57, 
	65, 90, 97, 122, 39, 92, 32, 41, 
	9, 10, 32, 43, 45, 61, 9, 10, 
	60, 62, 110, 100, 32, 9, 10, 32, 
	34, 35, 39, 40, 45, 95, 9, 10, 
	48, 57, 65, 90, 97, 122, 48, 57, 
	32, 43, 45, 46, 61, 9, 10, 48, 
	57, 60, 62, 48, 57, 32, 43, 45, 
	61, 9, 10, 48, 57, 60, 62, 32, 
	43, 45, 46, 61, 95, 9, 10, 60, 
	62, 65, 90, 97, 122, 97, 121, 32, 
	43, 45, 61, 115, 9, 10, 60, 62, 
	113, 32, 9, 10, 101, 114, 116, 111, 
	117, 114, 101, 105, 116, 107, 109, 101, 
	97, 105, 111, 116, 99, 104, 110, 117, 
	116, 101, 110, 116, 104, 101, 111, 116, 
	32, 9, 10, 32, 108, 9, 10, 105, 
	107, 102, 114, 32, 100, 9, 10, 101, 
	99, 111, 110, 100, 101, 104, 101, 107, 
	101, 97, 97, 32, 43, 45, 46, 61, 
	95, 9, 10, 60, 62, 65, 90, 97, 
	122, 101, 32, 34, 35, 39, 40, 45, 
	95, 9, 10, 48, 57, 65, 90, 97, 
	122, 34, 92, 32, 41, 43, 45, 61, 
	9, 10, 60, 62, 32, 41, 43, 45, 
	61, 97, 100, 101, 103, 104, 108, 109, 
	110, 111, 115, 119, 121, 9, 10, 60, 
	62, 32, 34, 35, 39, 40, 45, 95, 
	9, 10, 48, 57, 65, 90, 97, 122, 
	123, 34, 92, 125, 34, 92, 125, 34, 
	92, 32, 41, 43, 45, 46, 61, 9, 
	10, 60, 62, 32, 95, 9, 10, 65, 
	90, 97, 122, 32, 95, 9, 10, 65, 
	90, 97, 122, 32, 41, 43, 45, 46, 
	61, 95, 9, 10, 60, 62, 65, 90, 
	97, 122, 32, 34, 35, 39, 40, 45, 
	61, 95, 9, 10, 48, 57, 65, 90, 
	97, 122, 39, 92, 32, 41, 9, 10, 
	32, 41, 43, 45, 61, 9, 10, 60, 
	62, 32, 41, 43, 45, 61, 97, 101, 
	103, 108, 109, 110, 111, 9, 10, 60, 
	62, 110, 100, 32, 9, 10, 113, 101, 
	116, 101, 105, 116, 107, 101, 97, 116, 
	99, 104, 101, 111, 116, 32, 9, 10, 
	32, 108, 9, 10, 105, 114, 48, 57, 
	32, 41, 43, 45, 46, 61, 9, 10, 
	48, 57, 60, 62, 48, 57, 32, 41, 
	43, 45, 61, 9, 10, 48, 57, 60, 
	62, 32, 41, 43, 45, 46, 61, 95, 
	9, 10, 60, 62, 65, 90, 97, 122, 
	97, 121, 32, 41, 43, 45, 61, 115, 
	9, 10, 60, 62, 111, 117, 114, 97, 
	105, 111, 110, 117, 116, 101, 110, 116, 
	104, 101, 99, 111, 110, 100, 101, 101, 
	107, 101, 97, 32, 40, 95, 9, 10, 
	65, 90, 97, 122, 32, 41, 9, 10, 
	32, 41, 9, 10, 32, 41, 102, 9, 
	10, 114, 111, 109, 32, 40, 95, 9, 
	10, 65, 90, 97, 122, 32, 41, 95, 
	9, 10, 65, 90, 97, 122, 32, 41, 
	102, 105, 119, 9, 10, 110, 32, 9, 
	10, 32, 95, 9, 10, 65, 90, 97, 
	122, 32, 41, 95, 9, 10, 65, 90, 
	97, 122, 104, 101, 114, 101, 32, 9, 
	10, 32, 34, 35, 39, 40, 45, 95, 
	9, 10, 48, 57, 65, 90, 97, 122, 
	34, 92, 32, 41, 43, 45, 61, 9, 
	10, 60, 62, 32, 41, 43, 45, 61, 
	97, 100, 101, 102, 103, 104, 105, 108, 
	109, 110, 111, 115, 119, 121, 9, 10, 
	60, 62, 32, 34, 35, 39, 40, 45, 
	95, 9, 10, 48, 57, 65, 90, 97, 
	122, 123, 34, 92, 125, 34, 92, 125, 
	34, 92, 32, 41, 43, 45, 46, 61, 
	9, 10, 60, 62, 32, 95, 9, 10, 
	65, 90, 97, 122, 32, 95, 9, 10, 
	65, 90, 97, 122, 32, 41, 43, 45, 
	46, 61, 95, 9, 10, 60, 62, 65, 
	90, 97, 122, 32, 34, 35, 39, 40, 
	45, 61, 95, 9, 10, 48, 57, 65, 
	90, 97, 122, 39, 92, 32, 41, 9, 
	10, 32, 41, 43, 45, 61, 9, 10, 
	60, 62, 32, 41, 43, 45, 61, 97, 
	101, 102, 103, 105, 108, 109, 110, 111, 
	9, 10, 60, 62, 110, 100, 32, 9, 
	10, 113, 101, 116, 101, 105, 116, 107, 
	101, 97, 116, 99, 104, 101, 111, 116, 
	32, 9, 10, 32, 108, 9, 10, 105, 
	114, 48, 57, 32, 41, 43, 45, 46, 
	61, 9, 10, 48, 57, 60, 62, 48, 
	57, 32, 41, 43, 45, 61, 9, 10, 
	48, 57, 60, 62, 32, 41, 43, 45, 
	46, 61, 95, 9, 10, 60, 62, 65, 
	90, 97, 122, 97, 121, 32, 41, 43, 
	45, 61, 115, 9, 10, 60, 62, 111, 
	117, 114, 97, 105, 111, 110, 117, 116, 
	101, 110, 116, 104, 101, 99, 111, 110, 
	100, 101, 101, 107, 101, 97, 32, 97, 
	102, 103, 108, 111, 112, 9, 10, 32, 
	97, 102, 103, 108, 111, 112, 9, 10, 
	32, 97, 102, 103, 105, 108, 111, 112, 
	119, 9, 10, 32, 44, 108, 111, 112, 
	9, 10, 32, 44, 111, 112, 9, 10, 
	32, 111, 112, 9, 10, 32, 112, 9, 
	10, 32, 9, 10, 32, 44, 65, 68, 
	97, 100, 108, 111, 112, 9, 10, 32, 
	44, 108, 111, 112, 9, 10, 32, 43, 
	45, 61, 97, 100, 101, 102, 103, 104, 
	105, 108, 109, 110, 111, 112, 115, 119, 
	121, 9, 10, 60, 62, 32, 43, 45, 
	61, 97, 101, 102, 103, 105, 108, 109, 
	110, 111, 112, 9, 10, 60, 62, 32, 
	43, 45, 61, 97, 100, 101, 102, 103, 
	104, 105, 108, 109, 110, 111, 112, 115, 
	119, 121, 9, 10, 60, 62, 32, 43, 
	45, 61, 97, 100, 101, 102, 103, 104, 
	105, 108, 109, 110, 111, 112, 115, 119, 
	121, 9, 10, 60, 62, 32, 43, 45, 
	61, 97, 101, 102, 103, 105, 108, 109, 
	110, 111, 112, 9, 10, 60, 62, 32, 
	43, 45, 61, 97, 100, 101, 102, 103, 
	104, 105, 108, 109, 110, 111, 112, 115, 
	119, 121, 9, 10, 60, 62, 32, 97, 
	102, 103, 105, 108, 111, 112, 119, 9, 
	10, 32, 97, 102, 103, 105, 108, 111, 
	112, 119, 9, 10, 32, 43, 45, 61, 
	97, 100, 101, 102, 103, 104, 105, 108, 
	109, 110, 111, 112, 115, 119, 121, 9, 
	10, 60, 62, 32, 43, 45, 61, 97, 
	101, 102, 103, 105, 108, 109, 110, 111, 
	112, 9, 10, 60, 62, 32, 43, 45, 
	61, 97, 100, 101, 102, 103, 104, 105, 
	108, 109, 110, 111, 112, 115, 119, 121, 
	9, 10, 60, 62, 0
]

class << self
	attr_accessor :_querybuilder_single_lengths
	private :_querybuilder_single_lengths, :_querybuilder_single_lengths=
end
self._querybuilder_single_lengths = [
	0, 3, 2, 1, 1, 1, 1, 3, 
	2, 1, 1, 1, 1, 3, 3, 2, 
	1, 1, 1, 1, 1, 2, 1, 2, 
	2, 4, 1, 1, 1, 1, 2, 2, 
	0, 2, 2, 0, 1, 1, 1, 1, 
	1, 1, 2, 2, 0, 1, 1, 1, 
	1, 1, 1, 1, 1, 2, 2, 2, 
	2, 1, 1, 1, 1, 2, 1, 2, 
	2, 4, 1, 1, 2, 1, 1, 1, 
	1, 2, 2, 4, 2, 2, 4, 1, 
	1, 2, 2, 2, 2, 1, 1, 1, 
	1, 1, 7, 2, 4, 7, 1, 3, 
	3, 2, 0, 0, 5, 2, 2, 6, 
	8, 2, 0, 2, 4, 1, 1, 1, 
	7, 0, 5, 0, 4, 6, 1, 1, 
	5, 1, 1, 3, 1, 1, 1, 3, 
	2, 1, 3, 1, 1, 1, 1, 1, 
	1, 1, 1, 1, 1, 2, 1, 1, 
	2, 1, 1, 2, 2, 1, 1, 1, 
	1, 1, 2, 1, 1, 1, 1, 1, 
	1, 7, 2, 4, 7, 1, 3, 3, 
	2, 0, 0, 5, 2, 2, 6, 8, 
	2, 0, 2, 4, 1, 1, 1, 7, 
	0, 5, 0, 4, 6, 1, 1, 5, 
	1, 1, 3, 1, 1, 1, 3, 2, 
	1, 3, 1, 1, 1, 1, 1, 1, 
	1, 1, 1, 1, 2, 1, 1, 2, 
	1, 1, 2, 2, 1, 1, 1, 1, 
	1, 2, 1, 1, 1, 1, 1, 6, 
	1, 0, 1, 1, 1, 6, 1, 0, 
	2, 1, 1, 1, 1, 3, 2, 1, 
	1, 2, 2, 1, 1, 1, 1, 1, 
	7, 2, 4, 7, 1, 3, 3, 2, 
	0, 0, 5, 2, 2, 6, 8, 2, 
	0, 2, 4, 1, 1, 1, 7, 0, 
	5, 0, 4, 6, 1, 1, 5, 1, 
	1, 3, 1, 1, 1, 3, 2, 1, 
	3, 1, 1, 1, 1, 1, 1, 1, 
	1, 1, 1, 2, 1, 1, 2, 1, 
	1, 2, 2, 1, 1, 1, 1, 1, 
	2, 1, 1, 1, 1, 1, 6, 1, 
	0, 7, 2, 5, 17, 7, 1, 3, 
	3, 2, 0, 0, 6, 2, 2, 7, 
	8, 2, 0, 2, 5, 12, 1, 1, 
	1, 1, 2, 3, 1, 1, 1, 1, 
	1, 1, 2, 1, 1, 2, 1, 1, 
	0, 6, 0, 5, 7, 1, 1, 6, 
	1, 1, 1, 3, 1, 1, 1, 1, 
	1, 1, 1, 1, 1, 1, 1, 1, 
	1, 1, 1, 1, 1, 0, 3, 2, 
	2, 3, 1, 1, 1, 3, 3, 5, 
	1, 1, 2, 3, 1, 1, 1, 1, 
	1, 7, 2, 5, 19, 7, 1, 3, 
	3, 2, 0, 0, 6, 2, 2, 7, 
	8, 2, 0, 2, 5, 14, 1, 1, 
	1, 1, 2, 3, 1, 1, 1, 1, 
	1, 1, 2, 1, 1, 2, 1, 1, 
	0, 6, 0, 5, 7, 1, 1, 6, 
	1, 1, 1, 3, 1, 1, 1, 1, 
	1, 1, 1, 1, 1, 1, 1, 1, 
	1, 1, 1, 1, 1, 0, 7, 7, 
	9, 5, 4, 3, 2, 1, 9, 5, 
	19, 14, 19, 19, 14, 19, 9, 9, 
	19, 14, 19, 0, 0
]

class << self
	attr_accessor :_querybuilder_range_lengths
	private :_querybuilder_range_lengths, :_querybuilder_range_lengths=
end
self._querybuilder_range_lengths = [
	0, 3, 1, 1, 0, 0, 1, 3, 
	1, 1, 0, 0, 0, 3, 3, 3, 
	0, 0, 0, 0, 1, 1, 0, 3, 
	3, 3, 0, 0, 0, 0, 2, 2, 
	1, 2, 2, 1, 2, 0, 0, 0, 
	0, 0, 2, 2, 1, 2, 0, 0, 
	0, 0, 0, 0, 0, 3, 3, 3, 
	0, 0, 0, 0, 1, 1, 0, 3, 
	3, 3, 0, 0, 1, 0, 0, 0, 
	0, 3, 3, 3, 3, 3, 3, 0, 
	1, 3, 3, 0, 1, 0, 0, 0, 
	0, 1, 4, 0, 2, 4, 0, 0, 
	0, 0, 0, 0, 2, 3, 3, 4, 
	4, 0, 0, 1, 2, 0, 0, 1, 
	4, 1, 3, 1, 3, 4, 0, 0, 
	2, 0, 1, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 1, 
	1, 0, 0, 0, 1, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	1, 4, 0, 2, 4, 0, 0, 0, 
	0, 0, 0, 2, 3, 3, 4, 4, 
	0, 0, 1, 2, 0, 0, 1, 4, 
	1, 3, 1, 3, 4, 0, 0, 2, 
	0, 1, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 1, 1, 
	0, 0, 0, 1, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 4, 
	0, 0, 0, 0, 0, 4, 0, 0, 
	3, 0, 0, 0, 0, 3, 3, 0, 
	1, 3, 3, 0, 0, 0, 0, 1, 
	4, 0, 2, 4, 0, 0, 0, 0, 
	0, 0, 2, 3, 3, 4, 4, 0, 
	0, 1, 2, 0, 0, 1, 4, 1, 
	3, 1, 3, 4, 0, 0, 2, 0, 
	1, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 1, 1, 0, 
	0, 0, 1, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 4, 0, 
	0, 4, 0, 2, 2, 4, 0, 0, 
	0, 0, 0, 0, 2, 3, 3, 4, 
	4, 0, 0, 1, 2, 2, 0, 0, 
	1, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 1, 1, 0, 0, 
	1, 3, 1, 3, 4, 0, 0, 2, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 3, 1, 
	1, 1, 0, 0, 0, 3, 3, 1, 
	0, 1, 3, 3, 0, 0, 0, 0, 
	1, 4, 0, 2, 2, 4, 0, 0, 
	0, 0, 0, 0, 2, 3, 3, 4, 
	4, 0, 0, 1, 2, 2, 0, 0, 
	1, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 1, 1, 0, 0, 
	1, 3, 1, 3, 4, 0, 0, 2, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 1, 1, 
	1, 1, 1, 1, 1, 1, 1, 1, 
	2, 2, 2, 2, 2, 2, 1, 1, 
	2, 2, 2, 0, 0
]

class << self
	attr_accessor :_querybuilder_index_offsets
	private :_querybuilder_index_offsets, :_querybuilder_index_offsets=
end
self._querybuilder_index_offsets = [
	0, 0, 7, 11, 14, 16, 18, 21, 
	28, 32, 35, 37, 39, 41, 48, 55, 
	61, 63, 65, 67, 69, 72, 76, 78, 
	84, 90, 98, 100, 102, 104, 106, 111, 
	116, 118, 123, 128, 130, 134, 136, 138, 
	140, 142, 144, 149, 154, 156, 160, 162, 
	164, 166, 168, 170, 172, 174, 180, 186, 
	192, 195, 197, 199, 201, 204, 208, 210, 
	216, 222, 230, 232, 234, 238, 240, 242, 
	244, 246, 252, 258, 266, 272, 278, 286, 
	288, 291, 297, 303, 306, 310, 312, 314, 
	316, 318, 321, 333, 336, 343, 355, 357, 
	361, 365, 368, 369, 370, 378, 384, 390, 
	401, 414, 417, 418, 422, 429, 431, 433, 
	436, 448, 450, 459, 461, 469, 480, 482, 
	484, 492, 494, 497, 501, 503, 505, 507, 
	511, 514, 516, 520, 522, 524, 526, 528, 
	530, 532, 534, 536, 538, 540, 543, 545, 
	548, 552, 554, 556, 559, 563, 565, 567, 
	569, 571, 573, 576, 578, 580, 582, 584, 
	586, 589, 601, 604, 611, 623, 625, 629, 
	633, 636, 637, 638, 646, 652, 658, 669, 
	682, 685, 686, 690, 697, 699, 701, 704, 
	716, 718, 727, 729, 737, 748, 750, 752, 
	760, 762, 765, 769, 771, 773, 775, 779, 
	782, 784, 788, 790, 792, 794, 796, 798, 
	800, 802, 804, 806, 808, 811, 813, 816, 
	820, 822, 824, 827, 831, 833, 835, 837, 
	839, 841, 844, 846, 848, 850, 852, 854, 
	865, 867, 868, 870, 872, 874, 885, 887, 
	888, 894, 896, 898, 900, 902, 909, 915, 
	917, 920, 926, 932, 934, 936, 938, 940, 
	943, 955, 958, 965, 977, 979, 983, 987, 
	990, 991, 992, 1000, 1006, 1012, 1023, 1036, 
	1039, 1040, 1044, 1051, 1053, 1055, 1058, 1070, 
	1072, 1081, 1083, 1091, 1102, 1104, 1106, 1114, 
	1116, 1119, 1123, 1125, 1127, 1129, 1133, 1136, 
	1138, 1142, 1144, 1146, 1148, 1150, 1152, 1154, 
	1156, 1158, 1160, 1162, 1165, 1167, 1170, 1174, 
	1176, 1178, 1181, 1185, 1187, 1189, 1191, 1193, 
	1195, 1198, 1200, 1202, 1204, 1206, 1208, 1219, 
	1221, 1222, 1234, 1237, 1245, 1265, 1277, 1279, 
	1283, 1287, 1290, 1291, 1292, 1301, 1307, 1313, 
	1325, 1338, 1341, 1342, 1346, 1354, 1369, 1371, 
	1373, 1376, 1378, 1381, 1385, 1387, 1389, 1391, 
	1393, 1395, 1397, 1400, 1402, 1405, 1409, 1411, 
	1413, 1415, 1425, 1427, 1436, 1448, 1450, 1452, 
	1461, 1463, 1465, 1467, 1471, 1473, 1475, 1477, 
	1479, 1481, 1483, 1485, 1487, 1489, 1491, 1493, 
	1495, 1497, 1499, 1501, 1503, 1505, 1506, 1513, 
	1517, 1521, 1526, 1528, 1530, 1532, 1539, 1546, 
	1553, 1555, 1558, 1564, 1571, 1573, 1575, 1577, 
	1579, 1582, 1594, 1597, 1605, 1627, 1639, 1641, 
	1645, 1649, 1652, 1653, 1654, 1663, 1669, 1675, 
	1687, 1700, 1703, 1704, 1708, 1716, 1733, 1735, 
	1737, 1740, 1742, 1745, 1749, 1751, 1753, 1755, 
	1757, 1759, 1761, 1764, 1766, 1769, 1773, 1775, 
	1777, 1779, 1789, 1791, 1800, 1812, 1814, 1816, 
	1825, 1827, 1829, 1831, 1835, 1837, 1839, 1841, 
	1843, 1845, 1847, 1849, 1851, 1853, 1855, 1857, 
	1859, 1861, 1863, 1865, 1867, 1869, 1870, 1879, 
	1888, 1899, 1906, 1912, 1917, 1921, 1924, 1935, 
	1942, 1964, 1981, 2003, 2025, 2042, 2064, 2075, 
	2086, 2108, 2125, 2147, 2148
]

class << self
	attr_accessor :_querybuilder_indicies
	private :_querybuilder_indicies, :_querybuilder_indicies=
end
self._querybuilder_indicies = [
	0, 2, 3, 0, 3, 3, 1, 4, 
	5, 4, 1, 7, 7, 6, 8, 1, 
	9, 1, 10, 10, 1, 11, 12, 13, 
	11, 13, 13, 1, 14, 15, 14, 1, 
	16, 16, 6, 17, 1, 18, 1, 19, 
	1, 20, 21, 22, 20, 22, 22, 1, 
	23, 12, 24, 23, 24, 24, 1, 25, 
	24, 25, 24, 24, 6, 26, 1, 27, 
	1, 28, 1, 29, 1, 30, 30, 1, 
	30, 31, 30, 1, 32, 1, 33, 34, 
	33, 34, 34, 1, 35, 36, 35, 36, 
	36, 1, 37, 38, 39, 36, 37, 36, 
	36, 6, 40, 1, 41, 1, 42, 1, 
	43, 1, 44, 45, 44, 46, 1, 47, 
	48, 47, 49, 1, 49, 1, 50, 51, 
	50, 49, 6, 52, 53, 52, 54, 1, 
	54, 1, 55, 55, 54, 6, 56, 1, 
	57, 1, 58, 1, 59, 1, 60, 1, 
	61, 62, 61, 63, 1, 64, 65, 64, 
	66, 1, 66, 1, 67, 67, 66, 6, 
	68, 1, 69, 1, 70, 1, 71, 1, 
	72, 1, 73, 1, 74, 1, 75, 76, 
	75, 76, 76, 1, 77, 78, 77, 78, 
	78, 1, 79, 78, 79, 78, 78, 6, 
	56, 80, 1, 81, 1, 82, 1, 83, 
	1, 84, 84, 1, 84, 85, 84, 1, 
	86, 1, 87, 88, 87, 88, 88, 1, 
	89, 90, 89, 90, 90, 1, 91, 92, 
	93, 90, 91, 90, 90, 6, 94, 1, 
	95, 1, 96, 97, 96, 6, 98, 1, 
	99, 1, 95, 1, 100, 1, 101, 102, 
	101, 102, 102, 1, 103, 104, 103, 104, 
	104, 1, 105, 106, 107, 104, 105, 104, 
	104, 6, 108, 109, 108, 109, 109, 1, 
	110, 111, 110, 111, 111, 1, 112, 113, 
	114, 111, 112, 111, 111, 6, 115, 1, 
	116, 116, 1, 116, 117, 116, 117, 117, 
	1, 118, 117, 118, 117, 117, 6, 56, 
	119, 1, 10, 81, 10, 1, 120, 1, 
	121, 1, 122, 1, 123, 1, 124, 124, 
	1, 125, 126, 127, 128, 129, 130, 132, 
	125, 131, 132, 132, 1, 134, 135, 133, 
	136, 137, 137, 137, 136, 138, 6, 139, 
	140, 141, 142, 143, 144, 146, 139, 145, 
	146, 146, 1, 147, 1, 149, 150, 1, 
	148, 149, 150, 151, 148, 148, 152, 149, 
	149, 148, 136, 137, 137, 153, 137, 136, 
	138, 6, 154, 155, 154, 155, 155, 1, 
	156, 157, 156, 157, 157, 1, 158, 159, 
	159, 160, 159, 157, 158, 161, 157, 157, 
	6, 139, 140, 141, 142, 143, 144, 137, 
	146, 139, 145, 146, 146, 1, 163, 164, 
	162, 162, 165, 166, 165, 1, 167, 137, 
	137, 137, 167, 138, 6, 168, 1, 169, 
	1, 170, 170, 1, 171, 126, 127, 128, 
	172, 130, 173, 171, 131, 173, 173, 1, 
	131, 1, 174, 175, 175, 176, 175, 174, 
	131, 177, 6, 178, 1, 179, 180, 180, 
	180, 179, 178, 181, 6, 182, 183, 183, 
	184, 183, 173, 182, 185, 173, 173, 6, 
	186, 1, 187, 1, 188, 189, 189, 189, 
	191, 188, 190, 6, 192, 1, 139, 139, 
	1, 192, 26, 192, 1, 193, 1, 194, 
	1, 187, 1, 192, 195, 192, 1, 196, 
	41, 1, 192, 1, 197, 198, 199, 1, 
	200, 1, 201, 1, 192, 1, 202, 1, 
	203, 1, 204, 1, 187, 1, 205, 1, 
	206, 1, 187, 1, 192, 207, 1, 208, 
	1, 209, 209, 1, 210, 211, 210, 1, 
	212, 1, 196, 1, 56, 213, 1, 170, 
	81, 170, 1, 214, 1, 215, 1, 216, 
	1, 217, 1, 187, 1, 218, 219, 1, 
	220, 1, 187, 1, 221, 1, 222, 1, 
	223, 1, 224, 224, 1, 225, 226, 227, 
	228, 229, 230, 232, 225, 231, 232, 232, 
	1, 234, 235, 233, 236, 237, 237, 237, 
	236, 238, 6, 239, 240, 241, 242, 243, 
	244, 246, 239, 245, 246, 246, 1, 247, 
	1, 249, 250, 1, 248, 249, 250, 251, 
	248, 248, 252, 249, 249, 248, 236, 237, 
	237, 253, 237, 236, 238, 6, 254, 255, 
	254, 255, 255, 1, 256, 257, 256, 257, 
	257, 1, 258, 259, 259, 260, 259, 257, 
	258, 261, 257, 257, 6, 239, 240, 241, 
	242, 243, 244, 237, 246, 239, 245, 246, 
	246, 1, 263, 264, 262, 262, 265, 266, 
	265, 1, 267, 237, 237, 237, 267, 238, 
	6, 268, 1, 269, 1, 270, 270, 1, 
	271, 226, 227, 228, 272, 230, 273, 271, 
	231, 273, 273, 1, 231, 1, 274, 275, 
	275, 276, 275, 274, 231, 277, 6, 278, 
	1, 279, 280, 280, 280, 279, 278, 281, 
	6, 282, 283, 283, 284, 283, 273, 282, 
	285, 273, 273, 6, 286, 1, 287, 1, 
	288, 289, 289, 289, 291, 288, 290, 6, 
	292, 1, 239, 239, 1, 292, 26, 292, 
	1, 293, 1, 294, 1, 287, 1, 292, 
	295, 292, 1, 296, 41, 1, 292, 1, 
	297, 298, 299, 1, 300, 1, 301, 1, 
	292, 1, 302, 1, 303, 1, 304, 1, 
	287, 1, 305, 1, 306, 1, 287, 1, 
	292, 307, 1, 308, 1, 309, 309, 1, 
	310, 311, 310, 1, 312, 1, 296, 1, 
	56, 313, 1, 270, 81, 270, 1, 314, 
	1, 315, 1, 316, 1, 317, 1, 287, 
	1, 318, 219, 1, 319, 1, 287, 1, 
	320, 1, 294, 1, 297, 1, 321, 283, 
	283, 284, 283, 232, 321, 285, 232, 232, 
	6, 318, 1, 233, 322, 1, 194, 1, 
	197, 1, 323, 183, 183, 184, 183, 132, 
	323, 185, 132, 132, 6, 218, 1, 133, 
	324, 13, 324, 13, 13, 6, 219, 1, 
	325, 1, 326, 1, 327, 1, 328, 329, 
	330, 328, 330, 330, 1, 331, 3, 331, 
	3, 3, 6, 332, 1, 333, 333, 1, 
	333, 334, 333, 334, 334, 1, 335, 334, 
	335, 334, 334, 6, 336, 1, 337, 1, 
	338, 1, 339, 1, 340, 340, 1, 341, 
	342, 343, 344, 345, 346, 348, 341, 347, 
	348, 348, 1, 350, 351, 349, 352, 353, 
	353, 353, 352, 354, 6, 355, 356, 357, 
	358, 359, 360, 362, 355, 361, 362, 362, 
	1, 363, 1, 365, 366, 1, 364, 365, 
	366, 367, 364, 364, 368, 365, 365, 364, 
	352, 353, 353, 369, 353, 352, 354, 6, 
	370, 371, 370, 371, 371, 1, 372, 373, 
	372, 373, 373, 1, 374, 375, 375, 376, 
	375, 373, 374, 377, 373, 373, 6, 355, 
	356, 357, 358, 359, 360, 353, 362, 355, 
	361, 362, 362, 1, 379, 380, 378, 378, 
	381, 382, 381, 1, 383, 353, 353, 353, 
	383, 354, 6, 384, 1, 385, 1, 386, 
	386, 1, 387, 342, 343, 344, 388, 346, 
	389, 387, 347, 389, 389, 1, 347, 1, 
	390, 391, 391, 392, 391, 390, 347, 393, 
	6, 394, 1, 395, 396, 396, 396, 395, 
	394, 397, 6, 398, 399, 399, 400, 399, 
	389, 398, 401, 389, 389, 6, 402, 1, 
	403, 1, 404, 405, 405, 405, 407, 404, 
	406, 6, 408, 1, 355, 355, 1, 408, 
	26, 408, 1, 409, 1, 410, 1, 403, 
	1, 408, 411, 408, 1, 412, 41, 1, 
	408, 1, 413, 414, 415, 1, 416, 1, 
	417, 1, 408, 1, 418, 1, 419, 1, 
	420, 1, 403, 1, 421, 1, 422, 1, 
	403, 1, 408, 423, 1, 424, 1, 425, 
	425, 1, 426, 427, 426, 1, 428, 1, 
	412, 1, 56, 429, 1, 386, 81, 386, 
	1, 430, 1, 431, 1, 432, 1, 433, 
	1, 403, 1, 434, 219, 1, 435, 1, 
	403, 1, 436, 1, 410, 1, 413, 1, 
	437, 399, 399, 400, 399, 348, 437, 401, 
	348, 348, 6, 434, 1, 349, 438, 439, 
	440, 441, 442, 443, 445, 438, 444, 445, 
	445, 1, 447, 448, 446, 449, 450, 451, 
	451, 451, 449, 452, 1, 449, 450, 451, 
	451, 451, 453, 454, 455, 456, 457, 458, 
	459, 460, 461, 462, 463, 464, 449, 452, 
	1, 465, 466, 467, 468, 469, 470, 472, 
	465, 471, 472, 472, 1, 473, 1, 475, 
	476, 1, 474, 475, 476, 477, 474, 474, 
	478, 475, 475, 474, 449, 450, 451, 451, 
	479, 451, 449, 452, 1, 480, 481, 480, 
	481, 481, 1, 482, 483, 482, 483, 483, 
	1, 484, 485, 486, 486, 487, 486, 483, 
	484, 488, 483, 483, 1, 465, 466, 467, 
	468, 469, 470, 451, 472, 465, 471, 472, 
	472, 1, 490, 491, 489, 489, 492, 493, 
	492, 1, 494, 450, 451, 451, 451, 494, 
	452, 1, 494, 450, 451, 451, 451, 453, 
	455, 456, 458, 495, 460, 461, 494, 452, 
	1, 496, 1, 497, 1, 465, 465, 1, 
	497, 1, 497, 497, 1, 497, 498, 497, 
	1, 499, 1, 497, 1, 500, 1, 501, 
	1, 502, 1, 497, 1, 497, 503, 1, 
	504, 1, 505, 505, 1, 506, 507, 506, 
	1, 498, 1, 497, 1, 444, 1, 508, 
	509, 510, 510, 511, 510, 508, 444, 512, 
	1, 513, 1, 514, 515, 516, 516, 516, 
	514, 513, 517, 1, 518, 519, 520, 520, 
	521, 520, 445, 518, 522, 445, 445, 1, 
	523, 1, 524, 1, 525, 526, 527, 527, 
	527, 529, 525, 528, 1, 530, 1, 531, 
	1, 524, 1, 500, 532, 533, 1, 534, 
	1, 535, 1, 536, 1, 524, 1, 537, 
	1, 538, 1, 524, 1, 539, 1, 540, 
	1, 541, 1, 542, 1, 524, 1, 543, 
	1, 544, 1, 524, 1, 545, 1, 531, 
	1, 446, 546, 547, 548, 546, 548, 548, 
	1, 549, 550, 549, 1, 551, 552, 551, 
	1, 551, 552, 553, 551, 1, 554, 1, 
	555, 1, 556, 1, 557, 558, 559, 557, 
	559, 559, 1, 560, 561, 548, 560, 548, 
	548, 1, 562, 552, 553, 563, 564, 562, 
	1, 565, 1, 566, 566, 1, 566, 567, 
	566, 567, 567, 1, 568, 569, 567, 568, 
	567, 567, 1, 570, 1, 571, 1, 572, 
	1, 573, 1, 574, 574, 1, 575, 576, 
	577, 578, 579, 580, 582, 575, 581, 582, 
	582, 1, 584, 585, 583, 586, 552, 587, 
	587, 587, 586, 588, 1, 586, 552, 587, 
	587, 587, 589, 590, 591, 553, 592, 593, 
	563, 594, 595, 596, 597, 598, 599, 600, 
	586, 588, 1, 601, 602, 603, 604, 605, 
	606, 608, 601, 607, 608, 608, 1, 609, 
	1, 611, 612, 1, 610, 611, 612, 613, 
	610, 610, 614, 611, 611, 610, 586, 552, 
	587, 587, 615, 587, 586, 588, 1, 616, 
	617, 616, 617, 617, 1, 618, 619, 618, 
	619, 619, 1, 620, 621, 622, 622, 623, 
	622, 619, 620, 624, 619, 619, 1, 601, 
	602, 603, 604, 605, 606, 587, 608, 601, 
	607, 608, 608, 1, 626, 627, 625, 625, 
	628, 629, 628, 1, 630, 552, 587, 587, 
	587, 630, 588, 1, 630, 552, 587, 587, 
	587, 589, 591, 553, 592, 563, 594, 631, 
	596, 597, 630, 588, 1, 632, 1, 633, 
	1, 601, 601, 1, 633, 1, 633, 633, 
	1, 633, 634, 633, 1, 635, 1, 633, 
	1, 636, 1, 637, 1, 638, 1, 633, 
	1, 633, 639, 1, 640, 1, 641, 641, 
	1, 642, 643, 642, 1, 634, 1, 633, 
	1, 581, 1, 644, 645, 646, 646, 647, 
	646, 644, 581, 648, 1, 649, 1, 650, 
	651, 652, 652, 652, 650, 649, 653, 1, 
	654, 655, 656, 656, 657, 656, 582, 654, 
	658, 582, 582, 1, 659, 1, 660, 1, 
	661, 662, 663, 663, 663, 665, 661, 664, 
	1, 666, 1, 667, 1, 660, 1, 636, 
	668, 669, 1, 670, 1, 671, 1, 672, 
	1, 660, 1, 673, 1, 674, 1, 660, 
	1, 675, 1, 676, 1, 677, 1, 678, 
	1, 660, 1, 679, 1, 680, 1, 660, 
	1, 681, 1, 667, 1, 583, 7, 682, 
	683, 684, 685, 686, 687, 7, 6, 16, 
	682, 688, 684, 685, 686, 687, 16, 6, 
	689, 682, 688, 684, 690, 685, 686, 687, 
	691, 689, 6, 692, 35, 685, 693, 687, 
	692, 6, 694, 52, 695, 687, 694, 6, 
	696, 695, 687, 696, 6, 697, 687, 697, 
	6, 698, 698, 6, 699, 89, 98, 700, 
	100, 701, 685, 695, 687, 699, 6, 702, 
	89, 685, 695, 687, 702, 6, 136, 137, 
	137, 137, 703, 704, 705, 688, 706, 707, 
	690, 708, 709, 710, 711, 687, 712, 713, 
	714, 136, 138, 6, 167, 137, 137, 137, 
	703, 705, 688, 706, 690, 708, 715, 710, 
	711, 687, 167, 138, 6, 716, 137, 137, 
	137, 703, 704, 705, 688, 706, 707, 690, 
	708, 709, 710, 711, 687, 712, 717, 714, 
	716, 138, 6, 236, 237, 237, 237, 718, 
	719, 720, 688, 721, 722, 690, 723, 724, 
	725, 726, 687, 727, 728, 729, 236, 238, 
	6, 267, 237, 237, 237, 718, 720, 688, 
	721, 690, 723, 730, 725, 726, 687, 267, 
	238, 6, 731, 237, 237, 237, 718, 719, 
	720, 688, 721, 722, 690, 723, 724, 725, 
	726, 687, 727, 732, 729, 731, 238, 6, 
	733, 682, 688, 684, 690, 685, 686, 687, 
	734, 733, 6, 735, 682, 683, 684, 736, 
	685, 686, 687, 737, 735, 6, 352, 353, 
	353, 353, 738, 739, 740, 683, 741, 742, 
	736, 743, 744, 745, 746, 687, 747, 748, 
	749, 352, 354, 6, 383, 353, 353, 353, 
	738, 740, 683, 741, 736, 743, 750, 745, 
	746, 687, 383, 354, 6, 751, 353, 353, 
	353, 738, 739, 740, 683, 741, 742, 736, 
	743, 744, 745, 746, 687, 747, 752, 749, 
	751, 354, 6, 1, 1, 0
]

class << self
	attr_accessor :_querybuilder_trans_targs
	private :_querybuilder_trans_targs, :_querybuilder_trans_targs=
end
self._querybuilder_trans_targs = [
	1, 0, 2, 246, 2, 3, 0, 486, 
	5, 6, 7, 7, 8, 240, 8, 9, 
	487, 11, 12, 13, 14, 8, 15, 14, 
	15, 488, 17, 18, 19, 20, 21, 22, 
	23, 24, 25, 24, 25, 489, 24, 76, 
	27, 28, 29, 30, 31, 32, 33, 31, 
	32, 33, 490, 34, 34, 35, 36, 491, 
	38, 39, 40, 41, 42, 43, 44, 45, 
	43, 44, 45, 492, 47, 48, 49, 50, 
	51, 52, 53, 54, 55, 54, 55, 493, 
	57, 58, 59, 60, 61, 62, 63, 64, 
	65, 64, 65, 494, 64, 73, 67, 68, 
	495, 64, 66, 71, 70, 74, 75, 74, 
	75, 494, 64, 73, 77, 78, 77, 78, 
	489, 24, 76, 80, 81, 82, 487, 84, 
	86, 87, 88, 89, 90, 90, 91, 94, 
	105, 107, 113, 114, 237, 91, 92, 239, 
	496, 93, 104, 90, 91, 94, 105, 107, 
	113, 114, 237, 95, 96, 97, 99, 100, 
	98, 101, 102, 103, 102, 103, 496, 93, 
	101, 104, 105, 92, 106, 107, 108, 497, 
	110, 111, 112, 112, 107, 117, 496, 93, 
	115, 104, 116, 496, 93, 104, 498, 93, 
	101, 104, 119, 120, 497, 93, 104, 108, 
	122, 125, 126, 128, 129, 131, 134, 138, 
	132, 133, 135, 136, 137, 139, 140, 142, 
	143, 144, 144, 145, 146, 148, 150, 151, 
	152, 153, 155, 157, 156, 158, 159, 160, 
	161, 161, 162, 165, 176, 178, 184, 185, 
	231, 162, 163, 233, 499, 164, 175, 161, 
	162, 165, 176, 178, 184, 185, 231, 166, 
	167, 168, 170, 171, 169, 172, 173, 174, 
	173, 174, 499, 164, 172, 175, 176, 163, 
	177, 178, 179, 500, 181, 182, 183, 183, 
	178, 188, 499, 164, 186, 175, 187, 499, 
	164, 175, 501, 164, 172, 175, 190, 191, 
	500, 164, 175, 179, 193, 196, 197, 199, 
	200, 202, 205, 209, 203, 204, 206, 207, 
	208, 210, 211, 213, 214, 215, 215, 216, 
	217, 219, 221, 222, 223, 224, 226, 227, 
	229, 499, 235, 496, 502, 243, 244, 245, 
	1, 2, 246, 503, 248, 249, 250, 486, 
	252, 253, 254, 255, 256, 256, 257, 260, 
	271, 273, 279, 280, 326, 257, 258, 328, 
	504, 259, 270, 256, 257, 260, 271, 273, 
	279, 280, 326, 261, 262, 263, 265, 266, 
	264, 267, 268, 269, 268, 269, 504, 259, 
	267, 270, 271, 258, 272, 273, 274, 505, 
	276, 277, 278, 278, 273, 283, 504, 259, 
	281, 270, 282, 504, 259, 270, 506, 259, 
	267, 270, 285, 286, 505, 259, 270, 274, 
	288, 291, 292, 294, 295, 297, 300, 304, 
	298, 299, 301, 302, 303, 305, 306, 308, 
	309, 310, 310, 311, 312, 314, 316, 317, 
	318, 319, 321, 322, 324, 504, 329, 330, 
	334, 345, 347, 368, 369, 372, 330, 331, 
	397, 332, 507, 333, 344, 350, 373, 353, 
	354, 376, 355, 379, 362, 367, 387, 392, 
	395, 329, 330, 334, 345, 347, 368, 369, 
	372, 335, 336, 337, 339, 340, 338, 341, 
	342, 343, 342, 343, 332, 507, 333, 341, 
	344, 345, 331, 346, 347, 348, 349, 358, 
	351, 352, 356, 357, 359, 360, 361, 363, 
	364, 365, 365, 366, 332, 507, 333, 370, 
	344, 371, 332, 507, 333, 344, 332, 507, 
	333, 341, 344, 374, 375, 349, 507, 333, 
	344, 348, 377, 378, 380, 384, 381, 382, 
	383, 385, 386, 388, 389, 390, 391, 393, 
	394, 396, 398, 399, 406, 399, 400, 401, 
	508, 402, 403, 404, 405, 398, 399, 406, 
	407, 508, 407, 408, 412, 409, 410, 411, 
	401, 508, 413, 414, 415, 416, 417, 417, 
	418, 422, 433, 435, 456, 457, 460, 418, 
	419, 485, 420, 421, 432, 438, 461, 441, 
	442, 464, 443, 467, 450, 455, 475, 480, 
	483, 417, 418, 422, 433, 435, 456, 457, 
	460, 423, 424, 425, 427, 428, 426, 429, 
	430, 431, 430, 431, 420, 508, 421, 429, 
	432, 433, 419, 434, 435, 436, 437, 446, 
	439, 440, 444, 445, 447, 448, 449, 451, 
	452, 453, 453, 454, 420, 508, 421, 458, 
	432, 459, 420, 508, 421, 432, 420, 508, 
	421, 429, 432, 462, 463, 437, 508, 421, 
	432, 436, 465, 466, 468, 472, 469, 470, 
	471, 473, 474, 476, 477, 478, 479, 481, 
	482, 484, 4, 242, 16, 26, 83, 46, 
	10, 488, 79, 85, 489, 56, 490, 37, 
	491, 492, 493, 494, 69, 72, 495, 109, 
	118, 121, 123, 124, 127, 130, 141, 147, 
	149, 238, 234, 236, 498, 154, 180, 189, 
	192, 194, 195, 198, 201, 212, 218, 220, 
	232, 228, 230, 501, 225, 502, 241, 503, 
	247, 251, 275, 284, 287, 289, 290, 293, 
	296, 307, 313, 315, 327, 323, 325, 506, 
	320
]

class << self
	attr_accessor :_querybuilder_trans_actions
	private :_querybuilder_trans_actions, :_querybuilder_trans_actions=
end
self._querybuilder_trans_actions = [
	0, 0, 33, 1, 0, 0, 55, 0, 
	1, 1, 53, 0, 33, 1, 0, 0, 
	0, 0, 0, 0, 51, 150, 147, 0, 
	1, 21, 0, 0, 0, 0, 0, 0, 
	0, 49, 144, 0, 1, 13, 13, 13, 
	0, 0, 0, 0, 45, 138, 138, 0, 
	1, 1, 9, 9, 0, 1, 1, 9, 
	0, 0, 0, 0, 0, 39, 132, 132, 
	0, 1, 1, 9, 0, 0, 0, 0, 
	0, 0, 0, 43, 135, 0, 1, 41, 
	0, 0, 0, 0, 0, 0, 0, 47, 
	141, 0, 1, 13, 13, 13, 1, 1, 
	19, 19, 1, 1, 1, 17, 96, 0, 
	1, 15, 15, 15, 17, 96, 0, 1, 
	15, 15, 15, 0, 0, 1, 37, 1, 
	0, 0, 0, 0, 27, 0, 0, 0, 
	0, 29, 1, 1, 1, 1, 5, 0, 
	0, 1, 1, 23, 23, 23, 23, 108, 
	105, 105, 105, 0, 1, 1, 0, 7, 
	1, 0, 17, 96, 0, 1, 15, 87, 
	15, 87, 1, 3, 0, 0, 0, 0, 
	1, 1, 153, 0, 126, 1, 9, 57, 
	1, 57, 1, 11, 66, 66, 99, 75, 
	13, 75, 1, 1, 25, 114, 114, 25, 
	1, 1, 1, 1, 1, 1, 1, 1, 
	1, 1, 1, 1, 1, 1, 1, 1, 
	1, 23, 0, 1, 1, 1, 1, 1, 
	1, 1, 1, 0, 1, 0, 0, 0, 
	27, 0, 0, 0, 0, 29, 1, 1, 
	1, 1, 5, 0, 0, 1, 1, 23, 
	23, 23, 23, 108, 105, 105, 105, 0, 
	1, 1, 0, 7, 1, 0, 17, 96, 
	0, 1, 15, 87, 15, 87, 1, 3, 
	0, 0, 0, 0, 1, 1, 153, 0, 
	123, 1, 9, 57, 1, 57, 1, 11, 
	66, 66, 99, 75, 13, 75, 1, 1, 
	25, 114, 114, 25, 1, 1, 1, 1, 
	1, 1, 1, 1, 1, 1, 1, 1, 
	1, 1, 1, 1, 1, 23, 0, 1, 
	1, 1, 1, 1, 1, 1, 1, 1, 
	1, 13, 1, 13, 21, 0, 0, 0, 
	51, 150, 147, 21, 0, 0, 1, 37, 
	0, 0, 0, 0, 27, 0, 0, 0, 
	0, 29, 1, 1, 1, 1, 5, 0, 
	0, 1, 1, 23, 23, 23, 23, 108, 
	105, 105, 105, 0, 1, 1, 0, 7, 
	1, 0, 17, 96, 0, 1, 15, 87, 
	15, 87, 1, 3, 0, 0, 0, 0, 
	1, 1, 111, 0, 123, 1, 9, 57, 
	1, 57, 1, 11, 66, 66, 78, 75, 
	13, 75, 1, 1, 25, 114, 114, 25, 
	1, 1, 1, 1, 1, 1, 1, 1, 
	1, 1, 1, 1, 1, 1, 1, 1, 
	1, 23, 0, 1, 1, 1, 1, 1, 
	1, 1, 1, 1, 1, 13, 0, 0, 
	0, 0, 29, 1, 1, 1, 1, 5, 
	0, 0, 31, 1, 1, 1, 1, 1, 
	1, 1, 1, 1, 1, 1, 1, 1, 
	1, 23, 23, 23, 23, 108, 105, 105, 
	105, 0, 1, 1, 0, 7, 1, 0, 
	17, 96, 0, 1, 15, 90, 87, 15, 
	87, 1, 3, 0, 0, 0, 0, 1, 
	1, 1, 1, 1, 1, 1, 1, 1, 
	1, 23, 0, 1, 9, 60, 57, 1, 
	57, 1, 11, 69, 66, 66, 13, 81, 
	75, 13, 75, 1, 1, 25, 117, 114, 
	114, 25, 1, 1, 1, 1, 1, 1, 
	1, 1, 1, 1, 1, 1, 1, 1, 
	1, 1, 0, 33, 1, 0, 0, 0, 
	35, 0, 0, 0, 0, 51, 150, 147, 
	21, 102, 0, 0, 0, 0, 0, 1, 
	37, 129, 0, 0, 0, 0, 27, 0, 
	0, 0, 0, 29, 1, 1, 1, 1, 
	5, 0, 0, 1, 1, 1, 1, 1, 
	1, 1, 1, 1, 1, 1, 1, 1, 
	1, 23, 23, 23, 23, 108, 105, 105, 
	105, 0, 1, 1, 0, 7, 1, 0, 
	17, 96, 0, 1, 15, 93, 87, 15, 
	87, 1, 3, 0, 0, 0, 0, 1, 
	1, 1, 1, 1, 1, 1, 1, 1, 
	1, 23, 0, 1, 9, 63, 57, 1, 
	57, 1, 11, 72, 66, 66, 13, 84, 
	75, 13, 75, 1, 1, 25, 120, 114, 
	114, 25, 1, 1, 1, 1, 1, 1, 
	1, 1, 1, 1, 1, 1, 1, 1, 
	1, 1, 1, 0, 0, 0, 1, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 1, 1, 0, 1, 
	1, 1, 1, 1, 1, 1, 1, 1, 
	1, 1, 1, 1, 0, 1, 1, 1, 
	1, 1, 1, 1, 1, 1, 1, 1, 
	1, 1, 1, 0, 1, 0, 0, 0, 
	0, 0, 1, 1, 1, 1, 1, 1, 
	1, 1, 1, 1, 1, 1, 1, 0, 
	1
]

class << self
	attr_accessor :_querybuilder_eof_actions
	private :_querybuilder_eof_actions, :_querybuilder_eof_actions=
end
self._querybuilder_eof_actions = [
	0, 0, 0, 55, 0, 0, 0, 0, 
	0, 55, 0, 0, 0, 0, 0, 55, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 55, 0, 0, 0, 0, 0, 0, 
	0, 55, 0, 0, 55, 0, 0, 0, 
	0, 0, 0, 0, 0, 55, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 55, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 55, 0, 0, 55, 0, 0, 0, 
	0, 0, 0, 55, 0, 0, 55, 0, 
	0, 0, 55, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 55, 0, 0, 0, 
	0, 0, 0, 0, 55, 0, 0, 55, 
	0, 0, 0, 0, 55, 0, 0, 0, 
	0, 0, 55, 0, 55, 55, 0, 0, 
	55, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 55, 0, 0, 0, 0, 
	0, 0, 0, 55, 0, 0, 55, 0, 
	0, 0, 0, 55, 0, 0, 0, 0, 
	0, 55, 0, 55, 55, 0, 0, 55, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 55, 
	0, 0, 0, 0, 0, 55, 0, 0, 
	55, 0, 0, 0, 0, 0, 55, 0, 
	0, 0, 55, 0, 0, 0, 0, 0, 
	0, 0, 55, 0, 0, 0, 0, 0, 
	0, 0, 55, 0, 0, 55, 0, 0, 
	0, 0, 55, 0, 0, 0, 0, 0, 
	55, 0, 55, 55, 0, 0, 55, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 55, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0
]

class << self
	attr_accessor :querybuilder_start
end
self.querybuilder_start = 1;
class << self
	attr_accessor :querybuilder_first_final
end
self.querybuilder_first_final = 486;
class << self
	attr_accessor :querybuilder_error
end
self.querybuilder_error = 0;

class << self
	attr_accessor :querybuilder_en_expr_p
end
self.querybuilder_en_expr_p = 329;
class << self
	attr_accessor :querybuilder_en_clause_p
end
self.querybuilder_en_clause_p = 398;
class << self
	attr_accessor :querybuilder_en_main
end
self.querybuilder_en_main = 1;


# line 181 "querybuilder_rb.rl"

    def self.parse(arg)
      if arg.kind_of?(Array)
        data = "(#{arg.join(') or (')})\n"
      else
        data = "#{arg}\n"
      end
      stack = [[:query]]
      last  = stack.last
      str_buf         = ""
      clause_state = :relation
      eof = 0;
      
# line 1182 "querybuilder_rb.rb"
begin
	p ||= 0
	pe ||= data.length
	cs = querybuilder_start
end

# line 194 "querybuilder_rb.rl"
      
# line 1191 "querybuilder_rb.rb"
begin
	_klen, _trans, _keys, _acts, _nacts = nil
	_goto_level = 0
	_resume = 10
	_eof_trans = 15
	_again = 20
	_test_eof = 30
	_out = 40
	while true
	_trigger_goto = false
	if _goto_level <= 0
	if p == pe
		_goto_level = _test_eof
		next
	end
	if cs == 0
		_goto_level = _out
		next
	end
	end
	if _goto_level <= _resume
	_keys = _querybuilder_key_offsets[cs]
	_trans = _querybuilder_index_offsets[cs]
	_klen = _querybuilder_single_lengths[cs]
	_break_match = false
	
	begin
	  if _klen > 0
	     _lower = _keys
	     _upper = _keys + _klen - 1

	     loop do
	        break if _upper < _lower
	        _mid = _lower + ( (_upper - _lower) >> 1 )

	        if data[p] < _querybuilder_trans_keys[_mid]
	           _upper = _mid - 1
	        elsif data[p] > _querybuilder_trans_keys[_mid]
	           _lower = _mid + 1
	        else
	           _trans += (_mid - _keys)
	           _break_match = true
	           break
	        end
	     end # loop
	     break if _break_match
	     _keys += _klen
	     _trans += _klen
	  end
	  _klen = _querybuilder_range_lengths[cs]
	  if _klen > 0
	     _lower = _keys
	     _upper = _keys + (_klen << 1) - 2
	     loop do
	        break if _upper < _lower
	        _mid = _lower + (((_upper-_lower) >> 1) & ~1)
	        if data[p] < _querybuilder_trans_keys[_mid]
	          _upper = _mid - 2
	        elsif data[p] > _querybuilder_trans_keys[_mid+1]
	          _lower = _mid + 2
	        else
	          _trans += ((_mid - _keys) >> 1)
	          _break_match = true
	          break
	        end
	     end # loop
	     break if _break_match
	     _trans += _klen
	  end
	end while false
	_trans = _querybuilder_indicies[_trans]
	cs = _querybuilder_trans_targs[_trans]
	if _querybuilder_trans_actions[_trans] != 0
		_acts = _querybuilder_trans_actions[_trans]
		_nacts = _querybuilder_actions[_acts]
		_acts += 1
		while _nacts > 0
			_nacts -= 1
			_acts += 1
			case _querybuilder_actions[_acts - 1]
when 0 then
# line 6 "querybuilder_rb.rl"
		begin

      str_buf += data[p].chr
    		end
when 1 then
# line 10 "querybuilder_rb.rl"
		begin

      last << [:string, str_buf]
      str_buf = ""
    		end
when 2 then
# line 15 "querybuilder_rb.rl"
		begin

      last << [:dstring, str_buf]
      str_buf = ""
    		end
when 3 then
# line 20 "querybuilder_rb.rl"
		begin

      last << [:rubyless, str_buf]
      str_buf = ""
    		end
when 4 then
# line 25 "querybuilder_rb.rl"
		begin

      last << [:integer, str_buf]
      str_buf = ""
    		end
when 5 then
# line 30 "querybuilder_rb.rl"
		begin

      last << [:real, str_buf]
      str_buf = ""
    		end
when 6 then
# line 35 "querybuilder_rb.rl"
		begin

      last << [:field, str_buf]
      str_buf = ""
    		end
when 7 then
# line 40 "querybuilder_rb.rl"
		begin

      last << [:method, str_buf]
      str_buf = ""
    		end
when 8 then
# line 45 "querybuilder_rb.rl"
		begin

      last = apply_op(stack, :function)
      str_buf = ""
    		end
when 9 then
# line 50 "querybuilder_rb.rl"
		begin

      last = apply_op(stack, str_buf.downcase.to_sym, false)
      str_buf = ""
    		end
when 10 then
# line 55 "querybuilder_rb.rl"
		begin

      if clause_state == :relation || clause_state == :parenthesis
        last = insert(stack, [:relation, str_buf])
        str_buf = ""
      end
    		end
when 11 then
# line 62 "querybuilder_rb.rl"
		begin

      last = apply_op(stack, str_buf.downcase.to_sym)
      str_buf = ""
    		end
when 12 then
# line 67 "querybuilder_rb.rl"
		begin

      last = apply_op(stack, :interval)
      last << str_buf
      str_buf = ""
    		end
when 13 then
# line 73 "querybuilder_rb.rl"
		begin

      last = apply_op(stack, :filter)
      clause_state = :filter
    		end
when 14 then
# line 78 "querybuilder_rb.rl"
		begin

      # remember current machine state 'cs'
      last << [:par, cs]
      stack.push last.last
      last = last.last
      	begin
		cs = 329
		_trigger_goto = true
		_goto_level = _again
		break
	end

    		end
when 15 then
# line 86 "querybuilder_rb.rl"
		begin

      pop_stack(stack, :par_close)
      # reset machine state 'cs'
      cs = stack.last.delete_at(1)
      # one more time to remove [:par...] line
      stack.pop
      last = stack.last
      # closing ')' must be parsed twice
      p = p - 1;
    		end
when 16 then
# line 97 "querybuilder_rb.rl"
		begin

      # remember current machine state 'cs'
      clause_state = :parenthesis
      last << [:clause_par, cs]
      stack.push last.last
      last = last.last
      	begin
		cs = 398
		_trigger_goto = true
		_goto_level = _again
		break
	end

    		end
when 17 then
# line 106 "querybuilder_rb.rl"
		begin

      pop_stack(stack, :clause_par_close)
      clause_state = :relation
      # reset machine state 'cs'
      cs = stack.last.delete_at(1)
      # one more time to remove [:clause_par...] line
      stack.pop
      last = stack.last
      # closing ')' must be parsed twice
      p = p - 1;
    		end
when 18 then
# line 118 "querybuilder_rb.rl"
		begin

      last = apply_op(stack, :scope)
      last << str_buf
      str_buf = ""
    		end
when 19 then
# line 124 "querybuilder_rb.rl"
		begin

      last = apply_op(stack, :offset)
    		end
when 20 then
# line 128 "querybuilder_rb.rl"
		begin

      last << [:param, str_buf]
      str_buf = ""
    		end
when 21 then
# line 133 "querybuilder_rb.rl"
		begin

      last = apply_op(stack, :paginate)
    		end
when 22 then
# line 137 "querybuilder_rb.rl"
		begin

      last = apply_op(stack, :limit)
      str_buf = ""
    		end
when 23 then
# line 142 "querybuilder_rb.rl"
		begin

      last = apply_op(stack, :order)
      str_buf = ""
    		end
when 24 then
# line 147 "querybuilder_rb.rl"
		begin

      last = apply_op(stack, :group)
    		end
when 25 then
# line 151 "querybuilder_rb.rl"
		begin

      last = apply_op(stack, :from)
      clause_state = :relation
    		end
when 26 then
# line 156 "querybuilder_rb.rl"
		begin

      if clause_state == :relation
        last = apply_op(stack, "clause_#{str_buf}".to_sym)
        str_buf = ""
      end
    		end
when 27 then
# line 167 "querybuilder_rb.rl"
		begin

      p = p - 3
      p = 0 if p < 0
      raise QueryBuilder::SyntaxError.new("Syntax error near #{data[p..-1].chomp.inspect}.")
    		end
# line 1503 "querybuilder_rb.rb"
			end # action switch
		end
	end
	if _trigger_goto
		next
	end
	end
	if _goto_level <= _again
	if cs == 0
		_goto_level = _out
		next
	end
	p += 1
	if p != pe
		_goto_level = _resume
		next
	end
	end
	if _goto_level <= _test_eof
	if p == eof
	__acts = _querybuilder_eof_actions[cs]
	__nacts =  _querybuilder_actions[__acts]
	__acts += 1
	while __nacts > 0
		__nacts -= 1
		__acts += 1
		case _querybuilder_actions[__acts - 1]
when 27 then
# line 167 "querybuilder_rb.rl"
		begin

      p = p - 3
      p = 0 if p < 0
      raise QueryBuilder::SyntaxError.new("Syntax error near #{data[p..-1].chomp.inspect}.")
    		end
# line 1539 "querybuilder_rb.rb"
		end # eof action switch
	end
	if _trigger_goto
		next
	end
end
	end
	if _goto_level <= _out
		break
	end
	end
	end

# line 195 "querybuilder_rb.rl"

      if p < pe
        p = p - 3
        p = 0 if p < 0
        raise QueryBuilder::SyntaxError.new("Syntax error near #{data[p..-1].chomp.inspect}.")
      end
      stack.first
    end
  end
end
