
# line 1 "querybuilder_rb.rl"
module QueryBuilder
  class Parser
  
# line 178 "querybuilder_rb.rl"


    
# line 11 "querybuilder_rb.rb"
class << self
	attr_accessor :_querybuilder_actions
	private :_querybuilder_actions, :_querybuilder_actions=
end
self._querybuilder_actions = [
	0, 1, 0, 1, 1, 1, 2, 1, 
	3, 1, 4, 1, 5, 1, 6, 1, 
	7, 1, 8, 1, 9, 1, 10, 1, 
	11, 1, 12, 1, 13, 1, 14, 1, 
	15, 1, 16, 1, 17, 1, 18, 1, 
	19, 1, 20, 1, 21, 1, 22, 1, 
	23, 1, 24, 1, 25, 1, 26, 1, 
	27, 2, 4, 0, 2, 4, 15, 2, 
	4, 17, 2, 5, 0, 2, 5, 15, 
	2, 5, 17, 2, 6, 0, 2, 6, 
	10, 2, 6, 15, 2, 6, 17, 2, 
	7, 0, 2, 7, 15, 2, 7, 17, 
	2, 8, 0, 2, 10, 6, 2, 10, 
	17, 2, 11, 0, 2, 11, 14, 2, 
	11, 26, 2, 12, 0, 2, 12, 15, 
	2, 12, 17, 2, 14, 16, 2, 16, 
	14, 2, 18, 17, 2, 19, 0, 2, 
	21, 0, 2, 22, 0, 2, 23, 0, 
	2, 24, 0, 2, 25, 0, 2, 25, 
	16, 2, 26, 11
]

class << self
	attr_accessor :_querybuilder_key_offsets
	private :_querybuilder_key_offsets, :_querybuilder_key_offsets=
end
self._querybuilder_key_offsets = [
	0, 0, 9, 13, 16, 17, 18, 21, 
	30, 34, 37, 38, 39, 40, 49, 58, 
	66, 67, 68, 69, 70, 73, 77, 78, 
	86, 94, 104, 105, 106, 107, 108, 111, 
	115, 116, 124, 132, 142, 143, 144, 148, 
	149, 150, 151, 152, 160, 168, 178, 186, 
	194, 204, 205, 208, 216, 224, 225, 226, 
	227, 228, 234, 240, 242, 248, 254, 256, 
	261, 263, 264, 265, 266, 267, 273, 279, 
	281, 286, 287, 288, 289, 290, 291, 292, 
	293, 301, 309, 317, 319, 323, 324, 325, 
	326, 327, 330, 345, 347, 355, 370, 371, 
	374, 377, 379, 379, 379, 381, 381, 385, 
	393, 409, 411, 422, 424, 434, 448, 456, 
	464, 478, 479, 480, 483, 498, 512, 513, 
	514, 523, 524, 527, 530, 531, 532, 533, 
	536, 538, 539, 542, 543, 544, 545, 546, 
	547, 548, 549, 550, 551, 552, 554, 555, 
	558, 562, 563, 564, 566, 570, 571, 572, 
	573, 574, 575, 577, 578, 579, 580, 581, 
	582, 585, 600, 602, 610, 625, 626, 629, 
	632, 634, 634, 634, 636, 636, 640, 648, 
	664, 666, 677, 679, 689, 703, 711, 719, 
	733, 734, 735, 738, 753, 767, 768, 769, 
	778, 779, 782, 785, 786, 787, 788, 791, 
	793, 794, 797, 798, 799, 800, 801, 802, 
	803, 804, 805, 806, 807, 809, 810, 813, 
	817, 818, 819, 821, 825, 826, 827, 828, 
	829, 830, 832, 833, 834, 835, 836, 837, 
	838, 838, 839, 840, 841, 842, 842, 850, 
	851, 852, 853, 854, 863, 871, 872, 875, 
	883, 891, 892, 893, 894, 895, 898, 913, 
	915, 923, 938, 939, 942, 945, 947, 947, 
	947, 949, 949, 953, 961, 977, 979, 990, 
	992, 1002, 1016, 1024, 1032, 1046, 1047, 1048, 
	1051, 1066, 1080, 1081, 1082, 1091, 1092, 1095, 
	1098, 1099, 1100, 1101, 1104, 1106, 1107, 1110, 
	1111, 1112, 1113, 1114, 1115, 1116, 1117, 1118, 
	1119, 1120, 1122, 1123, 1126, 1130, 1131, 1132, 
	1134, 1138, 1139, 1140, 1141, 1142, 1143, 1145, 
	1146, 1147, 1148, 1149, 1150, 1151, 1151, 1166, 
	1168, 1177, 1198, 1213, 1214, 1217, 1220, 1222, 
	1222, 1222, 1224, 1224, 1228, 1237, 1253, 1269, 
	1271, 1283, 1285, 1296, 1311, 1319, 1327, 1342, 
	1343, 1344, 1347, 1348, 1350, 1353, 1354, 1355, 
	1356, 1357, 1358, 1359, 1361, 1362, 1365, 1369, 
	1370, 1371, 1372, 1373, 1383, 1384, 1385, 1386, 
	1389, 1390, 1391, 1392, 1393, 1394, 1395, 1396, 
	1397, 1398, 1399, 1400, 1401, 1402, 1403, 1404, 
	1405, 1406, 1406, 1415, 1419, 1423, 1428, 1429, 
	1430, 1431, 1440, 1449, 1456, 1457, 1460, 1468, 
	1477, 1478, 1479, 1480, 1481, 1484, 1499, 1501, 
	1510, 1533, 1548, 1549, 1552, 1555, 1557, 1557, 
	1557, 1559, 1559, 1563, 1572, 1590, 1606, 1608, 
	1620, 1622, 1633, 1648, 1656, 1664, 1679, 1680, 
	1681, 1684, 1685, 1687, 1690, 1691, 1692, 1693, 
	1694, 1695, 1696, 1698, 1699, 1702, 1706, 1707, 
	1708, 1709, 1710, 1720, 1721, 1722, 1723, 1726, 
	1727, 1728, 1729, 1730, 1731, 1732, 1733, 1734, 
	1735, 1736, 1737, 1738, 1739, 1740, 1741, 1742, 
	1743, 1743, 1752, 1761, 1772, 1777, 1785, 1789, 
	1796, 1802, 1808, 1813, 1836, 1854, 1877, 1900, 
	1918, 1941, 1952, 1963, 1986, 2004, 2027, 2027
]

class << self
	attr_accessor :_querybuilder_trans_keys
	private :_querybuilder_trans_keys, :_querybuilder_trans_keys=
end
self._querybuilder_trans_keys = [
	32, 40, 95, 9, 10, 65, 90, 97, 
	122, 32, 41, 9, 10, 32, 9, 10, 
	110, 100, 32, 9, 10, 32, 40, 95, 
	9, 10, 65, 90, 97, 122, 32, 41, 
	9, 10, 32, 9, 10, 114, 111, 109, 
	32, 40, 95, 9, 10, 65, 90, 97, 
	122, 32, 40, 95, 9, 10, 65, 90, 
	97, 122, 32, 95, 9, 10, 65, 90, 
	97, 122, 114, 111, 117, 112, 32, 9, 
	10, 32, 98, 9, 10, 121, 32, 95, 
	9, 10, 65, 90, 97, 122, 32, 95, 
	9, 10, 65, 90, 97, 122, 32, 44, 
	46, 95, 9, 10, 65, 90, 97, 122, 
	114, 100, 101, 114, 32, 9, 10, 32, 
	98, 9, 10, 121, 32, 95, 9, 10, 
	65, 90, 97, 122, 32, 95, 9, 10, 
	65, 90, 97, 122, 32, 44, 46, 95, 
	9, 10, 65, 90, 97, 122, 83, 67, 
	32, 44, 9, 10, 69, 115, 99, 101, 
	32, 95, 9, 10, 65, 90, 97, 122, 
	32, 95, 9, 10, 65, 90, 97, 122, 
	32, 44, 46, 95, 9, 10, 65, 90, 
	97, 122, 32, 95, 9, 10, 65, 90, 
	97, 122, 32, 95, 9, 10, 65, 90, 
	97, 122, 32, 44, 46, 95, 9, 10, 
	65, 90, 97, 122, 110, 32, 9, 10, 
	32, 95, 9, 10, 65, 90, 97, 122, 
	32, 95, 9, 10, 65, 90, 97, 122, 
	105, 109, 105, 116, 32, 45, 9, 10, 
	48, 57, 32, 45, 9, 10, 48, 57, 
	48, 57, 32, 44, 9, 10, 48, 57, 
	32, 45, 9, 10, 48, 57, 48, 57, 
	32, 9, 10, 48, 57, 102, 114, 102, 
	115, 101, 116, 32, 45, 9, 10, 48, 
	57, 32, 45, 9, 10, 48, 57, 48, 
	57, 32, 9, 10, 48, 57, 97, 103, 
	105, 110, 97, 116, 101, 32, 95, 9, 
	10, 65, 90, 97, 122, 32, 95, 9, 
	10, 65, 90, 97, 122, 32, 95, 9, 
	10, 65, 90, 97, 122, 102, 114, 32, 
	100, 9, 10, 104, 101, 114, 101, 32, 
	9, 10, 32, 34, 35, 39, 40, 45, 
	95, 9, 10, 48, 57, 65, 90, 97, 
	122, 34, 92, 32, 43, 45, 61, 9, 
	10, 60, 62, 32, 34, 35, 39, 40, 
	45, 95, 9, 10, 48, 57, 65, 90, 
	97, 122, 123, 34, 92, 125, 34, 92, 
	125, 34, 92, 39, 92, 32, 41, 9, 
	10, 32, 43, 45, 61, 9, 10, 60, 
	62, 32, 34, 35, 39, 40, 45, 61, 
	95, 9, 10, 48, 57, 65, 90, 97, 
	122, 48, 57, 32, 43, 45, 46, 61, 
	9, 10, 48, 57, 60, 62, 48, 57, 
	32, 43, 45, 61, 9, 10, 48, 57, 
	60, 62, 32, 43, 45, 46, 61, 95, 
	9, 10, 60, 62, 65, 90, 97, 122, 
	32, 95, 9, 10, 65, 90, 97, 122, 
	32, 95, 9, 10, 65, 90, 97, 122, 
	32, 43, 45, 46, 61, 95, 9, 10, 
	60, 62, 65, 90, 97, 122, 110, 100, 
	32, 9, 10, 32, 34, 35, 39, 40, 
	45, 95, 9, 10, 48, 57, 65, 90, 
	97, 122, 32, 43, 45, 46, 61, 95, 
	9, 10, 60, 62, 65, 90, 97, 122, 
	97, 121, 32, 43, 45, 61, 115, 9, 
	10, 60, 62, 113, 32, 9, 10, 101, 
	114, 116, 111, 117, 114, 101, 105, 116, 
	107, 109, 101, 97, 105, 111, 116, 99, 
	104, 110, 117, 116, 101, 110, 116, 104, 
	101, 111, 116, 32, 9, 10, 32, 108, 
	9, 10, 105, 107, 102, 114, 32, 100, 
	9, 10, 101, 99, 111, 110, 100, 101, 
	104, 101, 107, 101, 114, 101, 32, 9, 
	10, 32, 34, 35, 39, 40, 45, 95, 
	9, 10, 48, 57, 65, 90, 97, 122, 
	34, 92, 32, 43, 45, 61, 9, 10, 
	60, 62, 32, 34, 35, 39, 40, 45, 
	95, 9, 10, 48, 57, 65, 90, 97, 
	122, 123, 34, 92, 125, 34, 92, 125, 
	34, 92, 39, 92, 32, 41, 9, 10, 
	32, 43, 45, 61, 9, 10, 60, 62, 
	32, 34, 35, 39, 40, 45, 61, 95, 
	9, 10, 48, 57, 65, 90, 97, 122, 
	48, 57, 32, 43, 45, 46, 61, 9, 
	10, 48, 57, 60, 62, 48, 57, 32, 
	43, 45, 61, 9, 10, 48, 57, 60, 
	62, 32, 43, 45, 46, 61, 95, 9, 
	10, 60, 62, 65, 90, 97, 122, 32, 
	95, 9, 10, 65, 90, 97, 122, 32, 
	95, 9, 10, 65, 90, 97, 122, 32, 
	43, 45, 46, 61, 95, 9, 10, 60, 
	62, 65, 90, 97, 122, 110, 100, 32, 
	9, 10, 32, 34, 35, 39, 40, 45, 
	95, 9, 10, 48, 57, 65, 90, 97, 
	122, 32, 43, 45, 46, 61, 95, 9, 
	10, 60, 62, 65, 90, 97, 122, 97, 
	121, 32, 43, 45, 61, 115, 9, 10, 
	60, 62, 113, 32, 9, 10, 101, 114, 
	116, 111, 117, 114, 101, 105, 116, 107, 
	109, 101, 97, 105, 111, 116, 99, 104, 
	110, 117, 116, 101, 110, 116, 104, 101, 
	111, 116, 32, 9, 10, 32, 108, 9, 
	10, 105, 107, 102, 114, 32, 100, 9, 
	10, 101, 99, 111, 110, 100, 101, 104, 
	101, 107, 101, 97, 97, 101, 101, 97, 
	97, 101, 32, 95, 9, 10, 65, 90, 
	97, 122, 104, 114, 111, 109, 32, 40, 
	95, 9, 10, 65, 90, 97, 122, 32, 
	95, 9, 10, 65, 90, 97, 122, 110, 
	32, 9, 10, 32, 95, 9, 10, 65, 
	90, 97, 122, 32, 95, 9, 10, 65, 
	90, 97, 122, 104, 101, 114, 101, 32, 
	9, 10, 32, 34, 35, 39, 40, 45, 
	95, 9, 10, 48, 57, 65, 90, 97, 
	122, 34, 92, 32, 43, 45, 61, 9, 
	10, 60, 62, 32, 34, 35, 39, 40, 
	45, 95, 9, 10, 48, 57, 65, 90, 
	97, 122, 123, 34, 92, 125, 34, 92, 
	125, 34, 92, 39, 92, 32, 41, 9, 
	10, 32, 43, 45, 61, 9, 10, 60, 
	62, 32, 34, 35, 39, 40, 45, 61, 
	95, 9, 10, 48, 57, 65, 90, 97, 
	122, 48, 57, 32, 43, 45, 46, 61, 
	9, 10, 48, 57, 60, 62, 48, 57, 
	32, 43, 45, 61, 9, 10, 48, 57, 
	60, 62, 32, 43, 45, 46, 61, 95, 
	9, 10, 60, 62, 65, 90, 97, 122, 
	32, 95, 9, 10, 65, 90, 97, 122, 
	32, 95, 9, 10, 65, 90, 97, 122, 
	32, 43, 45, 46, 61, 95, 9, 10, 
	60, 62, 65, 90, 97, 122, 110, 100, 
	32, 9, 10, 32, 34, 35, 39, 40, 
	45, 95, 9, 10, 48, 57, 65, 90, 
	97, 122, 32, 43, 45, 46, 61, 95, 
	9, 10, 60, 62, 65, 90, 97, 122, 
	97, 121, 32, 43, 45, 61, 115, 9, 
	10, 60, 62, 113, 32, 9, 10, 101, 
	114, 116, 111, 117, 114, 101, 105, 116, 
	107, 109, 101, 97, 105, 111, 116, 99, 
	104, 110, 117, 116, 101, 110, 116, 104, 
	101, 111, 116, 32, 9, 10, 32, 108, 
	9, 10, 105, 107, 102, 114, 32, 100, 
	9, 10, 101, 99, 111, 110, 100, 101, 
	104, 101, 107, 101, 97, 97, 101, 32, 
	34, 35, 39, 40, 45, 95, 9, 10, 
	48, 57, 65, 90, 97, 122, 34, 92, 
	32, 41, 43, 45, 61, 9, 10, 60, 
	62, 32, 41, 43, 45, 61, 97, 100, 
	101, 103, 104, 108, 109, 110, 111, 115, 
	119, 121, 9, 10, 60, 62, 32, 34, 
	35, 39, 40, 45, 95, 9, 10, 48, 
	57, 65, 90, 97, 122, 123, 34, 92, 
	125, 34, 92, 125, 34, 92, 39, 92, 
	32, 41, 9, 10, 32, 41, 43, 45, 
	61, 9, 10, 60, 62, 32, 41, 43, 
	45, 61, 97, 101, 103, 108, 109, 110, 
	111, 9, 10, 60, 62, 32, 34, 35, 
	39, 40, 45, 61, 95, 9, 10, 48, 
	57, 65, 90, 97, 122, 48, 57, 32, 
	41, 43, 45, 46, 61, 9, 10, 48, 
	57, 60, 62, 48, 57, 32, 41, 43, 
	45, 61, 9, 10, 48, 57, 60, 62, 
	32, 41, 43, 45, 46, 61, 95, 9, 
	10, 60, 62, 65, 90, 97, 122, 32, 
	95, 9, 10, 65, 90, 97, 122, 32, 
	95, 9, 10, 65, 90, 97, 122, 32, 
	41, 43, 45, 46, 61, 95, 9, 10, 
	60, 62, 65, 90, 97, 122, 110, 100, 
	32, 9, 10, 113, 101, 116, 101, 105, 
	116, 107, 101, 97, 116, 99, 104, 101, 
	111, 116, 32, 9, 10, 32, 108, 9, 
	10, 105, 114, 97, 121, 32, 41, 43, 
	45, 61, 115, 9, 10, 60, 62, 111, 
	117, 114, 97, 105, 111, 110, 117, 116, 
	101, 110, 116, 104, 101, 99, 111, 110, 
	100, 101, 101, 107, 101, 97, 32, 40, 
	95, 9, 10, 65, 90, 97, 122, 32, 
	41, 9, 10, 32, 41, 9, 10, 32, 
	41, 102, 9, 10, 114, 111, 109, 32, 
	40, 95, 9, 10, 65, 90, 97, 122, 
	32, 41, 95, 9, 10, 65, 90, 97, 
	122, 32, 41, 102, 105, 119, 9, 10, 
	110, 32, 9, 10, 32, 95, 9, 10, 
	65, 90, 97, 122, 32, 41, 95, 9, 
	10, 65, 90, 97, 122, 104, 101, 114, 
	101, 32, 9, 10, 32, 34, 35, 39, 
	40, 45, 95, 9, 10, 48, 57, 65, 
	90, 97, 122, 34, 92, 32, 41, 43, 
	45, 61, 9, 10, 60, 62, 32, 41, 
	43, 45, 61, 97, 100, 101, 102, 103, 
	104, 105, 108, 109, 110, 111, 115, 119, 
	121, 9, 10, 60, 62, 32, 34, 35, 
	39, 40, 45, 95, 9, 10, 48, 57, 
	65, 90, 97, 122, 123, 34, 92, 125, 
	34, 92, 125, 34, 92, 39, 92, 32, 
	41, 9, 10, 32, 41, 43, 45, 61, 
	9, 10, 60, 62, 32, 41, 43, 45, 
	61, 97, 101, 102, 103, 105, 108, 109, 
	110, 111, 9, 10, 60, 62, 32, 34, 
	35, 39, 40, 45, 61, 95, 9, 10, 
	48, 57, 65, 90, 97, 122, 48, 57, 
	32, 41, 43, 45, 46, 61, 9, 10, 
	48, 57, 60, 62, 48, 57, 32, 41, 
	43, 45, 61, 9, 10, 48, 57, 60, 
	62, 32, 41, 43, 45, 46, 61, 95, 
	9, 10, 60, 62, 65, 90, 97, 122, 
	32, 95, 9, 10, 65, 90, 97, 122, 
	32, 95, 9, 10, 65, 90, 97, 122, 
	32, 41, 43, 45, 46, 61, 95, 9, 
	10, 60, 62, 65, 90, 97, 122, 110, 
	100, 32, 9, 10, 113, 101, 116, 101, 
	105, 116, 107, 101, 97, 116, 99, 104, 
	101, 111, 116, 32, 9, 10, 32, 108, 
	9, 10, 105, 114, 97, 121, 32, 41, 
	43, 45, 61, 115, 9, 10, 60, 62, 
	111, 117, 114, 97, 105, 111, 110, 117, 
	116, 101, 110, 116, 104, 101, 99, 111, 
	110, 100, 101, 101, 107, 101, 97, 32, 
	97, 102, 103, 108, 111, 112, 9, 10, 
	32, 97, 102, 103, 108, 111, 112, 9, 
	10, 32, 97, 102, 103, 105, 108, 111, 
	112, 119, 9, 10, 32, 44, 111, 9, 
	10, 32, 44, 65, 68, 97, 100, 9, 
	10, 32, 44, 9, 10, 32, 44, 103, 
	111, 112, 9, 10, 32, 103, 111, 112, 
	9, 10, 32, 103, 111, 112, 9, 10, 
	32, 103, 111, 9, 10, 32, 43, 45, 
	61, 97, 100, 101, 102, 103, 104, 105, 
	108, 109, 110, 111, 112, 115, 119, 121, 
	9, 10, 60, 62, 32, 43, 45, 61, 
	97, 101, 102, 103, 105, 108, 109, 110, 
	111, 112, 9, 10, 60, 62, 32, 43, 
	45, 61, 97, 100, 101, 102, 103, 104, 
	105, 108, 109, 110, 111, 112, 115, 119, 
	121, 9, 10, 60, 62, 32, 43, 45, 
	61, 97, 100, 101, 102, 103, 104, 105, 
	108, 109, 110, 111, 112, 115, 119, 121, 
	9, 10, 60, 62, 32, 43, 45, 61, 
	97, 101, 102, 103, 105, 108, 109, 110, 
	111, 112, 9, 10, 60, 62, 32, 43, 
	45, 61, 97, 100, 101, 102, 103, 104, 
	105, 108, 109, 110, 111, 112, 115, 119, 
	121, 9, 10, 60, 62, 32, 97, 102, 
	103, 105, 108, 111, 112, 119, 9, 10, 
	32, 97, 102, 103, 105, 108, 111, 112, 
	119, 9, 10, 32, 43, 45, 61, 97, 
	100, 101, 102, 103, 104, 105, 108, 109, 
	110, 111, 112, 115, 119, 121, 9, 10, 
	60, 62, 32, 43, 45, 61, 97, 101, 
	102, 103, 105, 108, 109, 110, 111, 112, 
	9, 10, 60, 62, 32, 43, 45, 61, 
	97, 100, 101, 102, 103, 104, 105, 108, 
	109, 110, 111, 112, 115, 119, 121, 9, 
	10, 60, 62, 0
]

class << self
	attr_accessor :_querybuilder_single_lengths
	private :_querybuilder_single_lengths, :_querybuilder_single_lengths=
end
self._querybuilder_single_lengths = [
	0, 3, 2, 1, 1, 1, 1, 3, 
	2, 1, 1, 1, 1, 3, 3, 2, 
	1, 1, 1, 1, 1, 2, 1, 2, 
	2, 4, 1, 1, 1, 1, 1, 2, 
	1, 2, 2, 4, 1, 1, 2, 1, 
	1, 1, 1, 2, 2, 4, 2, 2, 
	4, 1, 1, 2, 2, 1, 1, 1, 
	1, 2, 2, 0, 2, 2, 0, 1, 
	2, 1, 1, 1, 1, 2, 2, 0, 
	1, 1, 1, 1, 1, 1, 1, 1, 
	2, 2, 2, 2, 2, 1, 1, 1, 
	1, 1, 7, 2, 4, 7, 1, 3, 
	3, 2, 0, 0, 2, 0, 2, 4, 
	8, 0, 5, 0, 4, 6, 2, 2, 
	6, 1, 1, 1, 7, 6, 1, 1, 
	5, 1, 1, 3, 1, 1, 1, 3, 
	2, 1, 3, 1, 1, 1, 1, 1, 
	1, 1, 1, 1, 1, 2, 1, 1, 
	2, 1, 1, 2, 2, 1, 1, 1, 
	1, 1, 2, 1, 1, 1, 1, 1, 
	1, 7, 2, 4, 7, 1, 3, 3, 
	2, 0, 0, 2, 0, 2, 4, 8, 
	0, 5, 0, 4, 6, 2, 2, 6, 
	1, 1, 1, 7, 6, 1, 1, 5, 
	1, 1, 3, 1, 1, 1, 3, 2, 
	1, 3, 1, 1, 1, 1, 1, 1, 
	1, 1, 1, 1, 2, 1, 1, 2, 
	1, 1, 2, 2, 1, 1, 1, 1, 
	1, 2, 1, 1, 1, 1, 1, 1, 
	0, 1, 1, 1, 1, 0, 2, 1, 
	1, 1, 1, 3, 2, 1, 1, 2, 
	2, 1, 1, 1, 1, 1, 7, 2, 
	4, 7, 1, 3, 3, 2, 0, 0, 
	2, 0, 2, 4, 8, 0, 5, 0, 
	4, 6, 2, 2, 6, 1, 1, 1, 
	7, 6, 1, 1, 5, 1, 1, 3, 
	1, 1, 1, 3, 2, 1, 3, 1, 
	1, 1, 1, 1, 1, 1, 1, 1, 
	1, 2, 1, 1, 2, 1, 1, 2, 
	2, 1, 1, 1, 1, 1, 2, 1, 
	1, 1, 1, 1, 1, 0, 7, 2, 
	5, 17, 7, 1, 3, 3, 2, 0, 
	0, 2, 0, 2, 5, 12, 8, 0, 
	6, 0, 5, 7, 2, 2, 7, 1, 
	1, 1, 1, 2, 3, 1, 1, 1, 
	1, 1, 1, 2, 1, 1, 2, 1, 
	1, 1, 1, 6, 1, 1, 1, 3, 
	1, 1, 1, 1, 1, 1, 1, 1, 
	1, 1, 1, 1, 1, 1, 1, 1, 
	1, 0, 3, 2, 2, 3, 1, 1, 
	1, 3, 3, 5, 1, 1, 2, 3, 
	1, 1, 1, 1, 1, 7, 2, 5, 
	19, 7, 1, 3, 3, 2, 0, 0, 
	2, 0, 2, 5, 14, 8, 0, 6, 
	0, 5, 7, 2, 2, 7, 1, 1, 
	1, 1, 2, 3, 1, 1, 1, 1, 
	1, 1, 2, 1, 1, 2, 1, 1, 
	1, 1, 6, 1, 1, 1, 3, 1, 
	1, 1, 1, 1, 1, 1, 1, 1, 
	1, 1, 1, 1, 1, 1, 1, 1, 
	0, 7, 7, 9, 3, 6, 2, 5, 
	4, 4, 3, 19, 14, 19, 19, 14, 
	19, 9, 9, 19, 14, 19, 0, 0
]

class << self
	attr_accessor :_querybuilder_range_lengths
	private :_querybuilder_range_lengths, :_querybuilder_range_lengths=
end
self._querybuilder_range_lengths = [
	0, 3, 1, 1, 0, 0, 1, 3, 
	1, 1, 0, 0, 0, 3, 3, 3, 
	0, 0, 0, 0, 1, 1, 0, 3, 
	3, 3, 0, 0, 0, 0, 1, 1, 
	0, 3, 3, 3, 0, 0, 1, 0, 
	0, 0, 0, 3, 3, 3, 3, 3, 
	3, 0, 1, 3, 3, 0, 0, 0, 
	0, 2, 2, 1, 2, 2, 1, 2, 
	0, 0, 0, 0, 0, 2, 2, 1, 
	2, 0, 0, 0, 0, 0, 0, 0, 
	3, 3, 3, 0, 1, 0, 0, 0, 
	0, 1, 4, 0, 2, 4, 0, 0, 
	0, 0, 0, 0, 0, 0, 1, 2, 
	4, 1, 3, 1, 3, 4, 3, 3, 
	4, 0, 0, 1, 4, 4, 0, 0, 
	2, 0, 1, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 1, 
	1, 0, 0, 0, 1, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	1, 4, 0, 2, 4, 0, 0, 0, 
	0, 0, 0, 0, 0, 1, 2, 4, 
	1, 3, 1, 3, 4, 3, 3, 4, 
	0, 0, 1, 4, 4, 0, 0, 2, 
	0, 1, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 1, 1, 
	0, 0, 0, 1, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 3, 0, 
	0, 0, 0, 3, 3, 0, 1, 3, 
	3, 0, 0, 0, 0, 1, 4, 0, 
	2, 4, 0, 0, 0, 0, 0, 0, 
	0, 0, 1, 2, 4, 1, 3, 1, 
	3, 4, 3, 3, 4, 0, 0, 1, 
	4, 4, 0, 0, 2, 0, 1, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 1, 1, 0, 0, 0, 
	1, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 4, 0, 
	2, 2, 4, 0, 0, 0, 0, 0, 
	0, 0, 0, 1, 2, 2, 4, 1, 
	3, 1, 3, 4, 3, 3, 4, 0, 
	0, 1, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 1, 1, 0, 
	0, 0, 0, 2, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 3, 1, 1, 1, 0, 0, 
	0, 3, 3, 1, 0, 1, 3, 3, 
	0, 0, 0, 0, 1, 4, 0, 2, 
	2, 4, 0, 0, 0, 0, 0, 0, 
	0, 0, 1, 2, 2, 4, 1, 3, 
	1, 3, 4, 3, 3, 4, 0, 0, 
	1, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 1, 1, 0, 0, 
	0, 0, 2, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 1, 1, 1, 1, 1, 1, 1, 
	1, 1, 1, 2, 2, 2, 2, 2, 
	2, 1, 1, 2, 2, 2, 0, 0
]

class << self
	attr_accessor :_querybuilder_index_offsets
	private :_querybuilder_index_offsets, :_querybuilder_index_offsets=
end
self._querybuilder_index_offsets = [
	0, 0, 7, 11, 14, 16, 18, 21, 
	28, 32, 35, 37, 39, 41, 48, 55, 
	61, 63, 65, 67, 69, 72, 76, 78, 
	84, 90, 98, 100, 102, 104, 106, 109, 
	113, 115, 121, 127, 135, 137, 139, 143, 
	145, 147, 149, 151, 157, 163, 171, 177, 
	183, 191, 193, 196, 202, 208, 210, 212, 
	214, 216, 221, 226, 228, 233, 238, 240, 
	244, 247, 249, 251, 253, 255, 260, 265, 
	267, 271, 273, 275, 277, 279, 281, 283, 
	285, 291, 297, 303, 306, 310, 312, 314, 
	316, 318, 321, 333, 336, 343, 355, 357, 
	361, 365, 368, 369, 370, 373, 374, 378, 
	385, 398, 400, 409, 411, 419, 430, 436, 
	442, 453, 455, 457, 460, 472, 483, 485, 
	487, 495, 497, 500, 504, 506, 508, 510, 
	514, 517, 519, 523, 525, 527, 529, 531, 
	533, 535, 537, 539, 541, 543, 546, 548, 
	551, 555, 557, 559, 562, 566, 568, 570, 
	572, 574, 576, 579, 581, 583, 585, 587, 
	589, 592, 604, 607, 614, 626, 628, 632, 
	636, 639, 640, 641, 644, 645, 649, 656, 
	669, 671, 680, 682, 690, 701, 707, 713, 
	724, 726, 728, 731, 743, 754, 756, 758, 
	766, 768, 771, 775, 777, 779, 781, 785, 
	788, 790, 794, 796, 798, 800, 802, 804, 
	806, 808, 810, 812, 814, 817, 819, 822, 
	826, 828, 830, 833, 837, 839, 841, 843, 
	845, 847, 850, 852, 854, 856, 858, 860, 
	862, 863, 865, 867, 869, 871, 872, 878, 
	880, 882, 884, 886, 893, 899, 901, 904, 
	910, 916, 918, 920, 922, 924, 927, 939, 
	942, 949, 961, 963, 967, 971, 974, 975, 
	976, 979, 980, 984, 991, 1004, 1006, 1015, 
	1017, 1025, 1036, 1042, 1048, 1059, 1061, 1063, 
	1066, 1078, 1089, 1091, 1093, 1101, 1103, 1106, 
	1110, 1112, 1114, 1116, 1120, 1123, 1125, 1129, 
	1131, 1133, 1135, 1137, 1139, 1141, 1143, 1145, 
	1147, 1149, 1152, 1154, 1157, 1161, 1163, 1165, 
	1168, 1172, 1174, 1176, 1178, 1180, 1182, 1185, 
	1187, 1189, 1191, 1193, 1195, 1197, 1198, 1210, 
	1213, 1221, 1241, 1253, 1255, 1259, 1263, 1266, 
	1267, 1268, 1271, 1272, 1276, 1284, 1299, 1312, 
	1314, 1324, 1326, 1335, 1347, 1353, 1359, 1371, 
	1373, 1375, 1378, 1380, 1383, 1387, 1389, 1391, 
	1393, 1395, 1397, 1399, 1402, 1404, 1407, 1411, 
	1413, 1415, 1417, 1419, 1428, 1430, 1432, 1434, 
	1438, 1440, 1442, 1444, 1446, 1448, 1450, 1452, 
	1454, 1456, 1458, 1460, 1462, 1464, 1466, 1468, 
	1470, 1472, 1473, 1480, 1484, 1488, 1493, 1495, 
	1497, 1499, 1506, 1513, 1520, 1522, 1525, 1531, 
	1538, 1540, 1542, 1544, 1546, 1549, 1561, 1564, 
	1572, 1594, 1606, 1608, 1612, 1616, 1619, 1620, 
	1621, 1624, 1625, 1629, 1637, 1654, 1667, 1669, 
	1679, 1681, 1690, 1702, 1708, 1714, 1726, 1728, 
	1730, 1733, 1735, 1738, 1742, 1744, 1746, 1748, 
	1750, 1752, 1754, 1757, 1759, 1762, 1766, 1768, 
	1770, 1772, 1774, 1783, 1785, 1787, 1789, 1793, 
	1795, 1797, 1799, 1801, 1803, 1805, 1807, 1809, 
	1811, 1813, 1815, 1817, 1819, 1821, 1823, 1825, 
	1827, 1828, 1837, 1846, 1857, 1862, 1870, 1874, 
	1881, 1887, 1893, 1898, 1920, 1937, 1959, 1981, 
	1998, 2020, 2031, 2042, 2064, 2081, 2103, 2104
]

class << self
	attr_accessor :_querybuilder_indicies
	private :_querybuilder_indicies, :_querybuilder_indicies=
end
self._querybuilder_indicies = [
	0, 2, 3, 0, 3, 3, 1, 4, 
	5, 4, 1, 7, 7, 6, 8, 1, 
	9, 1, 10, 10, 1, 11, 12, 13, 
	11, 13, 13, 1, 14, 15, 14, 1, 
	16, 16, 6, 17, 1, 18, 1, 19, 
	1, 20, 21, 22, 20, 22, 22, 1, 
	23, 12, 24, 23, 24, 24, 1, 25, 
	24, 25, 24, 24, 6, 26, 1, 27, 
	1, 28, 1, 29, 1, 30, 30, 1, 
	30, 31, 30, 1, 32, 1, 33, 34, 
	33, 34, 34, 1, 35, 36, 35, 36, 
	36, 1, 37, 38, 39, 36, 37, 36, 
	36, 6, 40, 1, 41, 1, 42, 1, 
	43, 1, 44, 44, 1, 44, 45, 44, 
	1, 46, 1, 47, 48, 47, 48, 48, 
	1, 49, 50, 49, 50, 50, 1, 51, 
	52, 53, 50, 51, 50, 50, 6, 54, 
	1, 55, 1, 56, 57, 56, 6, 58, 
	1, 59, 1, 55, 1, 60, 1, 61, 
	62, 61, 62, 62, 1, 63, 64, 63, 
	64, 64, 1, 65, 66, 67, 64, 65, 
	64, 64, 6, 68, 69, 68, 69, 69, 
	1, 70, 71, 70, 71, 71, 1, 72, 
	73, 74, 71, 72, 71, 71, 6, 75, 
	1, 76, 76, 1, 76, 77, 76, 77, 
	77, 1, 78, 77, 78, 77, 77, 6, 
	79, 1, 80, 1, 81, 1, 82, 1, 
	83, 84, 83, 85, 1, 86, 87, 86, 
	88, 1, 88, 1, 89, 90, 89, 88, 
	6, 91, 92, 91, 93, 1, 93, 1, 
	94, 94, 93, 6, 95, 40, 1, 96, 
	1, 97, 1, 98, 1, 99, 1, 100, 
	101, 100, 102, 1, 103, 104, 103, 105, 
	1, 105, 1, 106, 106, 105, 6, 107, 
	1, 108, 1, 109, 1, 110, 1, 111, 
	1, 112, 1, 113, 1, 114, 115, 114, 
	115, 115, 1, 116, 117, 116, 117, 117, 
	1, 118, 117, 118, 117, 117, 6, 95, 
	119, 1, 10, 41, 10, 1, 120, 1, 
	121, 1, 122, 1, 123, 1, 124, 124, 
	1, 125, 126, 127, 128, 129, 130, 132, 
	125, 131, 132, 132, 1, 134, 135, 133, 
	136, 137, 137, 137, 136, 138, 6, 139, 
	140, 141, 142, 143, 144, 146, 139, 145, 
	146, 146, 1, 147, 1, 149, 150, 1, 
	148, 149, 150, 151, 148, 148, 152, 149, 
	149, 148, 154, 155, 153, 153, 156, 157, 
	156, 1, 158, 137, 137, 137, 158, 138, 
	6, 139, 140, 141, 142, 143, 144, 137, 
	146, 139, 145, 146, 146, 1, 131, 1, 
	159, 160, 160, 161, 160, 159, 131, 162, 
	6, 163, 1, 164, 165, 165, 165, 164, 
	163, 166, 6, 167, 168, 168, 169, 168, 
	132, 167, 170, 132, 132, 6, 171, 172, 
	171, 172, 172, 1, 173, 174, 173, 174, 
	174, 1, 175, 176, 176, 177, 176, 174, 
	175, 178, 174, 174, 6, 179, 1, 180, 
	1, 181, 181, 1, 182, 126, 127, 128, 
	183, 130, 184, 182, 131, 184, 184, 1, 
	185, 168, 168, 169, 168, 184, 185, 170, 
	184, 184, 6, 186, 1, 187, 1, 188, 
	189, 189, 189, 191, 188, 190, 6, 192, 
	1, 139, 139, 1, 192, 26, 192, 1, 
	193, 1, 194, 1, 187, 1, 192, 195, 
	192, 1, 196, 80, 1, 192, 1, 197, 
	198, 199, 1, 200, 1, 201, 1, 192, 
	1, 202, 1, 203, 1, 204, 1, 187, 
	1, 205, 1, 206, 1, 187, 1, 192, 
	207, 1, 208, 1, 209, 209, 1, 210, 
	211, 210, 1, 212, 1, 196, 1, 95, 
	213, 1, 181, 41, 181, 1, 214, 1, 
	215, 1, 216, 1, 217, 1, 187, 1, 
	218, 219, 1, 220, 1, 187, 1, 221, 
	1, 222, 1, 223, 1, 224, 224, 1, 
	225, 226, 227, 228, 229, 230, 232, 225, 
	231, 232, 232, 1, 234, 235, 233, 236, 
	237, 237, 237, 236, 238, 6, 239, 240, 
	241, 242, 243, 244, 246, 239, 245, 246, 
	246, 1, 247, 1, 249, 250, 1, 248, 
	249, 250, 251, 248, 248, 252, 249, 249, 
	248, 254, 255, 253, 253, 256, 257, 256, 
	1, 258, 237, 237, 237, 258, 238, 6, 
	239, 240, 241, 242, 243, 244, 237, 246, 
	239, 245, 246, 246, 1, 231, 1, 259, 
	260, 260, 261, 260, 259, 231, 262, 6, 
	263, 1, 264, 265, 265, 265, 264, 263, 
	266, 6, 267, 268, 268, 269, 268, 232, 
	267, 270, 232, 232, 6, 271, 272, 271, 
	272, 272, 1, 273, 274, 273, 274, 274, 
	1, 275, 276, 276, 277, 276, 274, 275, 
	278, 274, 274, 6, 279, 1, 280, 1, 
	281, 281, 1, 282, 226, 227, 228, 283, 
	230, 284, 282, 231, 284, 284, 1, 285, 
	268, 268, 269, 268, 284, 285, 270, 284, 
	284, 6, 286, 1, 287, 1, 288, 289, 
	289, 289, 291, 288, 290, 6, 292, 1, 
	239, 239, 1, 292, 26, 292, 1, 293, 
	1, 294, 1, 287, 1, 292, 295, 292, 
	1, 296, 80, 1, 292, 1, 297, 298, 
	299, 1, 300, 1, 301, 1, 292, 1, 
	302, 1, 303, 1, 304, 1, 287, 1, 
	305, 1, 306, 1, 287, 1, 292, 307, 
	1, 308, 1, 309, 309, 1, 310, 311, 
	310, 1, 312, 1, 296, 1, 95, 313, 
	1, 281, 41, 281, 1, 314, 1, 315, 
	1, 316, 1, 317, 1, 287, 1, 318, 
	219, 1, 319, 1, 287, 1, 320, 1, 
	294, 1, 297, 1, 318, 1, 233, 321, 
	1, 194, 1, 197, 1, 218, 1, 133, 
	322, 13, 322, 13, 13, 6, 219, 1, 
	323, 1, 324, 1, 325, 1, 326, 327, 
	328, 326, 328, 328, 1, 329, 3, 329, 
	3, 3, 6, 330, 1, 331, 331, 1, 
	331, 332, 331, 332, 332, 1, 333, 332, 
	333, 332, 332, 6, 334, 1, 335, 1, 
	336, 1, 337, 1, 338, 338, 1, 339, 
	340, 341, 342, 343, 344, 346, 339, 345, 
	346, 346, 1, 348, 349, 347, 350, 351, 
	351, 351, 350, 352, 6, 353, 354, 355, 
	356, 357, 358, 360, 353, 359, 360, 360, 
	1, 361, 1, 363, 364, 1, 362, 363, 
	364, 365, 362, 362, 366, 363, 363, 362, 
	368, 369, 367, 367, 370, 371, 370, 1, 
	372, 351, 351, 351, 372, 352, 6, 353, 
	354, 355, 356, 357, 358, 351, 360, 353, 
	359, 360, 360, 1, 345, 1, 373, 374, 
	374, 375, 374, 373, 345, 376, 6, 377, 
	1, 378, 379, 379, 379, 378, 377, 380, 
	6, 381, 382, 382, 383, 382, 346, 381, 
	384, 346, 346, 6, 385, 386, 385, 386, 
	386, 1, 387, 388, 387, 388, 388, 1, 
	389, 390, 390, 391, 390, 388, 389, 392, 
	388, 388, 6, 393, 1, 394, 1, 395, 
	395, 1, 396, 340, 341, 342, 397, 344, 
	398, 396, 345, 398, 398, 1, 399, 382, 
	382, 383, 382, 398, 399, 384, 398, 398, 
	6, 400, 1, 401, 1, 402, 403, 403, 
	403, 405, 402, 404, 6, 406, 1, 353, 
	353, 1, 406, 26, 406, 1, 407, 1, 
	408, 1, 401, 1, 406, 409, 406, 1, 
	410, 80, 1, 406, 1, 411, 412, 413, 
	1, 414, 1, 415, 1, 406, 1, 416, 
	1, 417, 1, 418, 1, 401, 1, 419, 
	1, 420, 1, 401, 1, 406, 421, 1, 
	422, 1, 423, 423, 1, 424, 425, 424, 
	1, 426, 1, 410, 1, 95, 427, 1, 
	395, 41, 395, 1, 428, 1, 429, 1, 
	430, 1, 431, 1, 401, 1, 432, 219, 
	1, 433, 1, 401, 1, 434, 1, 408, 
	1, 411, 1, 432, 1, 347, 435, 436, 
	437, 438, 439, 440, 442, 435, 441, 442, 
	442, 1, 444, 445, 443, 446, 447, 448, 
	448, 448, 446, 449, 1, 446, 447, 448, 
	448, 448, 450, 451, 452, 453, 454, 455, 
	456, 457, 458, 459, 460, 461, 446, 449, 
	1, 462, 463, 464, 465, 466, 467, 469, 
	462, 468, 469, 469, 1, 470, 1, 472, 
	473, 1, 471, 472, 473, 474, 471, 471, 
	475, 472, 472, 471, 477, 478, 476, 476, 
	479, 480, 479, 1, 481, 447, 448, 448, 
	448, 481, 449, 1, 481, 447, 448, 448, 
	448, 450, 452, 453, 455, 482, 457, 458, 
	481, 449, 1, 462, 463, 464, 465, 466, 
	467, 448, 469, 462, 468, 469, 469, 1, 
	441, 1, 483, 484, 485, 485, 486, 485, 
	483, 441, 487, 1, 488, 1, 489, 490, 
	491, 491, 491, 489, 488, 492, 1, 493, 
	494, 495, 495, 496, 495, 442, 493, 497, 
	442, 442, 1, 498, 499, 498, 499, 499, 
	1, 500, 501, 500, 501, 501, 1, 502, 
	503, 504, 504, 505, 504, 501, 502, 506, 
	501, 501, 1, 507, 1, 508, 1, 462, 
	462, 1, 508, 1, 508, 508, 1, 508, 
	509, 508, 1, 510, 1, 508, 1, 511, 
	1, 512, 1, 513, 1, 508, 1, 508, 
	514, 1, 515, 1, 516, 516, 1, 517, 
	518, 517, 1, 509, 1, 508, 1, 519, 
	1, 520, 1, 521, 522, 523, 523, 523, 
	525, 521, 524, 1, 526, 1, 527, 1, 
	520, 1, 511, 528, 529, 1, 530, 1, 
	531, 1, 532, 1, 520, 1, 533, 1, 
	534, 1, 520, 1, 535, 1, 536, 1, 
	537, 1, 538, 1, 520, 1, 539, 1, 
	540, 1, 520, 1, 541, 1, 527, 1, 
	443, 542, 543, 544, 542, 544, 544, 1, 
	545, 546, 545, 1, 547, 548, 547, 1, 
	547, 548, 549, 547, 1, 550, 1, 551, 
	1, 552, 1, 553, 554, 555, 553, 555, 
	555, 1, 556, 557, 544, 556, 544, 544, 
	1, 558, 548, 549, 559, 560, 558, 1, 
	561, 1, 562, 562, 1, 562, 563, 562, 
	563, 563, 1, 564, 565, 563, 564, 563, 
	563, 1, 566, 1, 567, 1, 568, 1, 
	569, 1, 570, 570, 1, 571, 572, 573, 
	574, 575, 576, 578, 571, 577, 578, 578, 
	1, 580, 581, 579, 582, 548, 583, 583, 
	583, 582, 584, 1, 582, 548, 583, 583, 
	583, 585, 586, 587, 549, 588, 589, 559, 
	590, 591, 592, 593, 594, 595, 596, 582, 
	584, 1, 597, 598, 599, 600, 601, 602, 
	604, 597, 603, 604, 604, 1, 605, 1, 
	607, 608, 1, 606, 607, 608, 609, 606, 
	606, 610, 607, 607, 606, 612, 613, 611, 
	611, 614, 615, 614, 1, 616, 548, 583, 
	583, 583, 616, 584, 1, 616, 548, 583, 
	583, 583, 585, 587, 549, 588, 559, 590, 
	617, 592, 593, 616, 584, 1, 597, 598, 
	599, 600, 601, 602, 583, 604, 597, 603, 
	604, 604, 1, 577, 1, 618, 619, 620, 
	620, 621, 620, 618, 577, 622, 1, 623, 
	1, 624, 625, 626, 626, 626, 624, 623, 
	627, 1, 628, 629, 630, 630, 631, 630, 
	578, 628, 632, 578, 578, 1, 633, 634, 
	633, 634, 634, 1, 635, 636, 635, 636, 
	636, 1, 637, 638, 639, 639, 640, 639, 
	636, 637, 641, 636, 636, 1, 642, 1, 
	643, 1, 597, 597, 1, 643, 1, 643, 
	643, 1, 643, 644, 643, 1, 645, 1, 
	643, 1, 646, 1, 647, 1, 648, 1, 
	643, 1, 643, 649, 1, 650, 1, 651, 
	651, 1, 652, 653, 652, 1, 644, 1, 
	643, 1, 654, 1, 655, 1, 656, 657, 
	658, 658, 658, 660, 656, 659, 1, 661, 
	1, 662, 1, 655, 1, 646, 663, 664, 
	1, 665, 1, 666, 1, 667, 1, 655, 
	1, 668, 1, 669, 1, 655, 1, 670, 
	1, 671, 1, 672, 1, 673, 1, 655, 
	1, 674, 1, 675, 1, 655, 1, 676, 
	1, 662, 1, 579, 7, 677, 678, 679, 
	680, 681, 682, 7, 6, 16, 677, 683, 
	679, 680, 681, 682, 16, 6, 684, 677, 
	683, 679, 685, 680, 681, 682, 686, 684, 
	6, 687, 35, 688, 687, 6, 689, 49, 
	58, 690, 60, 691, 689, 6, 692, 49, 
	692, 6, 693, 91, 679, 694, 682, 693, 
	6, 695, 679, 694, 682, 695, 6, 696, 
	679, 688, 682, 696, 6, 697, 679, 688, 
	697, 6, 136, 137, 137, 137, 698, 699, 
	700, 683, 701, 702, 685, 703, 704, 705, 
	706, 682, 707, 708, 709, 136, 138, 6, 
	158, 137, 137, 137, 698, 700, 683, 701, 
	685, 703, 710, 705, 706, 682, 158, 138, 
	6, 711, 137, 137, 137, 698, 699, 700, 
	683, 701, 702, 685, 703, 704, 705, 706, 
	682, 707, 712, 709, 711, 138, 6, 236, 
	237, 237, 237, 713, 714, 715, 683, 716, 
	717, 685, 718, 719, 720, 721, 682, 722, 
	723, 724, 236, 238, 6, 258, 237, 237, 
	237, 713, 715, 683, 716, 685, 718, 725, 
	720, 721, 682, 258, 238, 6, 726, 237, 
	237, 237, 713, 714, 715, 683, 716, 717, 
	685, 718, 719, 720, 721, 682, 722, 727, 
	724, 726, 238, 6, 728, 677, 683, 679, 
	685, 680, 681, 682, 729, 728, 6, 730, 
	677, 678, 679, 731, 680, 681, 682, 732, 
	730, 6, 350, 351, 351, 351, 733, 734, 
	735, 678, 736, 737, 731, 738, 739, 740, 
	741, 682, 742, 743, 744, 350, 352, 6, 
	372, 351, 351, 351, 733, 735, 678, 736, 
	731, 738, 745, 740, 741, 682, 372, 352, 
	6, 746, 351, 351, 351, 733, 734, 735, 
	678, 736, 737, 731, 738, 739, 740, 741, 
	682, 742, 747, 744, 746, 352, 6, 1, 
	1, 0
]

class << self
	attr_accessor :_querybuilder_trans_targs
	private :_querybuilder_trans_targs, :_querybuilder_trans_targs=
end
self._querybuilder_trans_targs = [
	1, 0, 2, 244, 2, 3, 0, 481, 
	5, 6, 7, 7, 8, 238, 8, 9, 
	482, 11, 12, 13, 14, 8, 15, 14, 
	15, 483, 17, 18, 19, 20, 21, 22, 
	23, 24, 25, 24, 25, 484, 24, 46, 
	27, 28, 29, 30, 31, 32, 33, 34, 
	35, 34, 35, 485, 34, 43, 37, 38, 
	486, 34, 36, 41, 40, 44, 45, 44, 
	45, 485, 34, 43, 47, 48, 47, 48, 
	484, 24, 46, 50, 51, 52, 482, 54, 
	55, 56, 57, 58, 59, 60, 58, 59, 
	60, 487, 61, 61, 62, 63, 488, 65, 
	66, 67, 68, 69, 70, 71, 72, 70, 
	71, 72, 489, 74, 75, 76, 77, 78, 
	79, 80, 81, 82, 81, 82, 490, 84, 
	86, 87, 88, 89, 90, 90, 91, 94, 
	100, 102, 105, 106, 109, 91, 92, 237, 
	491, 93, 104, 90, 91, 94, 100, 102, 
	105, 106, 109, 95, 96, 97, 99, 92, 
	98, 100, 92, 101, 102, 103, 492, 491, 
	93, 107, 104, 108, 491, 93, 104, 491, 
	93, 110, 104, 111, 112, 111, 112, 491, 
	93, 110, 104, 114, 115, 116, 116, 102, 
	117, 493, 119, 120, 492, 93, 104, 103, 
	122, 125, 126, 128, 129, 131, 134, 138, 
	132, 133, 135, 136, 137, 139, 140, 142, 
	143, 144, 144, 145, 146, 148, 150, 151, 
	152, 153, 155, 157, 156, 158, 159, 160, 
	161, 161, 162, 165, 171, 173, 176, 177, 
	180, 162, 163, 232, 494, 164, 175, 161, 
	162, 165, 171, 173, 176, 177, 180, 166, 
	167, 168, 170, 163, 169, 171, 163, 172, 
	173, 174, 495, 494, 164, 178, 175, 179, 
	494, 164, 175, 494, 164, 181, 175, 182, 
	183, 182, 183, 494, 164, 181, 175, 185, 
	186, 187, 187, 173, 188, 496, 190, 191, 
	495, 164, 175, 174, 193, 196, 197, 199, 
	200, 202, 205, 209, 203, 204, 206, 207, 
	208, 210, 211, 213, 214, 215, 215, 216, 
	217, 219, 221, 222, 223, 224, 226, 227, 
	229, 234, 497, 241, 242, 243, 1, 2, 
	244, 498, 246, 247, 248, 481, 250, 251, 
	252, 253, 254, 254, 255, 258, 264, 266, 
	269, 270, 273, 255, 256, 325, 499, 257, 
	268, 254, 255, 258, 264, 266, 269, 270, 
	273, 259, 260, 261, 263, 256, 262, 264, 
	256, 265, 266, 267, 500, 499, 257, 271, 
	268, 272, 499, 257, 268, 499, 257, 274, 
	268, 275, 276, 275, 276, 499, 257, 274, 
	268, 278, 279, 280, 280, 266, 281, 501, 
	283, 284, 500, 257, 268, 267, 286, 289, 
	290, 292, 293, 295, 298, 302, 296, 297, 
	299, 300, 301, 303, 304, 306, 307, 308, 
	308, 309, 310, 312, 314, 315, 316, 317, 
	319, 320, 322, 326, 327, 331, 337, 339, 
	343, 344, 347, 327, 328, 393, 329, 502, 
	330, 342, 351, 369, 354, 355, 372, 356, 
	375, 363, 368, 383, 388, 391, 326, 327, 
	331, 337, 339, 343, 344, 347, 332, 333, 
	334, 336, 328, 335, 337, 328, 338, 339, 
	340, 341, 359, 329, 502, 330, 345, 342, 
	346, 329, 502, 330, 342, 329, 502, 330, 
	348, 342, 349, 350, 349, 350, 329, 502, 
	330, 348, 342, 352, 353, 357, 358, 360, 
	361, 362, 364, 365, 366, 366, 367, 370, 
	371, 341, 502, 330, 342, 340, 373, 374, 
	376, 380, 377, 378, 379, 381, 382, 384, 
	385, 386, 387, 389, 390, 392, 394, 395, 
	402, 395, 396, 397, 503, 398, 399, 400, 
	401, 394, 395, 402, 403, 503, 403, 404, 
	408, 405, 406, 407, 397, 503, 409, 410, 
	411, 412, 413, 413, 414, 418, 424, 426, 
	430, 431, 434, 414, 415, 480, 416, 417, 
	429, 438, 456, 441, 442, 459, 443, 462, 
	450, 455, 470, 475, 478, 413, 414, 418, 
	424, 426, 430, 431, 434, 419, 420, 421, 
	423, 415, 422, 424, 415, 425, 426, 427, 
	428, 446, 416, 503, 417, 432, 429, 433, 
	416, 503, 417, 429, 416, 503, 417, 435, 
	429, 436, 437, 436, 437, 416, 503, 417, 
	435, 429, 439, 440, 444, 445, 447, 448, 
	449, 451, 452, 453, 453, 454, 457, 458, 
	428, 503, 417, 429, 427, 460, 461, 463, 
	467, 464, 465, 466, 468, 469, 471, 472, 
	473, 474, 476, 477, 479, 4, 240, 16, 
	53, 83, 73, 10, 483, 49, 85, 484, 
	26, 485, 39, 42, 486, 487, 64, 488, 
	489, 490, 113, 118, 121, 123, 124, 127, 
	130, 141, 147, 149, 236, 233, 235, 493, 
	154, 184, 189, 192, 194, 195, 198, 201, 
	212, 218, 220, 231, 228, 230, 496, 225, 
	497, 239, 498, 245, 249, 277, 282, 285, 
	287, 288, 291, 294, 305, 311, 313, 324, 
	321, 323, 501, 318
]

class << self
	attr_accessor :_querybuilder_trans_actions
	private :_querybuilder_trans_actions, :_querybuilder_trans_actions=
end
self._querybuilder_trans_actions = [
	0, 0, 33, 1, 0, 0, 55, 0, 
	1, 1, 53, 0, 33, 1, 0, 0, 
	0, 0, 0, 0, 51, 150, 147, 0, 
	1, 21, 0, 0, 0, 0, 0, 0, 
	0, 49, 144, 0, 1, 13, 13, 13, 
	0, 0, 0, 0, 0, 0, 0, 47, 
	141, 0, 1, 13, 13, 13, 1, 1, 
	19, 19, 1, 1, 1, 17, 96, 0, 
	1, 15, 15, 15, 17, 96, 0, 1, 
	15, 15, 15, 0, 0, 1, 37, 0, 
	0, 0, 0, 45, 138, 138, 0, 1, 
	1, 9, 9, 0, 1, 1, 9, 0, 
	0, 0, 0, 0, 39, 132, 132, 0, 
	1, 1, 9, 0, 0, 0, 0, 0, 
	0, 0, 43, 135, 0, 1, 41, 1, 
	0, 0, 0, 0, 27, 0, 0, 0, 
	0, 29, 1, 1, 1, 1, 5, 0, 
	0, 1, 1, 23, 23, 23, 23, 108, 
	105, 105, 105, 0, 1, 1, 0, 7, 
	1, 1, 3, 0, 0, 0, 0, 9, 
	57, 1, 57, 1, 11, 66, 66, 13, 
	75, 13, 75, 17, 96, 0, 1, 15, 
	87, 15, 87, 1, 1, 153, 0, 126, 
	1, 99, 1, 1, 25, 114, 114, 25, 
	1, 1, 1, 1, 1, 1, 1, 1, 
	1, 1, 1, 1, 1, 1, 1, 1, 
	1, 23, 0, 1, 1, 1, 1, 1, 
	1, 1, 1, 0, 1, 0, 0, 0, 
	27, 0, 0, 0, 0, 29, 1, 1, 
	1, 1, 5, 0, 0, 1, 1, 23, 
	23, 23, 23, 108, 105, 105, 105, 0, 
	1, 1, 0, 7, 1, 1, 3, 0, 
	0, 0, 0, 9, 57, 1, 57, 1, 
	11, 66, 66, 13, 75, 13, 75, 17, 
	96, 0, 1, 15, 87, 15, 87, 1, 
	1, 153, 0, 123, 1, 99, 1, 1, 
	25, 114, 114, 25, 1, 1, 1, 1, 
	1, 1, 1, 1, 1, 1, 1, 1, 
	1, 1, 1, 1, 1, 23, 0, 1, 
	1, 1, 1, 1, 1, 1, 1, 1, 
	1, 1, 21, 0, 0, 0, 51, 150, 
	147, 21, 0, 0, 1, 37, 0, 0, 
	0, 0, 27, 0, 0, 0, 0, 29, 
	1, 1, 1, 1, 5, 0, 0, 1, 
	1, 23, 23, 23, 23, 108, 105, 105, 
	105, 0, 1, 1, 0, 7, 1, 1, 
	3, 0, 0, 0, 0, 9, 57, 1, 
	57, 1, 11, 66, 66, 13, 75, 13, 
	75, 17, 96, 0, 1, 15, 87, 15, 
	87, 1, 1, 111, 0, 123, 1, 78, 
	1, 1, 25, 114, 114, 25, 1, 1, 
	1, 1, 1, 1, 1, 1, 1, 1, 
	1, 1, 1, 1, 1, 1, 1, 23, 
	0, 1, 1, 1, 1, 1, 1, 1, 
	1, 1, 1, 0, 0, 0, 0, 29, 
	1, 1, 1, 1, 5, 0, 0, 31, 
	1, 1, 1, 1, 1, 1, 1, 1, 
	1, 1, 1, 1, 1, 1, 23, 23, 
	23, 23, 108, 105, 105, 105, 0, 1, 
	1, 0, 7, 1, 1, 3, 0, 0, 
	0, 0, 1, 9, 60, 57, 1, 57, 
	1, 11, 69, 66, 66, 13, 81, 75, 
	13, 75, 17, 96, 0, 1, 15, 90, 
	87, 15, 87, 1, 1, 1, 1, 1, 
	1, 1, 1, 1, 23, 0, 1, 1, 
	1, 25, 117, 114, 114, 25, 1, 1, 
	1, 1, 1, 1, 1, 1, 1, 1, 
	1, 1, 1, 1, 1, 1, 0, 33, 
	1, 0, 0, 0, 35, 0, 0, 0, 
	0, 51, 150, 147, 21, 102, 0, 0, 
	0, 0, 0, 1, 37, 129, 0, 0, 
	0, 0, 27, 0, 0, 0, 0, 29, 
	1, 1, 1, 1, 5, 0, 0, 1, 
	1, 1, 1, 1, 1, 1, 1, 1, 
	1, 1, 1, 1, 1, 23, 23, 23, 
	23, 108, 105, 105, 105, 0, 1, 1, 
	0, 7, 1, 1, 3, 0, 0, 0, 
	0, 1, 9, 63, 57, 1, 57, 1, 
	11, 72, 66, 66, 13, 84, 75, 13, 
	75, 17, 96, 0, 1, 15, 93, 87, 
	15, 87, 1, 1, 1, 1, 1, 1, 
	1, 1, 1, 23, 0, 1, 1, 1, 
	25, 120, 114, 114, 25, 1, 1, 1, 
	1, 1, 1, 1, 1, 1, 1, 1, 
	1, 1, 1, 1, 1, 1, 0, 0, 
	0, 1, 0, 0, 0, 0, 0, 0, 
	0, 0, 1, 1, 0, 0, 0, 0, 
	0, 0, 1, 1, 1, 1, 1, 1, 
	1, 1, 1, 1, 1, 1, 1, 0, 
	1, 1, 1, 1, 1, 1, 1, 1, 
	1, 1, 1, 1, 1, 1, 0, 1, 
	0, 0, 0, 0, 0, 1, 1, 1, 
	1, 1, 1, 1, 1, 1, 1, 1, 
	1, 1, 0, 1
]

class << self
	attr_accessor :_querybuilder_eof_actions
	private :_querybuilder_eof_actions, :_querybuilder_eof_actions=
end
self._querybuilder_eof_actions = [
	0, 0, 0, 55, 0, 0, 0, 0, 
	0, 55, 0, 0, 0, 0, 0, 55, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 55, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 55, 0, 0, 55, 0, 
	0, 0, 0, 0, 0, 55, 0, 0, 
	55, 0, 0, 0, 55, 0, 0, 0, 
	0, 0, 0, 0, 55, 0, 0, 55, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	55, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 55, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 55, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 55, 
	0, 0, 55, 0, 55, 55, 0, 0, 
	55, 0, 0, 0, 0, 55, 0, 0, 
	55, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 55, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 55, 0, 
	0, 55, 0, 55, 55, 0, 0, 55, 
	0, 0, 0, 0, 55, 0, 0, 55, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 55, 0, 
	0, 0, 0, 0, 55, 0, 0, 0, 
	55, 0, 0, 0, 0, 0, 0, 0, 
	55, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 55, 0, 0, 55, 0, 
	55, 55, 0, 0, 55, 0, 0, 0, 
	0, 55, 0, 0, 55, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0
]

class << self
	attr_accessor :querybuilder_start
end
self.querybuilder_start = 1;
class << self
	attr_accessor :querybuilder_first_final
end
self.querybuilder_first_final = 481;
class << self
	attr_accessor :querybuilder_error
end
self.querybuilder_error = 0;

class << self
	attr_accessor :querybuilder_en_expr_p
end
self.querybuilder_en_expr_p = 326;
class << self
	attr_accessor :querybuilder_en_clause_p
end
self.querybuilder_en_clause_p = 394;
class << self
	attr_accessor :querybuilder_en_main
end
self.querybuilder_en_main = 1;


# line 181 "querybuilder_rb.rl"

    def self.parse(arg)
      if arg.kind_of?(Array)
        data = "(#{arg.join(') or (')})\n"
      else
        data = "#{arg}\n"
      end
      stack = [[:query]]
      last  = stack.last
      str_buf         = ""
      clause_state = :relation
      eof = 0;
      
# line 1164 "querybuilder_rb.rb"
begin
	p ||= 0
	pe ||= data.length
	cs = querybuilder_start
end

# line 194 "querybuilder_rb.rl"
      
# line 1173 "querybuilder_rb.rb"
begin
	_klen, _trans, _keys, _acts, _nacts = nil
	_goto_level = 0
	_resume = 10
	_eof_trans = 15
	_again = 20
	_test_eof = 30
	_out = 40
	while true
	_trigger_goto = false
	if _goto_level <= 0
	if p == pe
		_goto_level = _test_eof
		next
	end
	if cs == 0
		_goto_level = _out
		next
	end
	end
	if _goto_level <= _resume
	_keys = _querybuilder_key_offsets[cs]
	_trans = _querybuilder_index_offsets[cs]
	_klen = _querybuilder_single_lengths[cs]
	_break_match = false
	
	begin
	  if _klen > 0
	     _lower = _keys
	     _upper = _keys + _klen - 1

	     loop do
	        break if _upper < _lower
	        _mid = _lower + ( (_upper - _lower) >> 1 )

	        if data[p] < _querybuilder_trans_keys[_mid]
	           _upper = _mid - 1
	        elsif data[p] > _querybuilder_trans_keys[_mid]
	           _lower = _mid + 1
	        else
	           _trans += (_mid - _keys)
	           _break_match = true
	           break
	        end
	     end # loop
	     break if _break_match
	     _keys += _klen
	     _trans += _klen
	  end
	  _klen = _querybuilder_range_lengths[cs]
	  if _klen > 0
	     _lower = _keys
	     _upper = _keys + (_klen << 1) - 2
	     loop do
	        break if _upper < _lower
	        _mid = _lower + (((_upper-_lower) >> 1) & ~1)
	        if data[p] < _querybuilder_trans_keys[_mid]
	          _upper = _mid - 2
	        elsif data[p] > _querybuilder_trans_keys[_mid+1]
	          _lower = _mid + 2
	        else
	          _trans += ((_mid - _keys) >> 1)
	          _break_match = true
	          break
	        end
	     end # loop
	     break if _break_match
	     _trans += _klen
	  end
	end while false
	_trans = _querybuilder_indicies[_trans]
	cs = _querybuilder_trans_targs[_trans]
	if _querybuilder_trans_actions[_trans] != 0
		_acts = _querybuilder_trans_actions[_trans]
		_nacts = _querybuilder_actions[_acts]
		_acts += 1
		while _nacts > 0
			_nacts -= 1
			_acts += 1
			case _querybuilder_actions[_acts - 1]
when 0 then
# line 6 "querybuilder_rb.rl"
		begin

      str_buf += data[p].chr
    		end
when 1 then
# line 10 "querybuilder_rb.rl"
		begin

      last << [:string, str_buf]
      str_buf = ""
    		end
when 2 then
# line 15 "querybuilder_rb.rl"
		begin

      last << [:dstring, str_buf]
      str_buf = ""
    		end
when 3 then
# line 20 "querybuilder_rb.rl"
		begin

      last << [:rubyless, str_buf]
      str_buf = ""
    		end
when 4 then
# line 25 "querybuilder_rb.rl"
		begin

      last << [:integer, str_buf]
      str_buf = ""
    		end
when 5 then
# line 30 "querybuilder_rb.rl"
		begin

      last << [:real, str_buf]
      str_buf = ""
    		end
when 6 then
# line 35 "querybuilder_rb.rl"
		begin

      last << [:field, str_buf]
      str_buf = ""
    		end
when 7 then
# line 40 "querybuilder_rb.rl"
		begin

      last << [:method, str_buf]
      str_buf = ""
    		end
when 8 then
# line 45 "querybuilder_rb.rl"
		begin

      last = apply_op(stack, :function)
      str_buf = ""
    		end
when 9 then
# line 50 "querybuilder_rb.rl"
		begin

      last = apply_op(stack, str_buf.downcase.to_sym, false)
      str_buf = ""
    		end
when 10 then
# line 55 "querybuilder_rb.rl"
		begin

      if clause_state == :relation || clause_state == :parenthesis
        last = insert(stack, [:relation, str_buf])
        str_buf = ""
      end
    		end
when 11 then
# line 62 "querybuilder_rb.rl"
		begin

      last = apply_op(stack, str_buf.downcase.to_sym)
      str_buf = ""
    		end
when 12 then
# line 67 "querybuilder_rb.rl"
		begin

      last = apply_op(stack, :interval)
      last << str_buf
      str_buf = ""
    		end
when 13 then
# line 73 "querybuilder_rb.rl"
		begin

      last = apply_op(stack, :filter)
      clause_state = :filter
    		end
when 14 then
# line 78 "querybuilder_rb.rl"
		begin

      # remember current machine state 'cs'
      last << [:par, cs]
      stack.push last.last
      last = last.last
      	begin
		cs = 326
		_trigger_goto = true
		_goto_level = _again
		break
	end

    		end
when 15 then
# line 86 "querybuilder_rb.rl"
		begin

      pop_stack(stack, :par_close)
      # reset machine state 'cs'
      cs = stack.last.delete_at(1)
      # one more time to remove [:par...] line
      stack.pop
      last = stack.last
      # closing ')' must be parsed twice
      p = p - 1;
    		end
when 16 then
# line 97 "querybuilder_rb.rl"
		begin

      # remember current machine state 'cs'
      clause_state = :parenthesis
      last << [:clause_par, cs]
      stack.push last.last
      last = last.last
      	begin
		cs = 394
		_trigger_goto = true
		_goto_level = _again
		break
	end

    		end
when 17 then
# line 106 "querybuilder_rb.rl"
		begin

      pop_stack(stack, :clause_par_close)
      clause_state = :relation
      # reset machine state 'cs'
      cs = stack.last.delete_at(1)
      # one more time to remove [:clause_par...] line
      stack.pop
      last = stack.last
      # closing ')' must be parsed twice
      p = p - 1;
    		end
when 18 then
# line 118 "querybuilder_rb.rl"
		begin

      last = apply_op(stack, :scope)
      last << str_buf
      str_buf = ""
    		end
when 19 then
# line 124 "querybuilder_rb.rl"
		begin

      last = apply_op(stack, :offset)
    		end
when 20 then
# line 128 "querybuilder_rb.rl"
		begin

      last << [:param, str_buf]
      str_buf = ""
    		end
when 21 then
# line 133 "querybuilder_rb.rl"
		begin

      last = apply_op(stack, :paginate)
    		end
when 22 then
# line 137 "querybuilder_rb.rl"
		begin

      last = apply_op(stack, :limit)
      str_buf = ""
    		end
when 23 then
# line 142 "querybuilder_rb.rl"
		begin

      last = apply_op(stack, :order)
      str_buf = ""
    		end
when 24 then
# line 147 "querybuilder_rb.rl"
		begin

      last = apply_op(stack, :group)
    		end
when 25 then
# line 151 "querybuilder_rb.rl"
		begin

      last = apply_op(stack, :from)
      clause_state = :relation
    		end
when 26 then
# line 156 "querybuilder_rb.rl"
		begin

      if clause_state == :relation
        last = apply_op(stack, "clause_#{str_buf}".to_sym)
        str_buf = ""
      end
    		end
when 27 then
# line 167 "querybuilder_rb.rl"
		begin

      p = p - 3
      p = 0 if p < 0
      raise QueryBuilder::SyntaxError.new("Syntax error near #{data[p..-1].chomp.inspect}.")
    		end
# line 1485 "querybuilder_rb.rb"
			end # action switch
		end
	end
	if _trigger_goto
		next
	end
	end
	if _goto_level <= _again
	if cs == 0
		_goto_level = _out
		next
	end
	p += 1
	if p != pe
		_goto_level = _resume
		next
	end
	end
	if _goto_level <= _test_eof
	if p == eof
	__acts = _querybuilder_eof_actions[cs]
	__nacts =  _querybuilder_actions[__acts]
	__acts += 1
	while __nacts > 0
		__nacts -= 1
		__acts += 1
		case _querybuilder_actions[__acts - 1]
when 27 then
# line 167 "querybuilder_rb.rl"
		begin

      p = p - 3
      p = 0 if p < 0
      raise QueryBuilder::SyntaxError.new("Syntax error near #{data[p..-1].chomp.inspect}.")
    		end
# line 1521 "querybuilder_rb.rb"
		end # eof action switch
	end
	if _trigger_goto
		next
	end
end
	end
	if _goto_level <= _out
		break
	end
	end
	end

# line 195 "querybuilder_rb.rl"

      if p < pe
        p = p - 3
        p = 0 if p < 0
        raise QueryBuilder::SyntaxError.new("Syntax error near #{data[p..-1].chomp.inspect}.")
      end
      stack.first
    end
  end
end
