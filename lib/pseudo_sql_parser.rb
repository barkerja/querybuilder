# line 1 "lib/pseudo_sql_parser.rl"
=begin
"letters where foo > 5 from managers in site limit 5 group by section_id"
==>
[:group,
  [:limit,
    [:from,
      [:filter,
        [:relation,
          "letters"
        ],
        [:>,
          "foo",
          "5"
        ]
      ]
      [:relation,
        [:scope,
          "managers",
          "site"
        ]
      ]
    ],
    "5"
  ],
  "section_id"
]
=end
class PseudoSQLParser
  # http://dev.mysql.com/doc/refman/5.1/en/operator-precedence.html
  OP_PRECEDENCE = {
    "INTERVAL" => 40,
    "BINARY"   => 39, "COLLATE"  => 39,
    "!" => 38,
    "@-" => 37, "@~" => 37,
    "^" => 36,
    "*" => 35, "/" => 35, "DIV" => 35, "%" => 35, "MOD" => 35,
    "-" => 34, "+" => 34,
    "<<" => 33, ">>" => 33,
    "&" => 32,
    "|" => 31,
    "=" => 30, "<=>" => 30, ">=" => 30, ">" => 30, "<=" => 30, "<" => 30, "<>" => 30, "!=" => 30, "IS" => 30, "LIKE" => 30, "REGEXP" => 30, "IN" => 30,
    "BETWEEN" => 29, "CASE" => 29, "WHEN" => 29, "THEN" => 29, "ELSE" => 29,
    "NOT" => 28,
    "&&" => 27, "AND" => 27,
    "XOR" => 26,
    "||" => 25, "OR" => 25,
    ":=" => 24,
    "SCOPE" => 14,
    "RELATION" => 13, "FILTER" => 13,
    "FROM" => 11,
    "ASC"  => 10, "DESC" => 10,
    "OFFSET" => 9, "PAGINATE" => 9, "LIMIT" => 9, "ORDER" => 9, "GROUP" => 9,
    "QUERY" => 8,
  }
  # group < from < filter < relation < scope

  # simple_state_machine.rl
  # line 186 "lib/pseudo_sql_parser.rl"


  
# line 64 "lib/pseudo_sql_parser.rb"
class << self
	attr_accessor :_pseudo_sql_actions
	private :_pseudo_sql_actions, :_pseudo_sql_actions=
end
self._pseudo_sql_actions = [
	0, 1, 0, 1, 1, 1, 2, 1, 
	3, 1, 4, 1, 5, 1, 6, 1, 
	7, 1, 8, 1, 9, 1, 10, 1, 
	11, 1, 12, 1, 13, 1, 14, 1, 
	15, 1, 16, 1, 17, 1, 18, 2, 
	0, 4, 2, 1, 0, 2, 2, 0, 
	2, 3, 0, 2, 4, 0, 2, 4, 
	9, 2, 6, 0, 2, 8, 0, 2, 
	9, 0, 2, 15, 0, 2, 16, 0, 
	2, 17, 0, 3, 4, 9, 0
]

class << self
	attr_accessor :_pseudo_sql_key_offsets
	private :_pseudo_sql_key_offsets, :_pseudo_sql_key_offsets=
end
self._pseudo_sql_key_offsets = [
	0, 0, 8, 16, 26, 27, 28, 29, 
	37, 38, 39, 40, 41, 44, 48, 49, 
	57, 65, 72, 73, 76, 84, 92, 100, 
	101, 102, 103, 104, 107, 112, 113, 114, 
	115, 116, 119, 123, 124, 132, 140, 149, 
	157, 158, 159, 163, 167, 168, 169, 170, 
	171, 173, 174, 175, 176, 177, 180, 187, 
	188, 189, 190, 191, 192, 193, 194, 197, 
	203, 204, 205, 206, 207, 210, 223, 225, 
	233, 242, 255, 268, 270, 284, 299, 313, 
	326, 328, 333, 344, 357, 370, 372, 383, 
	400, 401, 402, 407, 408, 409, 410, 412, 
	413, 414, 415, 416, 417, 418, 419, 420, 
	421, 422, 423, 424, 425, 426, 427, 428, 
	429, 429, 431, 431, 433, 447, 449, 462, 
	478, 495, 511, 528, 546, 563, 580, 597, 
	614, 631, 648, 664, 681, 698, 715, 732, 
	748, 765, 782, 799, 816, 833, 850, 867, 
	883, 900, 917, 934, 934, 936, 936, 938, 
	946, 948, 955, 965, 978, 979, 980, 988, 
	989, 990, 991, 992, 993, 994, 997, 1010, 
	1012, 1013, 1014, 1015, 1016, 1017, 1018, 1019, 
	1020, 1021, 1022, 1023, 1024, 1025, 1026, 1027, 
	1028, 1029, 1029, 1031, 1031, 1033, 1050, 1052, 
	1068, 1087, 1107, 1126, 1146, 1167, 1187, 1207, 
	1227, 1247, 1267, 1287, 1306, 1326, 1346, 1366, 
	1386, 1405, 1425, 1445, 1465, 1485, 1505, 1525, 
	1545, 1564, 1584, 1604, 1624, 1624, 1626, 1626, 
	1628, 1639, 1641, 1651, 1664, 1664, 1668, 1676, 
	1681, 1687, 1694, 1702, 1713, 1730
]

class << self
	attr_accessor :_pseudo_sql_trans_keys
	private :_pseudo_sql_trans_keys, :_pseudo_sql_trans_keys=
end
self._pseudo_sql_trans_keys = [
	32, 95, 9, 10, 65, 90, 97, 122, 
	9, 10, 32, 95, 65, 90, 97, 122, 
	32, 102, 103, 105, 108, 111, 112, 119, 
	9, 10, 114, 111, 109, 32, 95, 9, 
	10, 65, 90, 97, 122, 114, 111, 117, 
	112, 32, 9, 10, 32, 98, 9, 10, 
	121, 32, 95, 9, 10, 65, 90, 97, 
	122, 32, 95, 9, 10, 65, 90, 97, 
	122, 10, 44, 95, 65, 90, 97, 122, 
	110, 32, 9, 10, 32, 95, 9, 10, 
	65, 90, 97, 122, 9, 10, 32, 95, 
	65, 90, 97, 122, 32, 102, 103, 108, 
	111, 112, 9, 10, 105, 109, 105, 116, 
	9, 10, 32, 32, 103, 111, 9, 10, 
	114, 100, 101, 114, 32, 9, 10, 32, 
	98, 9, 10, 121, 32, 95, 9, 10, 
	65, 90, 97, 122, 32, 95, 9, 10, 
	65, 90, 97, 122, 9, 10, 32, 44, 
	95, 65, 90, 97, 122, 32, 65, 68, 
	97, 100, 103, 9, 10, 83, 67, 9, 
	10, 32, 44, 32, 103, 9, 10, 69, 
	115, 99, 101, 102, 114, 102, 115, 101, 
	116, 9, 10, 32, 32, 103, 108, 111, 
	112, 9, 10, 97, 103, 105, 110, 97, 
	116, 101, 9, 10, 32, 32, 103, 108, 
	111, 9, 10, 104, 101, 114, 101, 32, 
	9, 10, 32, 34, 39, 45, 95, 9, 
	10, 48, 57, 65, 90, 97, 122, 34, 
	92, 32, 43, 45, 61, 9, 10, 60, 
	62, 32, 43, 45, 61, 108, 9, 10, 
	60, 62, 32, 34, 39, 45, 95, 9, 
	10, 48, 57, 65, 90, 97, 122, 32, 
	34, 39, 45, 95, 9, 10, 48, 57, 
	65, 90, 97, 122, 34, 92, 32, 43, 
	45, 61, 100, 104, 109, 115, 119, 121, 
	9, 10, 60, 62, 32, 43, 45, 61, 
	100, 104, 108, 109, 115, 119, 121, 9, 
	10, 60, 62, 32, 34, 39, 45, 61, 
	95, 9, 10, 48, 57, 65, 90, 97, 
	122, 32, 34, 39, 45, 95, 9, 10, 
	48, 57, 65, 90, 97, 122, 34, 92, 
	9, 10, 32, 43, 45, 32, 43, 45, 
	102, 103, 105, 108, 111, 112, 9, 10, 
	32, 34, 39, 45, 95, 9, 10, 48, 
	57, 65, 90, 97, 122, 32, 34, 39, 
	45, 95, 9, 10, 48, 57, 65, 90, 
	97, 122, 34, 92, 9, 10, 32, 43, 
	45, 100, 104, 109, 115, 119, 121, 32, 
	43, 45, 100, 102, 103, 104, 105, 108, 
	109, 111, 112, 115, 119, 121, 9, 10, 
	97, 121, 9, 10, 32, 43, 45, 111, 
	117, 114, 105, 111, 110, 117, 116, 101, 
	110, 116, 104, 101, 99, 111, 110, 100, 
	101, 101, 107, 101, 97, 39, 92, 48, 
	57, 9, 10, 32, 43, 45, 46, 100, 
	104, 109, 115, 119, 121, 48, 57, 48, 
	57, 9, 10, 32, 43, 45, 100, 104, 
	109, 115, 119, 121, 48, 57, 9, 10, 
	32, 43, 45, 95, 100, 104, 109, 115, 
	119, 121, 65, 90, 97, 122, 9, 10, 
	32, 43, 45, 95, 97, 100, 104, 109, 
	115, 119, 121, 65, 90, 98, 122, 9, 
	10, 32, 43, 45, 95, 100, 104, 109, 
	115, 119, 121, 65, 90, 97, 122, 9, 
	10, 32, 43, 45, 95, 100, 104, 109, 
	111, 115, 119, 121, 65, 90, 97, 122, 
	9, 10, 32, 43, 45, 95, 100, 104, 
	105, 109, 111, 115, 119, 121, 65, 90, 
	97, 122, 9, 10, 32, 43, 45, 95, 
	100, 104, 109, 110, 115, 119, 121, 65, 
	90, 97, 122, 9, 10, 32, 43, 45, 
	95, 100, 104, 109, 115, 117, 119, 121, 
	65, 90, 97, 122, 9, 10, 32, 43, 
	45, 95, 100, 101, 104, 109, 115, 119, 
	121, 65, 90, 97, 122, 9, 10, 32, 
	43, 45, 95, 99, 100, 104, 109, 115, 
	119, 121, 65, 90, 97, 122, 9, 10, 
	32, 43, 45, 95, 100, 104, 109, 111, 
	115, 119, 121, 65, 90, 97, 122, 9, 
	10, 32, 43, 45, 95, 100, 104, 109, 
	110, 115, 119, 121, 65, 90, 97, 122, 
	9, 10, 32, 43, 45, 95, 100, 104, 
	109, 115, 119, 121, 65, 90, 97, 122, 
	9, 10, 32, 43, 45, 95, 97, 100, 
	104, 109, 115, 119, 121, 65, 90, 98, 
	122, 9, 10, 32, 43, 45, 95, 100, 
	101, 104, 109, 115, 119, 121, 65, 90, 
	97, 122, 9, 10, 32, 43, 45, 95, 
	100, 101, 104, 109, 115, 119, 121, 65, 
	90, 97, 122, 9, 10, 32, 43, 45, 
	95, 100, 104, 107, 109, 115, 119, 121, 
	65, 90, 97, 122, 9, 10, 32, 43, 
	45, 95, 100, 104, 109, 115, 119, 121, 
	65, 90, 97, 122, 9, 10, 32, 43, 
	45, 95, 100, 101, 104, 109, 115, 119, 
	121, 65, 90, 97, 122, 9, 10, 32, 
	43, 45, 95, 97, 100, 104, 109, 115, 
	119, 121, 65, 90, 98, 122, 9, 10, 
	32, 43, 45, 95, 100, 104, 109, 114, 
	115, 119, 121, 65, 90, 97, 122, 9, 
	10, 32, 43, 45, 95, 100, 104, 109, 
	115, 116, 119, 121, 65, 90, 97, 122, 
	9, 10, 32, 43, 45, 95, 100, 101, 
	104, 109, 115, 119, 121, 65, 90, 97, 
	122, 9, 10, 32, 43, 45, 95, 100, 
	104, 109, 110, 115, 119, 121, 65, 90, 
	97, 122, 9, 10, 32, 43, 45, 95, 
	100, 104, 109, 115, 116, 119, 121, 65, 
	90, 97, 122, 9, 10, 32, 43, 45, 
	95, 100, 104, 109, 115, 119, 121, 65, 
	90, 97, 122, 9, 10, 32, 43, 45, 
	95, 100, 104, 109, 111, 115, 119, 121, 
	65, 90, 97, 122, 9, 10, 32, 43, 
	45, 95, 100, 104, 109, 115, 117, 119, 
	121, 65, 90, 97, 122, 9, 10, 32, 
	43, 45, 95, 100, 101, 104, 109, 115, 
	119, 121, 65, 90, 97, 122, 39, 92, 
	48, 57, 9, 10, 32, 43, 45, 46, 
	48, 57, 48, 57, 9, 10, 32, 43, 
	45, 48, 57, 9, 10, 32, 43, 45, 
	95, 65, 90, 97, 122, 32, 34, 39, 
	45, 95, 9, 10, 48, 57, 65, 90, 
	97, 122, 97, 121, 32, 43, 45, 61, 
	9, 10, 60, 62, 111, 117, 114, 105, 
	107, 101, 32, 9, 10, 32, 34, 39, 
	45, 95, 9, 10, 48, 57, 65, 90, 
	97, 122, 105, 111, 110, 117, 116, 101, 
	110, 116, 104, 101, 99, 111, 110, 100, 
	101, 101, 107, 101, 97, 39, 92, 48, 
	57, 32, 43, 45, 46, 61, 100, 104, 
	109, 115, 119, 121, 9, 10, 48, 57, 
	60, 62, 48, 57, 32, 43, 45, 61, 
	100, 104, 109, 115, 119, 121, 9, 10, 
	48, 57, 60, 62, 32, 43, 45, 61, 
	95, 100, 104, 109, 115, 119, 121, 9, 
	10, 60, 62, 65, 90, 97, 122, 32, 
	43, 45, 61, 95, 97, 100, 104, 109, 
	115, 119, 121, 9, 10, 60, 62, 65, 
	90, 98, 122, 32, 43, 45, 61, 95, 
	100, 104, 109, 115, 119, 121, 9, 10, 
	60, 62, 65, 90, 97, 122, 32, 43, 
	45, 61, 95, 100, 104, 109, 111, 115, 
	119, 121, 9, 10, 60, 62, 65, 90, 
	97, 122, 32, 43, 45, 61, 95, 100, 
	104, 105, 109, 111, 115, 119, 121, 9, 
	10, 60, 62, 65, 90, 97, 122, 32, 
	43, 45, 61, 95, 100, 104, 109, 110, 
	115, 119, 121, 9, 10, 60, 62, 65, 
	90, 97, 122, 32, 43, 45, 61, 95, 
	100, 104, 109, 115, 117, 119, 121, 9, 
	10, 60, 62, 65, 90, 97, 122, 32, 
	43, 45, 61, 95, 100, 101, 104, 109, 
	115, 119, 121, 9, 10, 60, 62, 65, 
	90, 97, 122, 32, 43, 45, 61, 95, 
	99, 100, 104, 109, 115, 119, 121, 9, 
	10, 60, 62, 65, 90, 97, 122, 32, 
	43, 45, 61, 95, 100, 104, 109, 111, 
	115, 119, 121, 9, 10, 60, 62, 65, 
	90, 97, 122, 32, 43, 45, 61, 95, 
	100, 104, 109, 110, 115, 119, 121, 9, 
	10, 60, 62, 65, 90, 97, 122, 32, 
	43, 45, 61, 95, 100, 104, 109, 115, 
	119, 121, 9, 10, 60, 62, 65, 90, 
	97, 122, 32, 43, 45, 61, 95, 97, 
	100, 104, 109, 115, 119, 121, 9, 10, 
	60, 62, 65, 90, 98, 122, 32, 43, 
	45, 61, 95, 100, 101, 104, 109, 115, 
	119, 121, 9, 10, 60, 62, 65, 90, 
	97, 122, 32, 43, 45, 61, 95, 100, 
	101, 104, 109, 115, 119, 121, 9, 10, 
	60, 62, 65, 90, 97, 122, 32, 43, 
	45, 61, 95, 100, 104, 107, 109, 115, 
	119, 121, 9, 10, 60, 62, 65, 90, 
	97, 122, 32, 43, 45, 61, 95, 100, 
	104, 109, 115, 119, 121, 9, 10, 60, 
	62, 65, 90, 97, 122, 32, 43, 45, 
	61, 95, 100, 101, 104, 109, 115, 119, 
	121, 9, 10, 60, 62, 65, 90, 97, 
	122, 32, 43, 45, 61, 95, 97, 100, 
	104, 109, 115, 119, 121, 9, 10, 60, 
	62, 65, 90, 98, 122, 32, 43, 45, 
	61, 95, 100, 104, 109, 114, 115, 119, 
	121, 9, 10, 60, 62, 65, 90, 97, 
	122, 32, 43, 45, 61, 95, 100, 104, 
	109, 115, 116, 119, 121, 9, 10, 60, 
	62, 65, 90, 97, 122, 32, 43, 45, 
	61, 95, 100, 101, 104, 109, 115, 119, 
	121, 9, 10, 60, 62, 65, 90, 97, 
	122, 32, 43, 45, 61, 95, 100, 104, 
	109, 110, 115, 119, 121, 9, 10, 60, 
	62, 65, 90, 97, 122, 32, 43, 45, 
	61, 95, 100, 104, 109, 115, 116, 119, 
	121, 9, 10, 60, 62, 65, 90, 97, 
	122, 32, 43, 45, 61, 95, 100, 104, 
	109, 115, 119, 121, 9, 10, 60, 62, 
	65, 90, 97, 122, 32, 43, 45, 61, 
	95, 100, 104, 109, 111, 115, 119, 121, 
	9, 10, 60, 62, 65, 90, 97, 122, 
	32, 43, 45, 61, 95, 100, 104, 109, 
	115, 117, 119, 121, 9, 10, 60, 62, 
	65, 90, 97, 122, 32, 43, 45, 61, 
	95, 100, 101, 104, 109, 115, 119, 121, 
	9, 10, 60, 62, 65, 90, 97, 122, 
	39, 92, 48, 57, 32, 43, 45, 46, 
	61, 9, 10, 48, 57, 60, 62, 48, 
	57, 32, 43, 45, 61, 9, 10, 48, 
	57, 60, 62, 32, 43, 45, 61, 95, 
	9, 10, 60, 62, 65, 90, 97, 122, 
	32, 103, 9, 10, 32, 65, 68, 97, 
	100, 103, 9, 10, 32, 103, 111, 9, 
	10, 32, 103, 108, 111, 9, 10, 32, 
	103, 108, 111, 112, 9, 10, 32, 102, 
	103, 108, 111, 112, 9, 10, 32, 43, 
	45, 102, 103, 105, 108, 111, 112, 9, 
	10, 32, 43, 45, 100, 102, 103, 104, 
	105, 108, 109, 111, 112, 115, 119, 121, 
	9, 10, 32, 102, 103, 105, 108, 111, 
	112, 119, 9, 10, 0
]

class << self
	attr_accessor :_pseudo_sql_single_lengths
	private :_pseudo_sql_single_lengths, :_pseudo_sql_single_lengths=
end
self._pseudo_sql_single_lengths = [
	0, 2, 4, 8, 1, 1, 1, 2, 
	1, 1, 1, 1, 1, 2, 1, 2, 
	2, 3, 1, 1, 2, 4, 6, 1, 
	1, 1, 1, 3, 3, 1, 1, 1, 
	1, 1, 2, 1, 2, 2, 5, 6, 
	1, 1, 4, 2, 1, 1, 1, 1, 
	2, 1, 1, 1, 1, 3, 5, 1, 
	1, 1, 1, 1, 1, 1, 3, 4, 
	1, 1, 1, 1, 1, 5, 2, 4, 
	5, 5, 5, 2, 10, 11, 6, 5, 
	2, 5, 9, 5, 5, 2, 11, 15, 
	1, 1, 5, 1, 1, 1, 2, 1, 
	1, 1, 1, 1, 1, 1, 1, 1, 
	1, 1, 1, 1, 1, 1, 1, 1, 
	0, 2, 0, 0, 12, 0, 11, 12, 
	13, 12, 13, 14, 13, 13, 13, 13, 
	13, 13, 12, 13, 13, 13, 13, 12, 
	13, 13, 13, 13, 13, 13, 13, 12, 
	13, 13, 13, 0, 2, 0, 0, 6, 
	0, 5, 6, 5, 1, 1, 4, 1, 
	1, 1, 1, 1, 1, 1, 5, 2, 
	1, 1, 1, 1, 1, 1, 1, 1, 
	1, 1, 1, 1, 1, 1, 1, 1, 
	1, 0, 2, 0, 0, 11, 0, 10, 
	11, 12, 11, 12, 13, 12, 12, 12, 
	12, 12, 12, 11, 12, 12, 12, 12, 
	11, 12, 12, 12, 12, 12, 12, 12, 
	11, 12, 12, 12, 0, 2, 0, 0, 
	5, 0, 4, 5, 0, 2, 6, 3, 
	4, 5, 6, 9, 15, 8
]

class << self
	attr_accessor :_pseudo_sql_range_lengths
	private :_pseudo_sql_range_lengths, :_pseudo_sql_range_lengths=
end
self._pseudo_sql_range_lengths = [
	0, 3, 2, 1, 0, 0, 0, 3, 
	0, 0, 0, 0, 1, 1, 0, 3, 
	3, 2, 0, 1, 3, 2, 1, 0, 
	0, 0, 0, 0, 1, 0, 0, 0, 
	0, 1, 1, 0, 3, 3, 2, 1, 
	0, 0, 0, 1, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 1, 0, 
	0, 0, 0, 0, 0, 0, 0, 1, 
	0, 0, 0, 0, 1, 4, 0, 2, 
	2, 4, 4, 0, 2, 2, 4, 4, 
	0, 0, 1, 4, 4, 0, 0, 1, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 1, 1, 1, 1, 2, 
	2, 2, 2, 2, 2, 2, 2, 2, 
	2, 2, 2, 2, 2, 2, 2, 2, 
	2, 2, 2, 2, 2, 2, 2, 2, 
	2, 2, 2, 0, 0, 0, 1, 1, 
	1, 1, 2, 4, 0, 0, 2, 0, 
	0, 0, 0, 0, 0, 1, 4, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 1, 3, 1, 3, 
	4, 4, 4, 4, 4, 4, 4, 4, 
	4, 4, 4, 4, 4, 4, 4, 4, 
	4, 4, 4, 4, 4, 4, 4, 4, 
	4, 4, 4, 4, 0, 0, 0, 1, 
	3, 1, 3, 4, 0, 1, 1, 1, 
	1, 1, 1, 1, 1, 1
]

class << self
	attr_accessor :_pseudo_sql_index_offsets
	private :_pseudo_sql_index_offsets, :_pseudo_sql_index_offsets=
end
self._pseudo_sql_index_offsets = [
	0, 0, 6, 13, 23, 25, 27, 29, 
	35, 37, 39, 41, 43, 46, 50, 52, 
	58, 64, 70, 72, 75, 81, 88, 96, 
	98, 100, 102, 104, 108, 113, 115, 117, 
	119, 121, 124, 128, 130, 136, 142, 150, 
	158, 160, 162, 167, 171, 173, 175, 177, 
	179, 182, 184, 186, 188, 190, 194, 201, 
	203, 205, 207, 209, 211, 213, 215, 219, 
	225, 227, 229, 231, 233, 236, 246, 249, 
	256, 264, 274, 284, 287, 300, 314, 325, 
	335, 338, 344, 355, 365, 375, 378, 390, 
	407, 409, 411, 417, 419, 421, 423, 426, 
	428, 430, 432, 434, 436, 438, 440, 442, 
	444, 446, 448, 450, 452, 454, 456, 458, 
	460, 461, 464, 465, 467, 481, 483, 496, 
	511, 527, 542, 558, 575, 591, 607, 623, 
	639, 655, 671, 686, 702, 718, 734, 750, 
	765, 781, 797, 813, 829, 845, 861, 877, 
	892, 908, 924, 940, 941, 944, 945, 947, 
	955, 957, 964, 973, 983, 985, 987, 994, 
	996, 998, 1000, 1002, 1004, 1006, 1009, 1019, 
	1022, 1024, 1026, 1028, 1030, 1032, 1034, 1036, 
	1038, 1040, 1042, 1044, 1046, 1048, 1050, 1052, 
	1054, 1056, 1057, 1060, 1061, 1063, 1078, 1080, 
	1094, 1110, 1127, 1143, 1160, 1178, 1195, 1212, 
	1229, 1246, 1263, 1280, 1296, 1313, 1330, 1347, 
	1364, 1380, 1397, 1414, 1431, 1448, 1465, 1482, 
	1499, 1515, 1532, 1549, 1566, 1567, 1570, 1571, 
	1573, 1582, 1584, 1592, 1602, 1603, 1607, 1615, 
	1620, 1626, 1633, 1641, 1652, 1669
]

class << self
	attr_accessor :_pseudo_sql_trans_targs
	private :_pseudo_sql_trans_targs, :_pseudo_sql_trans_targs=
end
self._pseudo_sql_trans_targs = [
	1, 2, 1, 2, 2, 0, 3, 237, 
	3, 2, 2, 2, 0, 3, 4, 8, 
	18, 23, 48, 55, 64, 3, 0, 5, 
	0, 6, 0, 7, 0, 1, 2, 1, 
	2, 2, 0, 9, 0, 10, 0, 11, 
	0, 12, 0, 13, 13, 0, 13, 14, 
	13, 0, 15, 0, 16, 17, 16, 17, 
	17, 0, 16, 17, 16, 17, 17, 0, 
	228, 16, 17, 17, 17, 0, 19, 0, 
	20, 20, 0, 20, 21, 20, 21, 21, 
	0, 22, 234, 22, 21, 21, 21, 0, 
	22, 4, 8, 23, 48, 55, 22, 0, 
	24, 0, 25, 0, 26, 0, 27, 0, 
	28, 231, 28, 0, 28, 8, 29, 28, 
	0, 30, 0, 31, 0, 32, 0, 33, 
	0, 34, 34, 0, 34, 35, 34, 0, 
	36, 0, 37, 38, 37, 38, 38, 0, 
	37, 38, 37, 38, 38, 0, 39, 230, 
	39, 37, 38, 38, 38, 0, 39, 40, 
	44, 45, 47, 8, 39, 0, 41, 0, 
	42, 0, 43, 229, 43, 37, 0, 43, 
	8, 43, 0, 40, 0, 46, 0, 42, 
	0, 45, 0, 49, 30, 0, 50, 0, 
	51, 0, 52, 0, 53, 0, 54, 233, 
	54, 0, 54, 8, 23, 29, 55, 54, 
	0, 56, 0, 57, 0, 58, 0, 59, 
	0, 60, 0, 61, 0, 62, 0, 63, 
	232, 63, 0, 63, 8, 23, 29, 63, 
	0, 65, 0, 66, 0, 67, 0, 68, 
	0, 69, 69, 0, 69, 70, 221, 223, 
	227, 69, 224, 227, 227, 0, 71, 220, 
	70, 72, 73, 73, 155, 72, 78, 0, 
	72, 73, 73, 155, 162, 72, 78, 0, 
	74, 75, 186, 188, 192, 74, 189, 192, 
	192, 0, 74, 75, 186, 188, 192, 74, 
	189, 192, 192, 0, 76, 185, 75, 77, 
	73, 73, 155, 156, 159, 167, 175, 180, 
	183, 77, 78, 0, 77, 73, 73, 155, 
	156, 159, 162, 167, 175, 180, 183, 77, 
	78, 0, 79, 80, 148, 150, 155, 154, 
	79, 151, 154, 154, 0, 79, 80, 148, 
	150, 154, 79, 151, 154, 154, 0, 81, 
	147, 80, 82, 235, 82, 83, 83, 0, 
	82, 83, 83, 4, 8, 18, 23, 48, 
	55, 82, 0, 84, 85, 113, 115, 119, 
	84, 116, 119, 119, 0, 84, 85, 113, 
	115, 119, 84, 116, 119, 119, 0, 86, 
	112, 85, 87, 236, 87, 83, 83, 88, 
	91, 94, 102, 107, 110, 0, 87, 83, 
	83, 88, 4, 8, 91, 18, 23, 94, 
	48, 55, 102, 107, 110, 87, 0, 89, 
	0, 90, 0, 82, 235, 82, 83, 83, 
	0, 92, 0, 93, 0, 90, 0, 95, 
	99, 0, 96, 0, 97, 0, 98, 0, 
	90, 0, 100, 0, 101, 0, 90, 0, 
	103, 0, 104, 0, 105, 0, 106, 0, 
	90, 0, 108, 0, 109, 0, 90, 0, 
	111, 0, 93, 0, 85, 86, 114, 113, 
	113, 116, 0, 87, 236, 87, 83, 83, 
	117, 88, 91, 94, 102, 107, 110, 116, 
	0, 118, 0, 87, 236, 87, 83, 83, 
	88, 91, 94, 102, 107, 110, 118, 0, 
	87, 236, 87, 83, 83, 119, 120, 122, 
	123, 126, 132, 136, 119, 119, 0, 87, 
	236, 87, 83, 83, 119, 121, 120, 122, 
	123, 126, 132, 136, 119, 119, 0, 87, 
	236, 87, 83, 83, 119, 120, 122, 123, 
	126, 132, 146, 119, 119, 0, 87, 236, 
	87, 83, 83, 119, 120, 122, 123, 145, 
	126, 132, 136, 119, 119, 0, 87, 236, 
	87, 83, 83, 119, 120, 122, 124, 123, 
	141, 126, 132, 136, 119, 119, 0, 87, 
	236, 87, 83, 83, 119, 120, 122, 123, 
	125, 126, 132, 136, 119, 119, 0, 87, 
	236, 87, 83, 83, 119, 120, 122, 123, 
	126, 139, 132, 136, 119, 119, 0, 87, 
	236, 87, 83, 83, 119, 120, 127, 122, 
	123, 126, 132, 136, 119, 119, 0, 87, 
	236, 87, 83, 83, 119, 128, 120, 122, 
	123, 126, 132, 136, 119, 119, 0, 87, 
	236, 87, 83, 83, 119, 120, 122, 123, 
	129, 126, 132, 136, 119, 119, 0, 87, 
	236, 87, 83, 83, 119, 120, 122, 123, 
	130, 126, 132, 136, 119, 119, 0, 87, 
	236, 87, 83, 83, 119, 131, 122, 123, 
	126, 132, 136, 119, 119, 0, 87, 236, 
	87, 83, 83, 119, 121, 120, 122, 123, 
	126, 132, 136, 119, 119, 0, 87, 236, 
	87, 83, 83, 119, 120, 133, 122, 123, 
	126, 132, 136, 119, 119, 0, 87, 236, 
	87, 83, 83, 119, 120, 134, 122, 123, 
	126, 132, 136, 119, 119, 0, 87, 236, 
	87, 83, 83, 119, 120, 122, 135, 123, 
	126, 132, 136, 119, 119, 0, 87, 236, 
	87, 83, 83, 119, 120, 122, 123, 126, 
	132, 136, 119, 119, 0, 87, 236, 87, 
	83, 83, 119, 120, 137, 122, 123, 126, 
	132, 136, 119, 119, 0, 87, 236, 87, 
	83, 83, 119, 138, 120, 122, 123, 126, 
	132, 136, 119, 119, 0, 87, 236, 87, 
	83, 83, 119, 120, 122, 123, 135, 126, 
	132, 136, 119, 119, 0, 87, 236, 87, 
	83, 83, 119, 120, 122, 123, 126, 140, 
	132, 136, 119, 119, 0, 87, 236, 87, 
	83, 83, 119, 120, 135, 122, 123, 126, 
	132, 136, 119, 119, 0, 87, 236, 87, 
	83, 83, 119, 120, 122, 123, 142, 126, 
	132, 136, 119, 119, 0, 87, 236, 87, 
	83, 83, 119, 120, 122, 123, 126, 143, 
	132, 136, 119, 119, 0, 87, 236, 87, 
	83, 83, 119, 120, 144, 123, 126, 132, 
	136, 119, 119, 0, 87, 236, 87, 83, 
	83, 119, 120, 122, 123, 145, 126, 132, 
	136, 119, 119, 0, 87, 236, 87, 83, 
	83, 119, 120, 122, 123, 126, 138, 132, 
	136, 119, 119, 0, 87, 236, 87, 83, 
	83, 119, 120, 137, 122, 123, 126, 132, 
	136, 119, 119, 0, 80, 81, 149, 148, 
	148, 151, 0, 82, 235, 82, 83, 83, 
	152, 151, 0, 153, 0, 82, 235, 82, 
	83, 83, 153, 0, 82, 235, 82, 83, 
	83, 154, 154, 154, 0, 79, 80, 148, 
	150, 154, 79, 151, 154, 154, 0, 157, 
	0, 158, 0, 72, 73, 73, 155, 72, 
	78, 0, 160, 0, 161, 0, 158, 0, 
	163, 0, 164, 0, 165, 0, 166, 166, 
	0, 166, 80, 148, 150, 154, 166, 151, 
	154, 154, 0, 168, 172, 0, 169, 0, 
	170, 0, 171, 0, 158, 0, 173, 0, 
	174, 0, 158, 0, 176, 0, 177, 0, 
	178, 0, 179, 0, 158, 0, 181, 0, 
	182, 0, 158, 0, 184, 0, 161, 0, 
	75, 76, 187, 186, 186, 189, 0, 77, 
	73, 73, 190, 155, 156, 159, 167, 175, 
	180, 183, 77, 189, 78, 0, 191, 0, 
	77, 73, 73, 155, 156, 159, 167, 175, 
	180, 183, 77, 191, 78, 0, 77, 73, 
	73, 155, 192, 193, 195, 196, 199, 205, 
	209, 77, 78, 192, 192, 0, 77, 73, 
	73, 155, 192, 194, 193, 195, 196, 199, 
	205, 209, 77, 78, 192, 192, 0, 77, 
	73, 73, 155, 192, 193, 195, 196, 199, 
	205, 219, 77, 78, 192, 192, 0, 77, 
	73, 73, 155, 192, 193, 195, 196, 218, 
	199, 205, 209, 77, 78, 192, 192, 0, 
	77, 73, 73, 155, 192, 193, 195, 197, 
	196, 214, 199, 205, 209, 77, 78, 192, 
	192, 0, 77, 73, 73, 155, 192, 193, 
	195, 196, 198, 199, 205, 209, 77, 78, 
	192, 192, 0, 77, 73, 73, 155, 192, 
	193, 195, 196, 199, 212, 205, 209, 77, 
	78, 192, 192, 0, 77, 73, 73, 155, 
	192, 193, 200, 195, 196, 199, 205, 209, 
	77, 78, 192, 192, 0, 77, 73, 73, 
	155, 192, 201, 193, 195, 196, 199, 205, 
	209, 77, 78, 192, 192, 0, 77, 73, 
	73, 155, 192, 193, 195, 196, 202, 199, 
	205, 209, 77, 78, 192, 192, 0, 77, 
	73, 73, 155, 192, 193, 195, 196, 203, 
	199, 205, 209, 77, 78, 192, 192, 0, 
	77, 73, 73, 155, 192, 204, 195, 196, 
	199, 205, 209, 77, 78, 192, 192, 0, 
	77, 73, 73, 155, 192, 194, 193, 195, 
	196, 199, 205, 209, 77, 78, 192, 192, 
	0, 77, 73, 73, 155, 192, 193, 206, 
	195, 196, 199, 205, 209, 77, 78, 192, 
	192, 0, 77, 73, 73, 155, 192, 193, 
	207, 195, 196, 199, 205, 209, 77, 78, 
	192, 192, 0, 77, 73, 73, 155, 192, 
	193, 195, 208, 196, 199, 205, 209, 77, 
	78, 192, 192, 0, 77, 73, 73, 155, 
	192, 193, 195, 196, 199, 205, 209, 77, 
	78, 192, 192, 0, 77, 73, 73, 155, 
	192, 193, 210, 195, 196, 199, 205, 209, 
	77, 78, 192, 192, 0, 77, 73, 73, 
	155, 192, 211, 193, 195, 196, 199, 205, 
	209, 77, 78, 192, 192, 0, 77, 73, 
	73, 155, 192, 193, 195, 196, 208, 199, 
	205, 209, 77, 78, 192, 192, 0, 77, 
	73, 73, 155, 192, 193, 195, 196, 199, 
	213, 205, 209, 77, 78, 192, 192, 0, 
	77, 73, 73, 155, 192, 193, 208, 195, 
	196, 199, 205, 209, 77, 78, 192, 192, 
	0, 77, 73, 73, 155, 192, 193, 195, 
	196, 215, 199, 205, 209, 77, 78, 192, 
	192, 0, 77, 73, 73, 155, 192, 193, 
	195, 196, 199, 216, 205, 209, 77, 78, 
	192, 192, 0, 77, 73, 73, 155, 192, 
	193, 217, 196, 199, 205, 209, 77, 78, 
	192, 192, 0, 77, 73, 73, 155, 192, 
	193, 195, 196, 218, 199, 205, 209, 77, 
	78, 192, 192, 0, 77, 73, 73, 155, 
	192, 193, 195, 196, 199, 211, 205, 209, 
	77, 78, 192, 192, 0, 77, 73, 73, 
	155, 192, 193, 210, 195, 196, 199, 205, 
	209, 77, 78, 192, 192, 0, 70, 71, 
	222, 221, 221, 224, 0, 72, 73, 73, 
	225, 155, 72, 224, 78, 0, 226, 0, 
	72, 73, 73, 155, 72, 226, 78, 0, 
	72, 73, 73, 155, 227, 72, 78, 227, 
	227, 0, 0, 43, 8, 43, 0, 39, 
	40, 44, 45, 47, 8, 39, 0, 28, 
	8, 29, 28, 0, 63, 8, 23, 29, 
	63, 0, 54, 8, 23, 29, 55, 54, 
	0, 22, 4, 8, 23, 48, 55, 22, 
	0, 82, 83, 83, 4, 8, 18, 23, 
	48, 55, 82, 0, 87, 83, 83, 88, 
	4, 8, 91, 18, 23, 94, 48, 55, 
	102, 107, 110, 87, 0, 3, 4, 8, 
	18, 23, 48, 55, 64, 3, 0, 0
]

class << self
	attr_accessor :_pseudo_sql_trans_actions
	private :_pseudo_sql_trans_actions, :_pseudo_sql_trans_actions=
end
self._pseudo_sql_trans_actions = [
	0, 1, 0, 1, 1, 0, 15, 15, 
	15, 1, 1, 1, 37, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 35, 72, 35, 
	72, 72, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 33, 69, 33, 69, 
	69, 0, 0, 1, 0, 1, 1, 0, 
	9, 9, 1, 1, 1, 37, 0, 0, 
	0, 0, 0, 0, 1, 0, 1, 1, 
	0, 23, 23, 23, 1, 1, 1, 37, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	29, 29, 29, 37, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 31, 66, 31, 66, 66, 0, 
	0, 1, 0, 1, 1, 0, 9, 9, 
	9, 9, 1, 1, 1, 37, 0, 1, 
	1, 1, 1, 0, 0, 0, 1, 0, 
	1, 0, 11, 11, 11, 11, 37, 0, 
	0, 0, 0, 1, 0, 1, 0, 1, 
	0, 1, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 25, 25, 
	25, 37, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 27, 
	27, 27, 37, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 21, 21, 0, 0, 0, 0, 1, 
	1, 0, 1, 1, 1, 0, 0, 0, 
	1, 3, 42, 42, 42, 3, 42, 0, 
	0, 1, 1, 1, 1, 0, 1, 0, 
	17, 17, 17, 60, 60, 17, 60, 60, 
	60, 0, 0, 0, 0, 1, 1, 0, 
	1, 1, 1, 0, 0, 0, 1, 3, 
	42, 42, 42, 3, 3, 3, 3, 3, 
	3, 3, 42, 0, 0, 1, 1, 1, 
	0, 0, 1, 0, 0, 0, 0, 0, 
	1, 0, 13, 13, 13, 57, 1, 57, 
	13, 57, 57, 57, 0, 0, 0, 0, 
	1, 1, 0, 1, 1, 1, 0, 0, 
	0, 1, 3, 3, 3, 42, 42, 37, 
	0, 1, 1, 0, 0, 0, 0, 0, 
	0, 0, 0, 17, 17, 17, 60, 60, 
	17, 60, 60, 60, 0, 0, 0, 0, 
	1, 1, 0, 1, 1, 1, 0, 0, 
	0, 1, 3, 3, 3, 42, 42, 3, 
	3, 3, 3, 3, 3, 37, 0, 1, 
	1, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 19, 19, 19, 63, 63, 
	37, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 1, 0, 0, 1, 
	1, 1, 0, 5, 5, 5, 45, 45, 
	1, 5, 5, 5, 5, 5, 5, 1, 
	37, 1, 0, 7, 7, 7, 48, 48, 
	7, 7, 7, 7, 7, 7, 1, 37, 
	9, 9, 9, 51, 51, 1, 39, 39, 
	39, 39, 39, 39, 1, 1, 37, 9, 
	9, 9, 51, 51, 1, 1, 39, 39, 
	39, 39, 39, 39, 1, 1, 37, 9, 
	9, 9, 51, 51, 1, 39, 39, 39, 
	39, 39, 39, 1, 1, 37, 9, 9, 
	9, 51, 51, 1, 39, 39, 39, 1, 
	39, 39, 39, 1, 1, 37, 9, 9, 
	9, 51, 51, 1, 39, 39, 1, 39, 
	1, 39, 39, 39, 1, 1, 37, 9, 
	9, 9, 51, 51, 1, 39, 39, 39, 
	1, 39, 39, 39, 1, 1, 37, 9, 
	9, 9, 51, 51, 1, 39, 39, 39, 
	39, 1, 39, 39, 1, 1, 37, 9, 
	9, 9, 51, 51, 1, 39, 1, 39, 
	39, 39, 39, 39, 1, 1, 37, 9, 
	9, 9, 51, 51, 1, 1, 39, 39, 
	39, 39, 39, 39, 1, 1, 37, 9, 
	9, 9, 51, 51, 1, 39, 39, 39, 
	1, 39, 39, 39, 1, 1, 37, 9, 
	9, 9, 51, 51, 1, 39, 39, 39, 
	1, 39, 39, 39, 1, 1, 37, 9, 
	9, 9, 51, 51, 1, 39, 39, 39, 
	39, 39, 39, 1, 1, 37, 54, 54, 
	54, 75, 75, 1, 1, 39, 39, 39, 
	39, 39, 39, 1, 1, 37, 9, 9, 
	9, 51, 51, 1, 39, 1, 39, 39, 
	39, 39, 39, 1, 1, 37, 9, 9, 
	9, 51, 51, 1, 39, 1, 39, 39, 
	39, 39, 39, 1, 1, 37, 9, 9, 
	9, 51, 51, 1, 39, 39, 1, 39, 
	39, 39, 39, 1, 1, 37, 54, 54, 
	54, 75, 75, 1, 39, 39, 39, 39, 
	39, 39, 1, 1, 37, 9, 9, 9, 
	51, 51, 1, 39, 1, 39, 39, 39, 
	39, 39, 1, 1, 37, 9, 9, 9, 
	51, 51, 1, 1, 39, 39, 39, 39, 
	39, 39, 1, 1, 37, 9, 9, 9, 
	51, 51, 1, 39, 39, 39, 1, 39, 
	39, 39, 1, 1, 37, 9, 9, 9, 
	51, 51, 1, 39, 39, 39, 39, 1, 
	39, 39, 1, 1, 37, 9, 9, 9, 
	51, 51, 1, 39, 1, 39, 39, 39, 
	39, 39, 1, 1, 37, 9, 9, 9, 
	51, 51, 1, 39, 39, 39, 1, 39, 
	39, 39, 1, 1, 37, 9, 9, 9, 
	51, 51, 1, 39, 39, 39, 39, 1, 
	39, 39, 1, 1, 37, 9, 9, 9, 
	51, 51, 1, 39, 39, 39, 39, 39, 
	39, 1, 1, 37, 54, 54, 54, 75, 
	75, 1, 39, 39, 39, 1, 39, 39, 
	39, 1, 1, 37, 9, 9, 9, 51, 
	51, 1, 39, 39, 39, 39, 1, 39, 
	39, 1, 1, 37, 54, 54, 54, 75, 
	75, 1, 39, 1, 39, 39, 39, 39, 
	39, 1, 1, 37, 1, 0, 0, 1, 
	1, 1, 0, 5, 5, 5, 45, 45, 
	1, 1, 37, 1, 0, 7, 7, 7, 
	48, 48, 1, 37, 9, 9, 9, 51, 
	51, 1, 1, 1, 37, 13, 13, 13, 
	57, 57, 13, 57, 57, 57, 0, 0, 
	0, 0, 0, 19, 63, 63, 63, 19, 
	63, 0, 0, 0, 0, 0, 0, 0, 
	1, 0, 1, 0, 1, 0, 0, 0, 
	0, 13, 13, 13, 57, 57, 13, 57, 
	57, 57, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	1, 0, 0, 1, 1, 1, 0, 5, 
	45, 45, 1, 45, 5, 5, 5, 5, 
	5, 5, 5, 1, 45, 0, 1, 0, 
	7, 48, 48, 48, 7, 7, 7, 7, 
	7, 7, 7, 1, 48, 0, 9, 51, 
	51, 51, 1, 39, 39, 39, 39, 39, 
	39, 9, 51, 1, 1, 0, 9, 51, 
	51, 51, 1, 1, 39, 39, 39, 39, 
	39, 39, 9, 51, 1, 1, 0, 9, 
	51, 51, 51, 1, 39, 39, 39, 39, 
	39, 39, 9, 51, 1, 1, 0, 9, 
	51, 51, 51, 1, 39, 39, 39, 1, 
	39, 39, 39, 9, 51, 1, 1, 0, 
	9, 51, 51, 51, 1, 39, 39, 1, 
	39, 1, 39, 39, 39, 9, 51, 1, 
	1, 0, 9, 51, 51, 51, 1, 39, 
	39, 39, 1, 39, 39, 39, 9, 51, 
	1, 1, 0, 9, 51, 51, 51, 1, 
	39, 39, 39, 39, 1, 39, 39, 9, 
	51, 1, 1, 0, 9, 51, 51, 51, 
	1, 39, 1, 39, 39, 39, 39, 39, 
	9, 51, 1, 1, 0, 9, 51, 51, 
	51, 1, 1, 39, 39, 39, 39, 39, 
	39, 9, 51, 1, 1, 0, 9, 51, 
	51, 51, 1, 39, 39, 39, 1, 39, 
	39, 39, 9, 51, 1, 1, 0, 9, 
	51, 51, 51, 1, 39, 39, 39, 1, 
	39, 39, 39, 9, 51, 1, 1, 0, 
	9, 51, 51, 51, 1, 39, 39, 39, 
	39, 39, 39, 9, 51, 1, 1, 0, 
	54, 75, 75, 75, 1, 1, 39, 39, 
	39, 39, 39, 39, 54, 75, 1, 1, 
	0, 9, 51, 51, 51, 1, 39, 1, 
	39, 39, 39, 39, 39, 9, 51, 1, 
	1, 0, 9, 51, 51, 51, 1, 39, 
	1, 39, 39, 39, 39, 39, 9, 51, 
	1, 1, 0, 9, 51, 51, 51, 1, 
	39, 39, 1, 39, 39, 39, 39, 9, 
	51, 1, 1, 0, 54, 75, 75, 75, 
	1, 39, 39, 39, 39, 39, 39, 54, 
	75, 1, 1, 0, 9, 51, 51, 51, 
	1, 39, 1, 39, 39, 39, 39, 39, 
	9, 51, 1, 1, 0, 9, 51, 51, 
	51, 1, 1, 39, 39, 39, 39, 39, 
	39, 9, 51, 1, 1, 0, 9, 51, 
	51, 51, 1, 39, 39, 39, 1, 39, 
	39, 39, 9, 51, 1, 1, 0, 9, 
	51, 51, 51, 1, 39, 39, 39, 39, 
	1, 39, 39, 9, 51, 1, 1, 0, 
	9, 51, 51, 51, 1, 39, 1, 39, 
	39, 39, 39, 39, 9, 51, 1, 1, 
	0, 9, 51, 51, 51, 1, 39, 39, 
	39, 1, 39, 39, 39, 9, 51, 1, 
	1, 0, 9, 51, 51, 51, 1, 39, 
	39, 39, 39, 1, 39, 39, 9, 51, 
	1, 1, 0, 9, 51, 51, 51, 1, 
	39, 39, 39, 39, 39, 39, 9, 51, 
	1, 1, 0, 54, 75, 75, 75, 1, 
	39, 39, 39, 1, 39, 39, 39, 54, 
	75, 1, 1, 0, 9, 51, 51, 51, 
	1, 39, 39, 39, 39, 1, 39, 39, 
	9, 51, 1, 1, 0, 54, 75, 75, 
	75, 1, 39, 1, 39, 39, 39, 39, 
	39, 54, 75, 1, 1, 0, 1, 0, 
	0, 1, 1, 1, 0, 5, 45, 45, 
	1, 45, 5, 1, 45, 0, 1, 0, 
	7, 48, 48, 48, 7, 1, 48, 0, 
	9, 51, 51, 51, 1, 9, 51, 1, 
	1, 0, 37, 0, 0, 0, 37, 0, 
	1, 1, 1, 1, 0, 0, 37, 0, 
	0, 0, 0, 37, 0, 0, 0, 0, 
	0, 37, 0, 0, 0, 0, 0, 0, 
	37, 0, 0, 0, 0, 0, 0, 0, 
	37, 0, 1, 1, 0, 0, 0, 0, 
	0, 0, 0, 37, 0, 1, 1, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 37, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 37, 0
]

class << self
	attr_accessor :_pseudo_sql_eof_actions
	private :_pseudo_sql_eof_actions, :_pseudo_sql_eof_actions=
end
self._pseudo_sql_eof_actions = [
	0, 0, 37, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 37, 0, 0, 0, 37, 0, 0, 
	0, 0, 0, 37, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 37, 0, 
	0, 0, 37, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 37, 0, 0, 
	0, 0, 0, 0, 0, 0, 37, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 37, 0, 0, 0, 0, 37, 0, 
	0, 0, 37, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 37, 0, 37, 37, 
	37, 37, 37, 37, 37, 37, 37, 37, 
	37, 37, 37, 37, 37, 37, 37, 37, 
	37, 37, 37, 37, 37, 37, 37, 37, 
	37, 37, 37, 0, 0, 0, 0, 37, 
	0, 37, 37, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0
]

class << self
	attr_accessor :pseudo_sql_start
end
self.pseudo_sql_start = 1;
class << self
	attr_accessor :pseudo_sql_first_final
end
self.pseudo_sql_first_final = 228;
class << self
	attr_accessor :pseudo_sql_error
end
self.pseudo_sql_error = 0;

class << self
	attr_accessor :pseudo_sql_en_main
end
self.pseudo_sql_en_main = 1;

# line 189 "lib/pseudo_sql_parser.rl"

  def self.parse(string)
    data = "#{string}\n"
    stack = [[:query]]
    last  = stack.last
    str_buf    = ""
    eof = 0;
    
# line 953 "lib/pseudo_sql_parser.rb"
begin
	p ||= 0
	pe ||= data.length
	cs = pseudo_sql_start
end
# line 197 "lib/pseudo_sql_parser.rl"
    
# line 961 "lib/pseudo_sql_parser.rb"
begin
	_klen, _trans, _keys, _acts, _nacts = nil
	_goto_level = 0
	_resume = 10
	_eof_trans = 15
	_again = 20
	_test_eof = 30
	_out = 40
	while true
	_trigger_goto = false
	if _goto_level <= 0
	if p == pe
		_goto_level = _test_eof
		next
	end
	if cs == 0
		_goto_level = _out
		next
	end
	end
	if _goto_level <= _resume
	_keys = _pseudo_sql_key_offsets[cs]
	_trans = _pseudo_sql_index_offsets[cs]
	_klen = _pseudo_sql_single_lengths[cs]
	_break_match = false
	
	begin
	  if _klen > 0
	     _lower = _keys
	     _upper = _keys + _klen - 1

	     loop do
	        break if _upper < _lower
	        _mid = _lower + ( (_upper - _lower) >> 1 )

	        if data[p] < _pseudo_sql_trans_keys[_mid]
	           _upper = _mid - 1
	        elsif data[p] > _pseudo_sql_trans_keys[_mid]
	           _lower = _mid + 1
	        else
	           _trans += (_mid - _keys)
	           _break_match = true
	           break
	        end
	     end # loop
	     break if _break_match
	     _keys += _klen
	     _trans += _klen
	  end
	  _klen = _pseudo_sql_range_lengths[cs]
	  if _klen > 0
	     _lower = _keys
	     _upper = _keys + (_klen << 1) - 2
	     loop do
	        break if _upper < _lower
	        _mid = _lower + (((_upper-_lower) >> 1) & ~1)
	        if data[p] < _pseudo_sql_trans_keys[_mid]
	          _upper = _mid - 2
	        elsif data[p] > _pseudo_sql_trans_keys[_mid+1]
	          _lower = _mid + 2
	        else
	          _trans += ((_mid - _keys) >> 1)
	          _break_match = true
	          break
	        end
	     end # loop
	     break if _break_match
	     _trans += _klen
	  end
	end while false
	cs = _pseudo_sql_trans_targs[_trans]
	if _pseudo_sql_trans_actions[_trans] != 0
		_acts = _pseudo_sql_trans_actions[_trans]
		_nacts = _pseudo_sql_actions[_acts]
		_acts += 1
		while _nacts > 0
			_nacts -= 1
			_acts += 1
			case _pseudo_sql_actions[_acts - 1]
when 0 then
# line 61 "lib/pseudo_sql_parser.rl"
		begin

      str_buf += data[p].chr
    		end
# line 61 "lib/pseudo_sql_parser.rl"
when 1 then
# line 65 "lib/pseudo_sql_parser.rl"
		begin

      last << [:string, str_buf]
      str_buf = ""
    		end
# line 65 "lib/pseudo_sql_parser.rl"
when 2 then
# line 70 "lib/pseudo_sql_parser.rl"
		begin

      last << [:integer, str_buf]
      str_buf = ""
    		end
# line 70 "lib/pseudo_sql_parser.rl"
when 3 then
# line 75 "lib/pseudo_sql_parser.rl"
		begin

      last << [:real, str_buf]
      str_buf = ""
    		end
# line 75 "lib/pseudo_sql_parser.rl"
when 4 then
# line 80 "lib/pseudo_sql_parser.rl"
		begin

      last << [:field, str_buf]
      str_buf = ""
    		end
# line 80 "lib/pseudo_sql_parser.rl"
when 5 then
# line 85 "lib/pseudo_sql_parser.rl"
		begin

      last = apply_op(stack, str_buf.downcase.to_sym, false)
      str_buf = ""
    		end
# line 85 "lib/pseudo_sql_parser.rl"
when 6 then
# line 90 "lib/pseudo_sql_parser.rl"
		begin

      last = apply_op(stack, str_buf.to_sym)
      str_buf = ""
    		end
# line 90 "lib/pseudo_sql_parser.rl"
when 7 then
# line 95 "lib/pseudo_sql_parser.rl"
		begin

      # stack: [[:query]]  --> [[:query, [:relation, "..."]], [:relation, "..."]]
      last << [:relation, str_buf]
      stack.push last.last
      last = stack.last
      str_buf = ""
    		end
# line 95 "lib/pseudo_sql_parser.rl"
when 8 then
# line 103 "lib/pseudo_sql_parser.rl"
		begin

      last = apply_op(stack, str_buf.to_sym)
      str_buf = ""
    		end
# line 103 "lib/pseudo_sql_parser.rl"
when 9 then
# line 108 "lib/pseudo_sql_parser.rl"
		begin

      last = apply_op(stack, :interval)
      last << str_buf
      str_buf = ""
    		end
# line 108 "lib/pseudo_sql_parser.rl"
when 10 then
# line 114 "lib/pseudo_sql_parser.rl"
		begin

      last = apply_op(stack, :filter)
    		end
# line 114 "lib/pseudo_sql_parser.rl"
when 11 then
# line 118 "lib/pseudo_sql_parser.rl"
		begin

      last = apply_op(stack, :scope)
      last << str_buf
      str_buf = ""
    		end
# line 118 "lib/pseudo_sql_parser.rl"
when 12 then
# line 124 "lib/pseudo_sql_parser.rl"
		begin

      last = apply_op(stack, :offset)
    		end
# line 124 "lib/pseudo_sql_parser.rl"
when 13 then
# line 128 "lib/pseudo_sql_parser.rl"
		begin

      last = apply_op(stack, :paginate)
    		end
# line 128 "lib/pseudo_sql_parser.rl"
when 14 then
# line 132 "lib/pseudo_sql_parser.rl"
		begin

      last = apply_op(stack, :limit)
    		end
# line 132 "lib/pseudo_sql_parser.rl"
when 15 then
# line 136 "lib/pseudo_sql_parser.rl"
		begin

      last = apply_op(stack, :order)
    		end
# line 136 "lib/pseudo_sql_parser.rl"
when 16 then
# line 140 "lib/pseudo_sql_parser.rl"
		begin

      last = apply_op(stack, :group)
    		end
# line 140 "lib/pseudo_sql_parser.rl"
when 17 then
# line 144 "lib/pseudo_sql_parser.rl"
		begin

      last = apply_op(stack, :from)
    		end
# line 144 "lib/pseudo_sql_parser.rl"
when 18 then
# line 148 "lib/pseudo_sql_parser.rl"
		begin

      p = p - 1;
      raise Exception.new("Syntax error near '#{data[p..-1]}'.")
    		end
# line 148 "lib/pseudo_sql_parser.rl"
# line 1190 "lib/pseudo_sql_parser.rb"
			end # action switch
		end
	end
	if _trigger_goto
		next
	end
	end
	if _goto_level <= _again
	if cs == 0
		_goto_level = _out
		next
	end
	p += 1
	if p != pe
		_goto_level = _resume
		next
	end
	end
	if _goto_level <= _test_eof
	if p == eof
	__acts = _pseudo_sql_eof_actions[cs]
	__nacts =  _pseudo_sql_actions[__acts]
	__acts += 1
	while __nacts > 0
		__nacts -= 1
		__acts += 1
		case _pseudo_sql_actions[__acts - 1]
when 18 then
# line 148 "lib/pseudo_sql_parser.rl"
		begin

      p = p - 1;
      raise Exception.new("Syntax error near '#{data[p..-1]}'.")
    		end
# line 148 "lib/pseudo_sql_parser.rl"
# line 1226 "lib/pseudo_sql_parser.rb"
		end # eof action switch
	end
	if _trigger_goto
		next
	end
end
	end
	if _goto_level <= _out
		break
	end
	end
	end
# line 198 "lib/pseudo_sql_parser.rl"
    stack.first
  end
  
  def self.apply_op(stack, op, change_last = true)
    pop_stack(stack, op)
    last = stack.last
    change_elem = last.last
    last[-1] = [op.to_sym, change_elem]
    if change_last
      stack.push last[-1]
    end
    stack.last
  end
  
  def self.insert(stack, op, var)
    pop_stack(stack, op)
    stack.last << [op.to_sym, var]
    if var.kind_of?(Array)
      stack.push var
    end
    stack.last
  end
  
  def self.pop_stack(stack, op)
    stack_op = stack.last.first
    while OP_PRECEDENCE[op.to_s.upcase] < OP_PRECEDENCE[stack_op.to_s.upcase]
      stack.pop
      stack_op = stack.last.first
    end
  end
end