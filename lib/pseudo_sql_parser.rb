# line 1 "lib/pseudo_sql_parser.rl"
=begin
"letters where foo > 5 from managers in site limit 5 group by section_id"
==>
[:group,
  [:limit,
    [:from,
      [:filter,
        [:relation,
          "letters"
        ],
        [:>,
          "foo",
          "5"
        ]
      ]
      [:relation,
        [:scope,
          "managers",
          "site"
        ]
      ]
    ],
    "5"
  ],
  "section_id"
]
=end
class PseudoSQLParser
  # http://dev.mysql.com/doc/refman/5.1/en/operator-precedence.html
  OP_PRECEDENCE = {
    "INTERVAL" => 40,
    "BINARY"   => 39, "COLLATE"  => 39,
    "!" => 38,
    "@-" => 37, "@~" => 37,
    "^" => 36,
    "*" => 35, "/" => 35, "DIV" => 35, "%" => 35, "MOD" => 35,
    "-" => 34, "+" => 34,
    "<<" => 33, ">>" => 33,
    "&" => 32,
    "|" => 31,
    "=" => 30, "<=>" => 30, ">=" => 30, ">" => 30, "<=" => 30, "<" => 30, "<>" => 30, "!=" => 30, "IS" => 30, "LIKE" => 30, "REGEXP" => 30, "IN" => 30,
    "BETWEEN" => 29, "CASE" => 29, "WHEN" => 29, "THEN" => 29, "ELSE" => 29,
    "NOT" => 28,
    "&&" => 27, "AND" => 27,
    "XOR" => 26,
    "||" => 25, "OR" => 25,
    ":=" => 24,
    "RELATION" => 13, "FILTER" => 13,
    "SCOPE" => 12,
    "FROM" => 11,
    "ASC"  => 10, "DESC" => 10,
    "CLAUSE" => 5,
    "CLAUSE_AND" => 4,
    "CLAUSE_OR" => 3,
    "OFFSET" => 2, "PAGINATE" => 2, "LIMIT" => 2, "ORDER" => 2, "GROUP" => 2,
    "QUERY" => 1,
  }
  # group < from < filter < relation < scope

  # simple_state_machine.rl
  # line 201 "lib/pseudo_sql_parser.rl"


  
# line 67 "lib/pseudo_sql_parser.rb"
class << self
	attr_accessor :_pseudo_sql_actions
	private :_pseudo_sql_actions, :_pseudo_sql_actions=
end
self._pseudo_sql_actions = [
	0, 1, 0, 1, 1, 1, 2, 1, 
	3, 1, 4, 1, 5, 1, 6, 1, 
	7, 1, 8, 1, 9, 1, 10, 1, 
	11, 1, 12, 1, 13, 1, 14, 1, 
	15, 1, 16, 1, 17, 1, 18, 1, 
	19, 1, 20, 2, 0, 4, 2, 1, 
	0, 2, 2, 0, 2, 3, 0, 2, 
	4, 0, 2, 4, 9, 2, 6, 0, 
	2, 8, 0, 2, 9, 0, 2, 12, 
	0, 2, 14, 0, 2, 15, 0, 2, 
	16, 0, 2, 17, 0, 2, 18, 0, 
	3, 4, 9, 0
]

class << self
	attr_accessor :_pseudo_sql_key_offsets
	private :_pseudo_sql_key_offsets, :_pseudo_sql_key_offsets=
end
self._pseudo_sql_key_offsets = [
	0, 0, 8, 16, 27, 28, 29, 32, 
	33, 34, 35, 43, 44, 45, 46, 47, 
	50, 54, 55, 63, 71, 80, 84, 85, 
	88, 96, 104, 113, 114, 115, 116, 117, 
	123, 129, 131, 137, 144, 150, 152, 157, 
	163, 165, 166, 167, 168, 169, 175, 181, 
	183, 188, 194, 195, 196, 197, 198, 201, 
	205, 206, 214, 222, 231, 240, 241, 242, 
	246, 251, 252, 253, 254, 255, 256, 257, 
	258, 259, 260, 261, 262, 270, 278, 286, 
	291, 293, 297, 298, 299, 300, 301, 304, 
	317, 319, 327, 336, 349, 362, 364, 378, 
	393, 407, 420, 422, 427, 439, 452, 465, 
	467, 478, 496, 497, 498, 503, 504, 505, 
	506, 508, 509, 510, 511, 512, 513, 514, 
	515, 516, 517, 518, 519, 520, 521, 522, 
	523, 524, 525, 525, 527, 527, 529, 543, 
	545, 558, 574, 591, 607, 624, 642, 659, 
	676, 693, 710, 727, 744, 760, 777, 794, 
	811, 828, 844, 861, 878, 895, 912, 929, 
	946, 963, 979, 996, 1013, 1030, 1030, 1032, 
	1032, 1034, 1042, 1044, 1051, 1061, 1074, 1075, 
	1076, 1084, 1085, 1086, 1087, 1088, 1089, 1090, 
	1093, 1106, 1108, 1109, 1110, 1111, 1112, 1113, 
	1114, 1115, 1116, 1117, 1118, 1119, 1120, 1121, 
	1122, 1123, 1124, 1125, 1125, 1127, 1127, 1129, 
	1146, 1148, 1164, 1183, 1203, 1222, 1242, 1263, 
	1283, 1303, 1323, 1343, 1363, 1383, 1402, 1422, 
	1442, 1462, 1482, 1501, 1521, 1541, 1561, 1581, 
	1601, 1621, 1641, 1660, 1680, 1700, 1720, 1720, 
	1722, 1722, 1724, 1735, 1737, 1747, 1760, 1764, 
	1769, 1778, 1783, 1789, 1795, 1802, 1811, 1823, 
	1841
]

class << self
	attr_accessor :_pseudo_sql_trans_keys
	private :_pseudo_sql_trans_keys, :_pseudo_sql_trans_keys=
end
self._pseudo_sql_trans_keys = [
	32, 95, 9, 10, 65, 90, 97, 122, 
	9, 10, 32, 95, 65, 90, 97, 122, 
	32, 97, 102, 103, 105, 108, 111, 112, 
	119, 9, 10, 110, 100, 32, 9, 10, 
	114, 111, 109, 32, 95, 9, 10, 65, 
	90, 97, 122, 114, 111, 117, 112, 32, 
	9, 10, 32, 98, 9, 10, 121, 32, 
	95, 9, 10, 65, 90, 97, 122, 32, 
	95, 9, 10, 65, 90, 97, 122, 9, 
	10, 32, 44, 95, 65, 90, 97, 122, 
	32, 44, 9, 10, 110, 32, 9, 10, 
	32, 95, 9, 10, 65, 90, 97, 122, 
	9, 10, 32, 95, 65, 90, 97, 122, 
	32, 97, 102, 103, 108, 111, 112, 9, 
	10, 105, 109, 105, 116, 32, 45, 9, 
	10, 48, 57, 32, 45, 9, 10, 48, 
	57, 48, 57, 9, 10, 32, 44, 48, 
	57, 32, 44, 103, 111, 112, 9, 10, 
	32, 45, 9, 10, 48, 57, 48, 57, 
	9, 10, 32, 48, 57, 32, 103, 111, 
	112, 9, 10, 102, 114, 102, 115, 101, 
	116, 32, 45, 9, 10, 48, 57, 32, 
	45, 9, 10, 48, 57, 48, 57, 9, 
	10, 32, 48, 57, 32, 103, 111, 112, 
	9, 10, 114, 100, 101, 114, 32, 9, 
	10, 32, 98, 9, 10, 121, 32, 95, 
	9, 10, 65, 90, 97, 122, 32, 95, 
	9, 10, 65, 90, 97, 122, 9, 10, 
	32, 44, 95, 65, 90, 97, 122, 32, 
	44, 65, 68, 97, 100, 103, 9, 10, 
	83, 67, 9, 10, 32, 44, 32, 44, 
	103, 9, 10, 69, 115, 99, 101, 97, 
	103, 105, 110, 97, 116, 101, 32, 95, 
	9, 10, 65, 90, 97, 122, 32, 95, 
	9, 10, 65, 90, 97, 122, 9, 10, 
	32, 95, 65, 90, 97, 122, 32, 103, 
	111, 9, 10, 102, 114, 32, 100, 9, 
	10, 104, 101, 114, 101, 32, 9, 10, 
	32, 34, 39, 45, 95, 9, 10, 48, 
	57, 65, 90, 97, 122, 34, 92, 32, 
	43, 45, 61, 9, 10, 60, 62, 32, 
	43, 45, 61, 108, 9, 10, 60, 62, 
	32, 34, 39, 45, 95, 9, 10, 48, 
	57, 65, 90, 97, 122, 32, 34, 39, 
	45, 95, 9, 10, 48, 57, 65, 90, 
	97, 122, 34, 92, 32, 43, 45, 61, 
	100, 104, 109, 115, 119, 121, 9, 10, 
	60, 62, 32, 43, 45, 61, 100, 104, 
	108, 109, 115, 119, 121, 9, 10, 60, 
	62, 32, 34, 39, 45, 61, 95, 9, 
	10, 48, 57, 65, 90, 97, 122, 32, 
	34, 39, 45, 95, 9, 10, 48, 57, 
	65, 90, 97, 122, 34, 92, 9, 10, 
	32, 43, 45, 32, 43, 45, 97, 102, 
	103, 105, 108, 111, 112, 9, 10, 32, 
	34, 39, 45, 95, 9, 10, 48, 57, 
	65, 90, 97, 122, 32, 34, 39, 45, 
	95, 9, 10, 48, 57, 65, 90, 97, 
	122, 34, 92, 9, 10, 32, 43, 45, 
	100, 104, 109, 115, 119, 121, 32, 43, 
	45, 97, 100, 102, 103, 104, 105, 108, 
	109, 111, 112, 115, 119, 121, 9, 10, 
	97, 121, 9, 10, 32, 43, 45, 111, 
	117, 114, 105, 111, 110, 117, 116, 101, 
	110, 116, 104, 101, 99, 111, 110, 100, 
	101, 101, 107, 101, 97, 39, 92, 48, 
	57, 9, 10, 32, 43, 45, 46, 100, 
	104, 109, 115, 119, 121, 48, 57, 48, 
	57, 9, 10, 32, 43, 45, 100, 104, 
	109, 115, 119, 121, 48, 57, 9, 10, 
	32, 43, 45, 95, 100, 104, 109, 115, 
	119, 121, 65, 90, 97, 122, 9, 10, 
	32, 43, 45, 95, 97, 100, 104, 109, 
	115, 119, 121, 65, 90, 98, 122, 9, 
	10, 32, 43, 45, 95, 100, 104, 109, 
	115, 119, 121, 65, 90, 97, 122, 9, 
	10, 32, 43, 45, 95, 100, 104, 109, 
	111, 115, 119, 121, 65, 90, 97, 122, 
	9, 10, 32, 43, 45, 95, 100, 104, 
	105, 109, 111, 115, 119, 121, 65, 90, 
	97, 122, 9, 10, 32, 43, 45, 95, 
	100, 104, 109, 110, 115, 119, 121, 65, 
	90, 97, 122, 9, 10, 32, 43, 45, 
	95, 100, 104, 109, 115, 117, 119, 121, 
	65, 90, 97, 122, 9, 10, 32, 43, 
	45, 95, 100, 101, 104, 109, 115, 119, 
	121, 65, 90, 97, 122, 9, 10, 32, 
	43, 45, 95, 99, 100, 104, 109, 115, 
	119, 121, 65, 90, 97, 122, 9, 10, 
	32, 43, 45, 95, 100, 104, 109, 111, 
	115, 119, 121, 65, 90, 97, 122, 9, 
	10, 32, 43, 45, 95, 100, 104, 109, 
	110, 115, 119, 121, 65, 90, 97, 122, 
	9, 10, 32, 43, 45, 95, 100, 104, 
	109, 115, 119, 121, 65, 90, 97, 122, 
	9, 10, 32, 43, 45, 95, 97, 100, 
	104, 109, 115, 119, 121, 65, 90, 98, 
	122, 9, 10, 32, 43, 45, 95, 100, 
	101, 104, 109, 115, 119, 121, 65, 90, 
	97, 122, 9, 10, 32, 43, 45, 95, 
	100, 101, 104, 109, 115, 119, 121, 65, 
	90, 97, 122, 9, 10, 32, 43, 45, 
	95, 100, 104, 107, 109, 115, 119, 121, 
	65, 90, 97, 122, 9, 10, 32, 43, 
	45, 95, 100, 104, 109, 115, 119, 121, 
	65, 90, 97, 122, 9, 10, 32, 43, 
	45, 95, 100, 101, 104, 109, 115, 119, 
	121, 65, 90, 97, 122, 9, 10, 32, 
	43, 45, 95, 97, 100, 104, 109, 115, 
	119, 121, 65, 90, 98, 122, 9, 10, 
	32, 43, 45, 95, 100, 104, 109, 114, 
	115, 119, 121, 65, 90, 97, 122, 9, 
	10, 32, 43, 45, 95, 100, 104, 109, 
	115, 116, 119, 121, 65, 90, 97, 122, 
	9, 10, 32, 43, 45, 95, 100, 101, 
	104, 109, 115, 119, 121, 65, 90, 97, 
	122, 9, 10, 32, 43, 45, 95, 100, 
	104, 109, 110, 115, 119, 121, 65, 90, 
	97, 122, 9, 10, 32, 43, 45, 95, 
	100, 104, 109, 115, 116, 119, 121, 65, 
	90, 97, 122, 9, 10, 32, 43, 45, 
	95, 100, 104, 109, 115, 119, 121, 65, 
	90, 97, 122, 9, 10, 32, 43, 45, 
	95, 100, 104, 109, 111, 115, 119, 121, 
	65, 90, 97, 122, 9, 10, 32, 43, 
	45, 95, 100, 104, 109, 115, 117, 119, 
	121, 65, 90, 97, 122, 9, 10, 32, 
	43, 45, 95, 100, 101, 104, 109, 115, 
	119, 121, 65, 90, 97, 122, 39, 92, 
	48, 57, 9, 10, 32, 43, 45, 46, 
	48, 57, 48, 57, 9, 10, 32, 43, 
	45, 48, 57, 9, 10, 32, 43, 45, 
	95, 65, 90, 97, 122, 32, 34, 39, 
	45, 95, 9, 10, 48, 57, 65, 90, 
	97, 122, 97, 121, 32, 43, 45, 61, 
	9, 10, 60, 62, 111, 117, 114, 105, 
	107, 101, 32, 9, 10, 32, 34, 39, 
	45, 95, 9, 10, 48, 57, 65, 90, 
	97, 122, 105, 111, 110, 117, 116, 101, 
	110, 116, 104, 101, 99, 111, 110, 100, 
	101, 101, 107, 101, 97, 39, 92, 48, 
	57, 32, 43, 45, 46, 61, 100, 104, 
	109, 115, 119, 121, 9, 10, 48, 57, 
	60, 62, 48, 57, 32, 43, 45, 61, 
	100, 104, 109, 115, 119, 121, 9, 10, 
	48, 57, 60, 62, 32, 43, 45, 61, 
	95, 100, 104, 109, 115, 119, 121, 9, 
	10, 60, 62, 65, 90, 97, 122, 32, 
	43, 45, 61, 95, 97, 100, 104, 109, 
	115, 119, 121, 9, 10, 60, 62, 65, 
	90, 98, 122, 32, 43, 45, 61, 95, 
	100, 104, 109, 115, 119, 121, 9, 10, 
	60, 62, 65, 90, 97, 122, 32, 43, 
	45, 61, 95, 100, 104, 109, 111, 115, 
	119, 121, 9, 10, 60, 62, 65, 90, 
	97, 122, 32, 43, 45, 61, 95, 100, 
	104, 105, 109, 111, 115, 119, 121, 9, 
	10, 60, 62, 65, 90, 97, 122, 32, 
	43, 45, 61, 95, 100, 104, 109, 110, 
	115, 119, 121, 9, 10, 60, 62, 65, 
	90, 97, 122, 32, 43, 45, 61, 95, 
	100, 104, 109, 115, 117, 119, 121, 9, 
	10, 60, 62, 65, 90, 97, 122, 32, 
	43, 45, 61, 95, 100, 101, 104, 109, 
	115, 119, 121, 9, 10, 60, 62, 65, 
	90, 97, 122, 32, 43, 45, 61, 95, 
	99, 100, 104, 109, 115, 119, 121, 9, 
	10, 60, 62, 65, 90, 97, 122, 32, 
	43, 45, 61, 95, 100, 104, 109, 111, 
	115, 119, 121, 9, 10, 60, 62, 65, 
	90, 97, 122, 32, 43, 45, 61, 95, 
	100, 104, 109, 110, 115, 119, 121, 9, 
	10, 60, 62, 65, 90, 97, 122, 32, 
	43, 45, 61, 95, 100, 104, 109, 115, 
	119, 121, 9, 10, 60, 62, 65, 90, 
	97, 122, 32, 43, 45, 61, 95, 97, 
	100, 104, 109, 115, 119, 121, 9, 10, 
	60, 62, 65, 90, 98, 122, 32, 43, 
	45, 61, 95, 100, 101, 104, 109, 115, 
	119, 121, 9, 10, 60, 62, 65, 90, 
	97, 122, 32, 43, 45, 61, 95, 100, 
	101, 104, 109, 115, 119, 121, 9, 10, 
	60, 62, 65, 90, 97, 122, 32, 43, 
	45, 61, 95, 100, 104, 107, 109, 115, 
	119, 121, 9, 10, 60, 62, 65, 90, 
	97, 122, 32, 43, 45, 61, 95, 100, 
	104, 109, 115, 119, 121, 9, 10, 60, 
	62, 65, 90, 97, 122, 32, 43, 45, 
	61, 95, 100, 101, 104, 109, 115, 119, 
	121, 9, 10, 60, 62, 65, 90, 97, 
	122, 32, 43, 45, 61, 95, 97, 100, 
	104, 109, 115, 119, 121, 9, 10, 60, 
	62, 65, 90, 98, 122, 32, 43, 45, 
	61, 95, 100, 104, 109, 114, 115, 119, 
	121, 9, 10, 60, 62, 65, 90, 97, 
	122, 32, 43, 45, 61, 95, 100, 104, 
	109, 115, 116, 119, 121, 9, 10, 60, 
	62, 65, 90, 97, 122, 32, 43, 45, 
	61, 95, 100, 101, 104, 109, 115, 119, 
	121, 9, 10, 60, 62, 65, 90, 97, 
	122, 32, 43, 45, 61, 95, 100, 104, 
	109, 110, 115, 119, 121, 9, 10, 60, 
	62, 65, 90, 97, 122, 32, 43, 45, 
	61, 95, 100, 104, 109, 115, 116, 119, 
	121, 9, 10, 60, 62, 65, 90, 97, 
	122, 32, 43, 45, 61, 95, 100, 104, 
	109, 115, 119, 121, 9, 10, 60, 62, 
	65, 90, 97, 122, 32, 43, 45, 61, 
	95, 100, 104, 109, 111, 115, 119, 121, 
	9, 10, 60, 62, 65, 90, 97, 122, 
	32, 43, 45, 61, 95, 100, 104, 109, 
	115, 117, 119, 121, 9, 10, 60, 62, 
	65, 90, 97, 122, 32, 43, 45, 61, 
	95, 100, 101, 104, 109, 115, 119, 121, 
	9, 10, 60, 62, 65, 90, 97, 122, 
	39, 92, 48, 57, 32, 43, 45, 46, 
	61, 9, 10, 48, 57, 60, 62, 48, 
	57, 32, 43, 45, 61, 9, 10, 48, 
	57, 60, 62, 32, 43, 45, 61, 95, 
	9, 10, 60, 62, 65, 90, 97, 122, 
	32, 44, 9, 10, 32, 44, 103, 9, 
	10, 32, 44, 65, 68, 97, 100, 103, 
	9, 10, 32, 103, 111, 9, 10, 32, 
	103, 111, 112, 9, 10, 32, 103, 111, 
	112, 9, 10, 32, 44, 103, 111, 112, 
	9, 10, 32, 97, 102, 103, 108, 111, 
	112, 9, 10, 32, 43, 45, 97, 102, 
	103, 105, 108, 111, 112, 9, 10, 32, 
	43, 45, 97, 100, 102, 103, 104, 105, 
	108, 109, 111, 112, 115, 119, 121, 9, 
	10, 32, 97, 102, 103, 105, 108, 111, 
	112, 119, 9, 10, 0
]

class << self
	attr_accessor :_pseudo_sql_single_lengths
	private :_pseudo_sql_single_lengths, :_pseudo_sql_single_lengths=
end
self._pseudo_sql_single_lengths = [
	0, 2, 4, 9, 1, 1, 1, 1, 
	1, 1, 2, 1, 1, 1, 1, 1, 
	2, 1, 2, 2, 5, 2, 1, 1, 
	2, 4, 7, 1, 1, 1, 1, 2, 
	2, 0, 4, 5, 2, 0, 3, 4, 
	2, 1, 1, 1, 1, 2, 2, 0, 
	3, 4, 1, 1, 1, 1, 1, 2, 
	1, 2, 2, 5, 7, 1, 1, 4, 
	3, 1, 1, 1, 1, 1, 1, 1, 
	1, 1, 1, 1, 2, 2, 4, 3, 
	2, 2, 1, 1, 1, 1, 1, 5, 
	2, 4, 5, 5, 5, 2, 10, 11, 
	6, 5, 2, 5, 10, 5, 5, 2, 
	11, 16, 1, 1, 5, 1, 1, 1, 
	2, 1, 1, 1, 1, 1, 1, 1, 
	1, 1, 1, 1, 1, 1, 1, 1, 
	1, 1, 0, 2, 0, 0, 12, 0, 
	11, 12, 13, 12, 13, 14, 13, 13, 
	13, 13, 13, 13, 12, 13, 13, 13, 
	13, 12, 13, 13, 13, 13, 13, 13, 
	13, 12, 13, 13, 13, 0, 2, 0, 
	0, 6, 0, 5, 6, 5, 1, 1, 
	4, 1, 1, 1, 1, 1, 1, 1, 
	5, 2, 1, 1, 1, 1, 1, 1, 
	1, 1, 1, 1, 1, 1, 1, 1, 
	1, 1, 1, 0, 2, 0, 0, 11, 
	0, 10, 11, 12, 11, 12, 13, 12, 
	12, 12, 12, 12, 12, 11, 12, 12, 
	12, 12, 11, 12, 12, 12, 12, 12, 
	12, 12, 11, 12, 12, 12, 0, 2, 
	0, 0, 5, 0, 4, 5, 2, 3, 
	7, 3, 4, 4, 5, 7, 10, 16, 
	9
]

class << self
	attr_accessor :_pseudo_sql_range_lengths
	private :_pseudo_sql_range_lengths, :_pseudo_sql_range_lengths=
end
self._pseudo_sql_range_lengths = [
	0, 3, 2, 1, 0, 0, 1, 0, 
	0, 0, 3, 0, 0, 0, 0, 1, 
	1, 0, 3, 3, 2, 1, 0, 1, 
	3, 2, 1, 0, 0, 0, 0, 2, 
	2, 1, 1, 1, 2, 1, 1, 1, 
	0, 0, 0, 0, 0, 2, 2, 1, 
	1, 1, 0, 0, 0, 0, 1, 1, 
	0, 3, 3, 2, 1, 0, 0, 0, 
	1, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 3, 3, 2, 1, 
	0, 1, 0, 0, 0, 0, 1, 4, 
	0, 2, 2, 4, 4, 0, 2, 2, 
	4, 4, 0, 0, 1, 4, 4, 0, 
	0, 1, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 1, 1, 1, 
	1, 2, 2, 2, 2, 2, 2, 2, 
	2, 2, 2, 2, 2, 2, 2, 2, 
	2, 2, 2, 2, 2, 2, 2, 2, 
	2, 2, 2, 2, 2, 0, 0, 0, 
	1, 1, 1, 1, 2, 4, 0, 0, 
	2, 0, 0, 0, 0, 0, 0, 1, 
	4, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 1, 3, 
	1, 3, 4, 4, 4, 4, 4, 4, 
	4, 4, 4, 4, 4, 4, 4, 4, 
	4, 4, 4, 4, 4, 4, 4, 4, 
	4, 4, 4, 4, 4, 4, 0, 0, 
	0, 1, 3, 1, 3, 4, 1, 1, 
	1, 1, 1, 1, 1, 1, 1, 1, 
	1
]

class << self
	attr_accessor :_pseudo_sql_index_offsets
	private :_pseudo_sql_index_offsets, :_pseudo_sql_index_offsets=
end
self._pseudo_sql_index_offsets = [
	0, 0, 6, 13, 24, 26, 28, 31, 
	33, 35, 37, 43, 45, 47, 49, 51, 
	54, 58, 60, 66, 72, 80, 84, 86, 
	89, 95, 102, 111, 113, 115, 117, 119, 
	124, 129, 131, 137, 144, 149, 151, 156, 
	162, 165, 167, 169, 171, 173, 178, 183, 
	185, 190, 196, 198, 200, 202, 204, 207, 
	211, 213, 219, 225, 233, 242, 244, 246, 
	251, 256, 258, 260, 262, 264, 266, 268, 
	270, 272, 274, 276, 278, 284, 290, 297, 
	302, 305, 309, 311, 313, 315, 317, 320, 
	330, 333, 340, 348, 358, 368, 371, 384, 
	398, 409, 419, 422, 428, 440, 450, 460, 
	463, 475, 493, 495, 497, 503, 505, 507, 
	509, 512, 514, 516, 518, 520, 522, 524, 
	526, 528, 530, 532, 534, 536, 538, 540, 
	542, 544, 546, 547, 550, 551, 553, 567, 
	569, 582, 597, 613, 628, 644, 661, 677, 
	693, 709, 725, 741, 757, 772, 788, 804, 
	820, 836, 851, 867, 883, 899, 915, 931, 
	947, 963, 978, 994, 1010, 1026, 1027, 1030, 
	1031, 1033, 1041, 1043, 1050, 1059, 1069, 1071, 
	1073, 1080, 1082, 1084, 1086, 1088, 1090, 1092, 
	1095, 1105, 1108, 1110, 1112, 1114, 1116, 1118, 
	1120, 1122, 1124, 1126, 1128, 1130, 1132, 1134, 
	1136, 1138, 1140, 1142, 1143, 1146, 1147, 1149, 
	1164, 1166, 1180, 1196, 1213, 1229, 1246, 1264, 
	1281, 1298, 1315, 1332, 1349, 1366, 1382, 1399, 
	1416, 1433, 1450, 1466, 1483, 1500, 1517, 1534, 
	1551, 1568, 1585, 1601, 1618, 1635, 1652, 1653, 
	1656, 1657, 1659, 1668, 1670, 1678, 1688, 1692, 
	1697, 1706, 1711, 1717, 1723, 1730, 1739, 1751, 
	1769
]

class << self
	attr_accessor :_pseudo_sql_trans_targs
	private :_pseudo_sql_trans_targs, :_pseudo_sql_trans_targs=
end
self._pseudo_sql_trans_targs = [
	1, 2, 1, 2, 2, 0, 3, 256, 
	3, 2, 2, 2, 0, 3, 4, 7, 
	11, 22, 27, 80, 69, 82, 3, 0, 
	5, 0, 6, 0, 1, 1, 0, 8, 
	0, 9, 0, 10, 0, 1, 2, 1, 
	2, 2, 0, 12, 0, 13, 0, 14, 
	0, 15, 0, 16, 16, 0, 16, 17, 
	16, 0, 18, 0, 19, 20, 19, 20, 
	20, 0, 19, 20, 19, 20, 20, 0, 
	21, 246, 21, 19, 20, 20, 20, 0, 
	21, 19, 21, 0, 23, 0, 24, 24, 
	0, 24, 25, 24, 25, 25, 0, 26, 
	253, 26, 25, 25, 25, 0, 26, 4, 
	7, 11, 27, 80, 69, 26, 0, 28, 
	0, 29, 0, 30, 0, 31, 0, 32, 
	33, 32, 34, 0, 32, 33, 32, 34, 
	0, 34, 0, 35, 252, 35, 36, 34, 
	0, 35, 36, 11, 40, 69, 35, 0, 
	36, 37, 36, 38, 0, 38, 0, 39, 
	251, 39, 38, 0, 39, 11, 40, 69, 
	39, 0, 41, 51, 0, 42, 0, 43, 
	0, 44, 0, 45, 0, 46, 47, 46, 
	48, 0, 46, 47, 46, 48, 0, 48, 
	0, 49, 250, 49, 48, 0, 49, 11, 
	50, 69, 49, 0, 51, 0, 52, 0, 
	53, 0, 54, 0, 55, 55, 0, 55, 
	56, 55, 0, 57, 0, 58, 59, 58, 
	59, 59, 0, 58, 59, 58, 59, 59, 
	0, 60, 248, 60, 58, 59, 59, 59, 
	0, 60, 58, 61, 65, 66, 68, 11, 
	60, 0, 62, 0, 63, 0, 64, 247, 
	64, 58, 0, 64, 58, 11, 64, 0, 
	61, 0, 67, 0, 63, 0, 66, 0, 
	70, 0, 71, 0, 72, 0, 73, 0, 
	74, 0, 75, 0, 76, 0, 77, 78, 
	77, 78, 78, 0, 77, 78, 77, 78, 
	78, 0, 79, 249, 79, 78, 78, 78, 
	0, 79, 11, 50, 79, 0, 41, 81, 
	0, 1, 52, 1, 0, 83, 0, 84, 
	0, 85, 0, 86, 0, 87, 87, 0, 
	87, 88, 239, 241, 245, 87, 242, 245, 
	245, 0, 89, 238, 88, 90, 91, 91, 
	173, 90, 96, 0, 90, 91, 91, 173, 
	180, 90, 96, 0, 92, 93, 204, 206, 
	210, 92, 207, 210, 210, 0, 92, 93, 
	204, 206, 210, 92, 207, 210, 210, 0, 
	94, 203, 93, 95, 91, 91, 173, 174, 
	177, 185, 193, 198, 201, 95, 96, 0, 
	95, 91, 91, 173, 174, 177, 180, 185, 
	193, 198, 201, 95, 96, 0, 97, 98, 
	166, 168, 173, 172, 97, 169, 172, 172, 
	0, 97, 98, 166, 168, 172, 97, 169, 
	172, 172, 0, 99, 165, 98, 100, 254, 
	100, 101, 101, 0, 100, 101, 101, 4, 
	7, 11, 22, 27, 80, 69, 100, 0, 
	102, 103, 131, 133, 137, 102, 134, 137, 
	137, 0, 102, 103, 131, 133, 137, 102, 
	134, 137, 137, 0, 104, 130, 103, 105, 
	255, 105, 101, 101, 106, 109, 112, 120, 
	125, 128, 0, 105, 101, 101, 4, 106, 
	7, 11, 109, 22, 27, 112, 80, 69, 
	120, 125, 128, 105, 0, 107, 0, 108, 
	0, 100, 254, 100, 101, 101, 0, 110, 
	0, 111, 0, 108, 0, 113, 117, 0, 
	114, 0, 115, 0, 116, 0, 108, 0, 
	118, 0, 119, 0, 108, 0, 121, 0, 
	122, 0, 123, 0, 124, 0, 108, 0, 
	126, 0, 127, 0, 108, 0, 129, 0, 
	111, 0, 103, 104, 132, 131, 131, 134, 
	0, 105, 255, 105, 101, 101, 135, 106, 
	109, 112, 120, 125, 128, 134, 0, 136, 
	0, 105, 255, 105, 101, 101, 106, 109, 
	112, 120, 125, 128, 136, 0, 105, 255, 
	105, 101, 101, 137, 138, 140, 141, 144, 
	150, 154, 137, 137, 0, 105, 255, 105, 
	101, 101, 137, 139, 138, 140, 141, 144, 
	150, 154, 137, 137, 0, 105, 255, 105, 
	101, 101, 137, 138, 140, 141, 144, 150, 
	164, 137, 137, 0, 105, 255, 105, 101, 
	101, 137, 138, 140, 141, 163, 144, 150, 
	154, 137, 137, 0, 105, 255, 105, 101, 
	101, 137, 138, 140, 142, 141, 159, 144, 
	150, 154, 137, 137, 0, 105, 255, 105, 
	101, 101, 137, 138, 140, 141, 143, 144, 
	150, 154, 137, 137, 0, 105, 255, 105, 
	101, 101, 137, 138, 140, 141, 144, 157, 
	150, 154, 137, 137, 0, 105, 255, 105, 
	101, 101, 137, 138, 145, 140, 141, 144, 
	150, 154, 137, 137, 0, 105, 255, 105, 
	101, 101, 137, 146, 138, 140, 141, 144, 
	150, 154, 137, 137, 0, 105, 255, 105, 
	101, 101, 137, 138, 140, 141, 147, 144, 
	150, 154, 137, 137, 0, 105, 255, 105, 
	101, 101, 137, 138, 140, 141, 148, 144, 
	150, 154, 137, 137, 0, 105, 255, 105, 
	101, 101, 137, 149, 140, 141, 144, 150, 
	154, 137, 137, 0, 105, 255, 105, 101, 
	101, 137, 139, 138, 140, 141, 144, 150, 
	154, 137, 137, 0, 105, 255, 105, 101, 
	101, 137, 138, 151, 140, 141, 144, 150, 
	154, 137, 137, 0, 105, 255, 105, 101, 
	101, 137, 138, 152, 140, 141, 144, 150, 
	154, 137, 137, 0, 105, 255, 105, 101, 
	101, 137, 138, 140, 153, 141, 144, 150, 
	154, 137, 137, 0, 105, 255, 105, 101, 
	101, 137, 138, 140, 141, 144, 150, 154, 
	137, 137, 0, 105, 255, 105, 101, 101, 
	137, 138, 155, 140, 141, 144, 150, 154, 
	137, 137, 0, 105, 255, 105, 101, 101, 
	137, 156, 138, 140, 141, 144, 150, 154, 
	137, 137, 0, 105, 255, 105, 101, 101, 
	137, 138, 140, 141, 153, 144, 150, 154, 
	137, 137, 0, 105, 255, 105, 101, 101, 
	137, 138, 140, 141, 144, 158, 150, 154, 
	137, 137, 0, 105, 255, 105, 101, 101, 
	137, 138, 153, 140, 141, 144, 150, 154, 
	137, 137, 0, 105, 255, 105, 101, 101, 
	137, 138, 140, 141, 160, 144, 150, 154, 
	137, 137, 0, 105, 255, 105, 101, 101, 
	137, 138, 140, 141, 144, 161, 150, 154, 
	137, 137, 0, 105, 255, 105, 101, 101, 
	137, 138, 162, 141, 144, 150, 154, 137, 
	137, 0, 105, 255, 105, 101, 101, 137, 
	138, 140, 141, 163, 144, 150, 154, 137, 
	137, 0, 105, 255, 105, 101, 101, 137, 
	138, 140, 141, 144, 156, 150, 154, 137, 
	137, 0, 105, 255, 105, 101, 101, 137, 
	138, 155, 140, 141, 144, 150, 154, 137, 
	137, 0, 98, 99, 167, 166, 166, 169, 
	0, 100, 254, 100, 101, 101, 170, 169, 
	0, 171, 0, 100, 254, 100, 101, 101, 
	171, 0, 100, 254, 100, 101, 101, 172, 
	172, 172, 0, 97, 98, 166, 168, 172, 
	97, 169, 172, 172, 0, 175, 0, 176, 
	0, 90, 91, 91, 173, 90, 96, 0, 
	178, 0, 179, 0, 176, 0, 181, 0, 
	182, 0, 183, 0, 184, 184, 0, 184, 
	98, 166, 168, 172, 184, 169, 172, 172, 
	0, 186, 190, 0, 187, 0, 188, 0, 
	189, 0, 176, 0, 191, 0, 192, 0, 
	176, 0, 194, 0, 195, 0, 196, 0, 
	197, 0, 176, 0, 199, 0, 200, 0, 
	176, 0, 202, 0, 179, 0, 93, 94, 
	205, 204, 204, 207, 0, 95, 91, 91, 
	208, 173, 174, 177, 185, 193, 198, 201, 
	95, 207, 96, 0, 209, 0, 95, 91, 
	91, 173, 174, 177, 185, 193, 198, 201, 
	95, 209, 96, 0, 95, 91, 91, 173, 
	210, 211, 213, 214, 217, 223, 227, 95, 
	96, 210, 210, 0, 95, 91, 91, 173, 
	210, 212, 211, 213, 214, 217, 223, 227, 
	95, 96, 210, 210, 0, 95, 91, 91, 
	173, 210, 211, 213, 214, 217, 223, 237, 
	95, 96, 210, 210, 0, 95, 91, 91, 
	173, 210, 211, 213, 214, 236, 217, 223, 
	227, 95, 96, 210, 210, 0, 95, 91, 
	91, 173, 210, 211, 213, 215, 214, 232, 
	217, 223, 227, 95, 96, 210, 210, 0, 
	95, 91, 91, 173, 210, 211, 213, 214, 
	216, 217, 223, 227, 95, 96, 210, 210, 
	0, 95, 91, 91, 173, 210, 211, 213, 
	214, 217, 230, 223, 227, 95, 96, 210, 
	210, 0, 95, 91, 91, 173, 210, 211, 
	218, 213, 214, 217, 223, 227, 95, 96, 
	210, 210, 0, 95, 91, 91, 173, 210, 
	219, 211, 213, 214, 217, 223, 227, 95, 
	96, 210, 210, 0, 95, 91, 91, 173, 
	210, 211, 213, 214, 220, 217, 223, 227, 
	95, 96, 210, 210, 0, 95, 91, 91, 
	173, 210, 211, 213, 214, 221, 217, 223, 
	227, 95, 96, 210, 210, 0, 95, 91, 
	91, 173, 210, 222, 213, 214, 217, 223, 
	227, 95, 96, 210, 210, 0, 95, 91, 
	91, 173, 210, 212, 211, 213, 214, 217, 
	223, 227, 95, 96, 210, 210, 0, 95, 
	91, 91, 173, 210, 211, 224, 213, 214, 
	217, 223, 227, 95, 96, 210, 210, 0, 
	95, 91, 91, 173, 210, 211, 225, 213, 
	214, 217, 223, 227, 95, 96, 210, 210, 
	0, 95, 91, 91, 173, 210, 211, 213, 
	226, 214, 217, 223, 227, 95, 96, 210, 
	210, 0, 95, 91, 91, 173, 210, 211, 
	213, 214, 217, 223, 227, 95, 96, 210, 
	210, 0, 95, 91, 91, 173, 210, 211, 
	228, 213, 214, 217, 223, 227, 95, 96, 
	210, 210, 0, 95, 91, 91, 173, 210, 
	229, 211, 213, 214, 217, 223, 227, 95, 
	96, 210, 210, 0, 95, 91, 91, 173, 
	210, 211, 213, 214, 226, 217, 223, 227, 
	95, 96, 210, 210, 0, 95, 91, 91, 
	173, 210, 211, 213, 214, 217, 231, 223, 
	227, 95, 96, 210, 210, 0, 95, 91, 
	91, 173, 210, 211, 226, 213, 214, 217, 
	223, 227, 95, 96, 210, 210, 0, 95, 
	91, 91, 173, 210, 211, 213, 214, 233, 
	217, 223, 227, 95, 96, 210, 210, 0, 
	95, 91, 91, 173, 210, 211, 213, 214, 
	217, 234, 223, 227, 95, 96, 210, 210, 
	0, 95, 91, 91, 173, 210, 211, 235, 
	214, 217, 223, 227, 95, 96, 210, 210, 
	0, 95, 91, 91, 173, 210, 211, 213, 
	214, 236, 217, 223, 227, 95, 96, 210, 
	210, 0, 95, 91, 91, 173, 210, 211, 
	213, 214, 217, 229, 223, 227, 95, 96, 
	210, 210, 0, 95, 91, 91, 173, 210, 
	211, 228, 213, 214, 217, 223, 227, 95, 
	96, 210, 210, 0, 88, 89, 240, 239, 
	239, 242, 0, 90, 91, 91, 243, 173, 
	90, 242, 96, 0, 244, 0, 90, 91, 
	91, 173, 90, 244, 96, 0, 90, 91, 
	91, 173, 245, 90, 96, 245, 245, 0, 
	21, 19, 21, 0, 64, 58, 11, 64, 
	0, 60, 58, 61, 65, 66, 68, 11, 
	60, 0, 79, 11, 50, 79, 0, 49, 
	11, 50, 69, 49, 0, 39, 11, 40, 
	69, 39, 0, 35, 36, 11, 40, 69, 
	35, 0, 26, 4, 7, 11, 27, 80, 
	69, 26, 0, 100, 101, 101, 4, 7, 
	11, 22, 27, 80, 69, 100, 0, 105, 
	101, 101, 4, 106, 7, 11, 109, 22, 
	27, 112, 80, 69, 120, 125, 128, 105, 
	0, 3, 4, 7, 11, 22, 27, 80, 
	69, 82, 3, 0, 0
]

class << self
	attr_accessor :_pseudo_sql_trans_actions
	private :_pseudo_sql_trans_actions, :_pseudo_sql_trans_actions=
end
self._pseudo_sql_trans_actions = [
	0, 1, 0, 1, 1, 0, 15, 15, 
	15, 1, 1, 1, 41, 0, 1, 0, 
	0, 0, 0, 1, 0, 0, 0, 0, 
	1, 0, 1, 0, 39, 39, 0, 0, 
	0, 0, 0, 0, 0, 37, 85, 37, 
	85, 85, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 35, 82, 35, 82, 
	82, 0, 0, 1, 0, 1, 1, 0, 
	9, 9, 9, 9, 1, 1, 1, 41, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 1, 0, 1, 1, 0, 23, 
	23, 23, 1, 1, 1, 41, 0, 1, 
	0, 0, 0, 1, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 31, 
	76, 31, 76, 0, 0, 1, 0, 1, 
	0, 1, 0, 5, 5, 5, 5, 1, 
	41, 0, 0, 0, 0, 0, 0, 0, 
	0, 1, 0, 1, 0, 1, 0, 5, 
	5, 5, 1, 41, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 25, 70, 25, 
	70, 0, 0, 1, 0, 1, 0, 1, 
	0, 5, 5, 5, 1, 41, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 33, 79, 33, 
	79, 79, 0, 0, 1, 0, 1, 1, 
	0, 9, 9, 9, 9, 1, 1, 1, 
	41, 0, 0, 1, 1, 1, 1, 0, 
	0, 0, 1, 0, 1, 0, 11, 11, 
	11, 11, 41, 0, 0, 0, 0, 0, 
	1, 0, 1, 0, 1, 0, 1, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 29, 73, 
	29, 73, 73, 0, 0, 1, 0, 1, 
	1, 0, 27, 27, 27, 1, 1, 1, 
	41, 0, 0, 0, 0, 0, 0, 1, 
	0, 39, 0, 39, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 21, 21, 0, 
	0, 0, 0, 1, 1, 0, 1, 1, 
	1, 0, 0, 0, 1, 3, 46, 46, 
	46, 3, 46, 0, 0, 1, 1, 1, 
	1, 0, 1, 0, 17, 17, 17, 64, 
	64, 17, 64, 64, 64, 0, 0, 0, 
	0, 1, 1, 0, 1, 1, 1, 0, 
	0, 0, 1, 3, 46, 46, 46, 3, 
	3, 3, 3, 3, 3, 3, 46, 0, 
	0, 1, 1, 1, 0, 0, 1, 0, 
	0, 0, 0, 0, 1, 0, 13, 13, 
	13, 61, 1, 61, 13, 61, 61, 61, 
	0, 0, 0, 0, 1, 1, 0, 1, 
	1, 1, 0, 0, 0, 1, 3, 3, 
	3, 46, 46, 41, 0, 1, 1, 1, 
	0, 0, 0, 0, 1, 0, 0, 0, 
	17, 17, 17, 64, 64, 17, 64, 64, 
	64, 0, 0, 0, 0, 1, 1, 0, 
	1, 1, 1, 0, 0, 0, 1, 3, 
	3, 3, 46, 46, 3, 3, 3, 3, 
	3, 3, 41, 0, 1, 1, 1, 0, 
	0, 0, 0, 0, 0, 0, 1, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 19, 19, 19, 67, 67, 41, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 1, 0, 0, 1, 1, 1, 
	0, 5, 5, 5, 49, 49, 1, 5, 
	5, 5, 5, 5, 5, 1, 41, 1, 
	0, 7, 7, 7, 52, 52, 7, 7, 
	7, 7, 7, 7, 1, 41, 9, 9, 
	9, 55, 55, 1, 43, 43, 43, 43, 
	43, 43, 1, 1, 41, 9, 9, 9, 
	55, 55, 1, 1, 43, 43, 43, 43, 
	43, 43, 1, 1, 41, 9, 9, 9, 
	55, 55, 1, 43, 43, 43, 43, 43, 
	43, 1, 1, 41, 9, 9, 9, 55, 
	55, 1, 43, 43, 43, 1, 43, 43, 
	43, 1, 1, 41, 9, 9, 9, 55, 
	55, 1, 43, 43, 1, 43, 1, 43, 
	43, 43, 1, 1, 41, 9, 9, 9, 
	55, 55, 1, 43, 43, 43, 1, 43, 
	43, 43, 1, 1, 41, 9, 9, 9, 
	55, 55, 1, 43, 43, 43, 43, 1, 
	43, 43, 1, 1, 41, 9, 9, 9, 
	55, 55, 1, 43, 1, 43, 43, 43, 
	43, 43, 1, 1, 41, 9, 9, 9, 
	55, 55, 1, 1, 43, 43, 43, 43, 
	43, 43, 1, 1, 41, 9, 9, 9, 
	55, 55, 1, 43, 43, 43, 1, 43, 
	43, 43, 1, 1, 41, 9, 9, 9, 
	55, 55, 1, 43, 43, 43, 1, 43, 
	43, 43, 1, 1, 41, 9, 9, 9, 
	55, 55, 1, 43, 43, 43, 43, 43, 
	43, 1, 1, 41, 58, 58, 58, 88, 
	88, 1, 1, 43, 43, 43, 43, 43, 
	43, 1, 1, 41, 9, 9, 9, 55, 
	55, 1, 43, 1, 43, 43, 43, 43, 
	43, 1, 1, 41, 9, 9, 9, 55, 
	55, 1, 43, 1, 43, 43, 43, 43, 
	43, 1, 1, 41, 9, 9, 9, 55, 
	55, 1, 43, 43, 1, 43, 43, 43, 
	43, 1, 1, 41, 58, 58, 58, 88, 
	88, 1, 43, 43, 43, 43, 43, 43, 
	1, 1, 41, 9, 9, 9, 55, 55, 
	1, 43, 1, 43, 43, 43, 43, 43, 
	1, 1, 41, 9, 9, 9, 55, 55, 
	1, 1, 43, 43, 43, 43, 43, 43, 
	1, 1, 41, 9, 9, 9, 55, 55, 
	1, 43, 43, 43, 1, 43, 43, 43, 
	1, 1, 41, 9, 9, 9, 55, 55, 
	1, 43, 43, 43, 43, 1, 43, 43, 
	1, 1, 41, 9, 9, 9, 55, 55, 
	1, 43, 1, 43, 43, 43, 43, 43, 
	1, 1, 41, 9, 9, 9, 55, 55, 
	1, 43, 43, 43, 1, 43, 43, 43, 
	1, 1, 41, 9, 9, 9, 55, 55, 
	1, 43, 43, 43, 43, 1, 43, 43, 
	1, 1, 41, 9, 9, 9, 55, 55, 
	1, 43, 43, 43, 43, 43, 43, 1, 
	1, 41, 58, 58, 58, 88, 88, 1, 
	43, 43, 43, 1, 43, 43, 43, 1, 
	1, 41, 9, 9, 9, 55, 55, 1, 
	43, 43, 43, 43, 1, 43, 43, 1, 
	1, 41, 58, 58, 58, 88, 88, 1, 
	43, 1, 43, 43, 43, 43, 43, 1, 
	1, 41, 1, 0, 0, 1, 1, 1, 
	0, 5, 5, 5, 49, 49, 1, 1, 
	41, 1, 0, 7, 7, 7, 52, 52, 
	1, 41, 9, 9, 9, 55, 55, 1, 
	1, 1, 41, 13, 13, 13, 61, 61, 
	13, 61, 61, 61, 0, 0, 0, 0, 
	0, 19, 67, 67, 67, 19, 67, 0, 
	0, 0, 0, 0, 0, 0, 1, 0, 
	1, 0, 1, 0, 0, 0, 0, 13, 
	13, 13, 61, 61, 13, 61, 61, 61, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 1, 0, 
	0, 1, 1, 1, 0, 5, 49, 49, 
	1, 49, 5, 5, 5, 5, 5, 5, 
	5, 1, 49, 0, 1, 0, 7, 52, 
	52, 52, 7, 7, 7, 7, 7, 7, 
	7, 1, 52, 0, 9, 55, 55, 55, 
	1, 43, 43, 43, 43, 43, 43, 9, 
	55, 1, 1, 0, 9, 55, 55, 55, 
	1, 1, 43, 43, 43, 43, 43, 43, 
	9, 55, 1, 1, 0, 9, 55, 55, 
	55, 1, 43, 43, 43, 43, 43, 43, 
	9, 55, 1, 1, 0, 9, 55, 55, 
	55, 1, 43, 43, 43, 1, 43, 43, 
	43, 9, 55, 1, 1, 0, 9, 55, 
	55, 55, 1, 43, 43, 1, 43, 1, 
	43, 43, 43, 9, 55, 1, 1, 0, 
	9, 55, 55, 55, 1, 43, 43, 43, 
	1, 43, 43, 43, 9, 55, 1, 1, 
	0, 9, 55, 55, 55, 1, 43, 43, 
	43, 43, 1, 43, 43, 9, 55, 1, 
	1, 0, 9, 55, 55, 55, 1, 43, 
	1, 43, 43, 43, 43, 43, 9, 55, 
	1, 1, 0, 9, 55, 55, 55, 1, 
	1, 43, 43, 43, 43, 43, 43, 9, 
	55, 1, 1, 0, 9, 55, 55, 55, 
	1, 43, 43, 43, 1, 43, 43, 43, 
	9, 55, 1, 1, 0, 9, 55, 55, 
	55, 1, 43, 43, 43, 1, 43, 43, 
	43, 9, 55, 1, 1, 0, 9, 55, 
	55, 55, 1, 43, 43, 43, 43, 43, 
	43, 9, 55, 1, 1, 0, 58, 88, 
	88, 88, 1, 1, 43, 43, 43, 43, 
	43, 43, 58, 88, 1, 1, 0, 9, 
	55, 55, 55, 1, 43, 1, 43, 43, 
	43, 43, 43, 9, 55, 1, 1, 0, 
	9, 55, 55, 55, 1, 43, 1, 43, 
	43, 43, 43, 43, 9, 55, 1, 1, 
	0, 9, 55, 55, 55, 1, 43, 43, 
	1, 43, 43, 43, 43, 9, 55, 1, 
	1, 0, 58, 88, 88, 88, 1, 43, 
	43, 43, 43, 43, 43, 58, 88, 1, 
	1, 0, 9, 55, 55, 55, 1, 43, 
	1, 43, 43, 43, 43, 43, 9, 55, 
	1, 1, 0, 9, 55, 55, 55, 1, 
	1, 43, 43, 43, 43, 43, 43, 9, 
	55, 1, 1, 0, 9, 55, 55, 55, 
	1, 43, 43, 43, 1, 43, 43, 43, 
	9, 55, 1, 1, 0, 9, 55, 55, 
	55, 1, 43, 43, 43, 43, 1, 43, 
	43, 9, 55, 1, 1, 0, 9, 55, 
	55, 55, 1, 43, 1, 43, 43, 43, 
	43, 43, 9, 55, 1, 1, 0, 9, 
	55, 55, 55, 1, 43, 43, 43, 1, 
	43, 43, 43, 9, 55, 1, 1, 0, 
	9, 55, 55, 55, 1, 43, 43, 43, 
	43, 1, 43, 43, 9, 55, 1, 1, 
	0, 9, 55, 55, 55, 1, 43, 43, 
	43, 43, 43, 43, 9, 55, 1, 1, 
	0, 58, 88, 88, 88, 1, 43, 43, 
	43, 1, 43, 43, 43, 58, 88, 1, 
	1, 0, 9, 55, 55, 55, 1, 43, 
	43, 43, 43, 1, 43, 43, 9, 55, 
	1, 1, 0, 58, 88, 88, 88, 1, 
	43, 1, 43, 43, 43, 43, 43, 58, 
	88, 1, 1, 0, 1, 0, 0, 1, 
	1, 1, 0, 5, 49, 49, 1, 49, 
	5, 1, 49, 0, 1, 0, 7, 52, 
	52, 52, 7, 1, 52, 0, 9, 55, 
	55, 55, 1, 9, 55, 1, 1, 0, 
	0, 0, 0, 41, 0, 0, 0, 0, 
	41, 0, 0, 1, 1, 1, 1, 0, 
	0, 41, 0, 0, 0, 0, 41, 0, 
	0, 0, 0, 0, 41, 0, 0, 0, 
	0, 0, 41, 0, 0, 0, 0, 0, 
	0, 41, 0, 1, 0, 0, 0, 1, 
	0, 0, 41, 0, 1, 1, 1, 0, 
	0, 0, 0, 1, 0, 0, 41, 0, 
	1, 1, 1, 0, 0, 0, 0, 0, 
	0, 0, 1, 0, 0, 0, 0, 0, 
	41, 0, 1, 0, 0, 0, 0, 1, 
	0, 0, 0, 41, 0
]

class << self
	attr_accessor :_pseudo_sql_eof_actions
	private :_pseudo_sql_eof_actions, :_pseudo_sql_eof_actions=
end
self._pseudo_sql_eof_actions = [
	0, 0, 41, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 41, 0, 0, 0, 
	0, 41, 0, 0, 0, 0, 0, 0, 
	0, 0, 41, 0, 0, 0, 41, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	41, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 41, 0, 0, 0, 41, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 41, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 41, 0, 0, 0, 0, 
	41, 0, 0, 0, 41, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 41, 0, 
	41, 41, 41, 41, 41, 41, 41, 41, 
	41, 41, 41, 41, 41, 41, 41, 41, 
	41, 41, 41, 41, 41, 41, 41, 41, 
	41, 41, 41, 41, 41, 0, 0, 0, 
	0, 41, 0, 41, 41, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0
]

class << self
	attr_accessor :pseudo_sql_start
end
self.pseudo_sql_start = 1;
class << self
	attr_accessor :pseudo_sql_first_final
end
self.pseudo_sql_first_final = 246;
class << self
	attr_accessor :pseudo_sql_error
end
self.pseudo_sql_error = 0;

class << self
	attr_accessor :pseudo_sql_en_main
end
self.pseudo_sql_en_main = 1;

# line 204 "lib/pseudo_sql_parser.rl"

  def self.parse(string)
    data = "#{string}\n"
    stack = [[:query]]
    last  = stack.last
    str_buf    = ""
    eof = 0;
    
# line 1013 "lib/pseudo_sql_parser.rb"
begin
	p ||= 0
	pe ||= data.length
	cs = pseudo_sql_start
end
# line 212 "lib/pseudo_sql_parser.rl"
    
# line 1021 "lib/pseudo_sql_parser.rb"
begin
	_klen, _trans, _keys, _acts, _nacts = nil
	_goto_level = 0
	_resume = 10
	_eof_trans = 15
	_again = 20
	_test_eof = 30
	_out = 40
	while true
	_trigger_goto = false
	if _goto_level <= 0
	if p == pe
		_goto_level = _test_eof
		next
	end
	if cs == 0
		_goto_level = _out
		next
	end
	end
	if _goto_level <= _resume
	_keys = _pseudo_sql_key_offsets[cs]
	_trans = _pseudo_sql_index_offsets[cs]
	_klen = _pseudo_sql_single_lengths[cs]
	_break_match = false
	
	begin
	  if _klen > 0
	     _lower = _keys
	     _upper = _keys + _klen - 1

	     loop do
	        break if _upper < _lower
	        _mid = _lower + ( (_upper - _lower) >> 1 )

	        if data[p] < _pseudo_sql_trans_keys[_mid]
	           _upper = _mid - 1
	        elsif data[p] > _pseudo_sql_trans_keys[_mid]
	           _lower = _mid + 1
	        else
	           _trans += (_mid - _keys)
	           _break_match = true
	           break
	        end
	     end # loop
	     break if _break_match
	     _keys += _klen
	     _trans += _klen
	  end
	  _klen = _pseudo_sql_range_lengths[cs]
	  if _klen > 0
	     _lower = _keys
	     _upper = _keys + (_klen << 1) - 2
	     loop do
	        break if _upper < _lower
	        _mid = _lower + (((_upper-_lower) >> 1) & ~1)
	        if data[p] < _pseudo_sql_trans_keys[_mid]
	          _upper = _mid - 2
	        elsif data[p] > _pseudo_sql_trans_keys[_mid+1]
	          _lower = _mid + 2
	        else
	          _trans += ((_mid - _keys) >> 1)
	          _break_match = true
	          break
	        end
	     end # loop
	     break if _break_match
	     _trans += _klen
	  end
	end while false
	cs = _pseudo_sql_trans_targs[_trans]
	if _pseudo_sql_trans_actions[_trans] != 0
		_acts = _pseudo_sql_trans_actions[_trans]
		_nacts = _pseudo_sql_actions[_acts]
		_acts += 1
		while _nacts > 0
			_nacts -= 1
			_acts += 1
			case _pseudo_sql_actions[_acts - 1]
when 0 then
# line 64 "lib/pseudo_sql_parser.rl"
		begin

      str_buf += data[p].chr
    		end
# line 64 "lib/pseudo_sql_parser.rl"
when 1 then
# line 68 "lib/pseudo_sql_parser.rl"
		begin

      last << [:string, str_buf]
      str_buf = ""
    		end
# line 68 "lib/pseudo_sql_parser.rl"
when 2 then
# line 73 "lib/pseudo_sql_parser.rl"
		begin

      last << [:integer, str_buf]
      str_buf = ""
    		end
# line 73 "lib/pseudo_sql_parser.rl"
when 3 then
# line 78 "lib/pseudo_sql_parser.rl"
		begin

      last << [:real, str_buf]
      str_buf = ""
    		end
# line 78 "lib/pseudo_sql_parser.rl"
when 4 then
# line 83 "lib/pseudo_sql_parser.rl"
		begin

      last << [:field, str_buf]
      str_buf = ""
    		end
# line 83 "lib/pseudo_sql_parser.rl"
when 5 then
# line 88 "lib/pseudo_sql_parser.rl"
		begin

      last = apply_op(stack, str_buf.downcase.to_sym, false)
      str_buf = ""
    		end
# line 88 "lib/pseudo_sql_parser.rl"
when 6 then
# line 93 "lib/pseudo_sql_parser.rl"
		begin

      last = apply_op(stack, str_buf.to_sym)
      str_buf = ""
    		end
# line 93 "lib/pseudo_sql_parser.rl"
when 7 then
# line 98 "lib/pseudo_sql_parser.rl"
		begin

      last = insert(stack, [:relation, str_buf])
      str_buf = ""
    		end
# line 98 "lib/pseudo_sql_parser.rl"
when 8 then
# line 103 "lib/pseudo_sql_parser.rl"
		begin

      last = apply_op(stack, str_buf.to_sym)
      str_buf = ""
    		end
# line 103 "lib/pseudo_sql_parser.rl"
when 9 then
# line 108 "lib/pseudo_sql_parser.rl"
		begin

      last = apply_op(stack, :interval)
      last << str_buf
      str_buf = ""
    		end
# line 108 "lib/pseudo_sql_parser.rl"
when 10 then
# line 114 "lib/pseudo_sql_parser.rl"
		begin

      last = apply_op(stack, :filter)
    		end
# line 114 "lib/pseudo_sql_parser.rl"
when 11 then
# line 118 "lib/pseudo_sql_parser.rl"
		begin

      last = apply_op(stack, :scope)
      last << str_buf
      str_buf = ""
    		end
# line 118 "lib/pseudo_sql_parser.rl"
when 12 then
# line 124 "lib/pseudo_sql_parser.rl"
		begin

      last = apply_op(stack, :offset)
    		end
# line 124 "lib/pseudo_sql_parser.rl"
when 13 then
# line 128 "lib/pseudo_sql_parser.rl"
		begin

      last << [:param, str_buf]
      str_buf = ""
    		end
# line 128 "lib/pseudo_sql_parser.rl"
when 14 then
# line 133 "lib/pseudo_sql_parser.rl"
		begin

      last = apply_op(stack, :paginate)
    		end
# line 133 "lib/pseudo_sql_parser.rl"
when 15 then
# line 137 "lib/pseudo_sql_parser.rl"
		begin

      last = apply_op(stack, :limit)
    		end
# line 137 "lib/pseudo_sql_parser.rl"
when 16 then
# line 141 "lib/pseudo_sql_parser.rl"
		begin

      last = apply_op(stack, :order)
      str_buf = ""  # because 'or_clause' is matched (short ambiguity during parsing)
    		end
# line 141 "lib/pseudo_sql_parser.rl"
when 17 then
# line 146 "lib/pseudo_sql_parser.rl"
		begin

      last = apply_op(stack, :group)
    		end
# line 146 "lib/pseudo_sql_parser.rl"
when 18 then
# line 150 "lib/pseudo_sql_parser.rl"
		begin

      last = apply_op(stack, :from)
    		end
# line 150 "lib/pseudo_sql_parser.rl"
when 19 then
# line 154 "lib/pseudo_sql_parser.rl"
		begin

      last = apply_op(stack, "clause_#{str_buf}".to_sym)
      str_buf = ""
    		end
# line 154 "lib/pseudo_sql_parser.rl"
when 20 then
# line 163 "lib/pseudo_sql_parser.rl"
		begin

      p = p - 1;
      raise Exception.new("Syntax error near '#{data[p..-1]}'.")
    		end
# line 163 "lib/pseudo_sql_parser.rl"
# line 1264 "lib/pseudo_sql_parser.rb"
			end # action switch
		end
	end
	if _trigger_goto
		next
	end
	end
	if _goto_level <= _again
	if cs == 0
		_goto_level = _out
		next
	end
	p += 1
	if p != pe
		_goto_level = _resume
		next
	end
	end
	if _goto_level <= _test_eof
	if p == eof
	__acts = _pseudo_sql_eof_actions[cs]
	__nacts =  _pseudo_sql_actions[__acts]
	__acts += 1
	while __nacts > 0
		__nacts -= 1
		__acts += 1
		case _pseudo_sql_actions[__acts - 1]
when 20 then
# line 163 "lib/pseudo_sql_parser.rl"
		begin

      p = p - 1;
      raise Exception.new("Syntax error near '#{data[p..-1]}'.")
    		end
# line 163 "lib/pseudo_sql_parser.rl"
# line 1300 "lib/pseudo_sql_parser.rb"
		end # eof action switch
	end
	if _trigger_goto
		next
	end
end
	end
	if _goto_level <= _out
		break
	end
	end
	end
# line 213 "lib/pseudo_sql_parser.rl"
    stack.first
  end
  
  def self.apply_op(stack, op, change_last = true)
    pop_stack(stack, op)
    last = stack.last
    change_elem = last.last
    last[-1] = [op.to_sym, change_elem]
    if change_last
      stack.push last[-1]
    end
    stack.last
  end
  
  def self.insert(stack, arg)
    # insert [:relation, "..."]
    # stack: [[:query]]  --> [[:query, [:relation, "..."]], [:relation, "..."]]
    pop_stack(stack, arg.first)
    last = stack.last
    last << arg
    stack.push last.last
    stack.last
  end
  
  def self.pop_stack(stack, op)
    debug_stack(stack, op)
    stack_op = stack.last.first
    while OP_PRECEDENCE[op.to_s.upcase] <= OP_PRECEDENCE[stack_op.to_s.upcase]
      stack.pop
      debug_stack(stack, op)
      stack_op = stack.last.first
    end
    puts "done"
  end
  
  def self.debug_stack(stack, msg = '')
    puts "======= #{msg} ======="
    stack.reverse_each do |s|
      puts s.inspect
    end
    puts "======================"
  end
end